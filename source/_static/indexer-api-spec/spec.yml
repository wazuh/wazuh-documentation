openapi: 3.0.0

info:
  title: Wazuh indexer API reference
  description: |
    The Wazuh indexer API is an open source RESTful API. It allows interaction with the Wazuh indexer from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh indexer API is used to perform actions like adding and querying the indexes, modifying the Wazuh indexer settings, etc.

    # Authentication

    Wazuh indexer API endpoints require authentication to be used. There are multiple options on what authentication mechanism to use including basic HTTP authentication and JSON Web Token (JWT). More information can be seen in [Logging into the Wazuh indexer API](https://documentation.wazuh.com/current/user-manual/indexer-api/getting-started.html#logging-into-the-wazuh-indexer-api).
  version: 1.0.0

servers:
  - url: '{protocol}://{host}:{port}'
    description: Wazuh indexer API server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol for API communication
      host:
        default: localhost
        description: Hostname or IP address
      port:
        default: '9200'
        description: API port number

security:
  - basicAuth: []
  - jwtAuth: []

paths:
  /:
    get:
      tags:
        - Get API info
      summary: API info
      description: Return basic information about the API
      operationId: getApiInfo
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfo'
              example:
                name: "node-1"
                cluster_name: "wazuh-cluster"
                cluster_uuid: "XUqydNCQTuCnvtXobnRZ8w"
                version:
                  number: "7.10.2"
                  build_type: "deb"
                  build_hash: "9fd1835bba77ae04d48550eb4dc9be4787070806"
                  build_date: "2024-08-30T10:06:03.028357Z"
                  build_snapshot: false
                  lucene_version: "9.10.0"
                  minimum_wire_compatibility_version: "7.10.0"
                  minimum_index_compatibility_version: "7.0.0"
                tagline: "The OpenSearch Project: https://opensearch.org/"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenApiInfo'

  /_analyze:
    get:
      tags: [Analyze API]
      summary: Text analysis (Global GET)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeGlobalGet
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Analyze API]
      summary: Text analysis (Global POST)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeGlobalPost
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_aliases:
    $ref: 'index_api.yml#/paths/~1_aliases'

  /{target}/_alias/{alias_name}:
    $ref: 'index_api.yml#/paths/~1{target}~1_alias~1{alias_name}'

  /_alias/{alias_name}:
    $ref: 'index_api.yml#/paths/~1_alias~1{alias_name}'

  /{target}/_aliases/{alias_name}:
    $ref: 'index_api.yml#/paths/~1{target}~1_aliases~1{alias_name}'

  /_aliases/{alias_name}:
    $ref: 'index_api.yml#/paths/~1_aliases~1{alias_name}'

  /{target}/_alias:
    $ref: 'index_api.yml#/paths/~1{target}~1_alias'

  /{target}/_aliases:
    $ref: 'index_api.yml#/paths/~1{target}~1_aliases'

  /_alias:
    $ref: 'index_api.yml#/paths/~1_alias'

  /{index}/_block/{block}:
    $ref: 'index_api.yml#/paths/~1{index}~1_block~1{block}'

  /_block/{block}:
    $ref: 'index_api.yml#/paths/~1_block~1{block}'

  /{target}/_cache/clear:
    $ref: 'index_api.yml#/paths/~1{target}~1_cache~1clear'

  /{source_index}/_clone/{target_index}:
    $ref: 'index_api.yml#/paths/~1{source_index}~1_clone~1{target_index}'

  /{index}/_close:
    $ref: 'index_api.yml#/paths/~1{index}~1_close'

  /{index}:
    $ref: 'index_api.yml#/paths/~1{index}'

  /_index_template/{template_name}:
    $ref: 'index_api.yml#/paths/~1_index_template~1{template_name}'

  /{index_name}:
    $ref: 'index_api.yml#/paths/~1{index_name}'

  /{target_index}/_mapping:
    $ref: 'index_api.yml#/paths/~1{target_index}~1_mapping'

  /_component_template/{component_template_name}:
    $ref: 'index_api.yml#/paths/~1_component_template~1{component_template_name}'

  /_dangling:
    $ref: 'index_api.yml#/paths/~1_dangling'

  /_dangling/{index_uuid}:
    $ref: 'index_api.yml#/paths/~1_dangling~1{index_uuid}'

  /_flush:
    $ref: 'index_api.yml#/paths/~1_flush'

  /{index}/_flush:
    $ref: 'index_api.yml#/paths/~1{index}~1_flush'

  /_forcemerge:
    $ref: 'index_api.yml#/paths/~1_forcemerge'

  /{index}/_forcemerge:
    $ref: 'index_api.yml#/paths/~1{index}~1_forcemerge'

  /_recovery:
    $ref: 'index_api.yml#/paths/~1_recovery'

  /{index}/_recovery:
    $ref: 'index_api.yml#/paths/~1{index}~1_recovery'

  /_settings:
    $ref: 'index_api.yml#/paths/~1_settings'

  /{target_index}/_settings:
    $ref: 'index_api.yml#/paths/~1{target_index}~1_settings'

  /{target_index}/_settings/{setting}:
    $ref: 'index_api.yml#/paths/~1{target_index}~1_settings~1{setting}'

  /{index}/_open:
    $ref: 'index_api.yml#/paths/~1{index}~1_open'

  /_refresh:
    $ref: 'index_api.yml#/paths/~1_refresh'

  /{index}/_refresh:
    $ref: 'index_api.yml#/paths/~1{index}~1_refresh'

  /{rollover_target}/_rollover:
    $ref: 'index_api.yml#/paths/~1{rollover_target}~1_rollover'

  /{rollover_target}/_rollover/{target_index}:
    $ref: 'index_api.yml#/paths/~1{rollover_target}~1_rollover~1{target_index}'

  /_segments:
    $ref: 'index_api.yml#/paths/~1_segments'

  /{index}/_segments:
    $ref: 'index_api.yml#/paths/~1{index}~1_segments'

  /{index_name}/_shrink/{target_index}:
    $ref: 'index_api.yml#/paths/~1{index_name}~1_shrink~1{target_index}'

  /{source_index}/_split/{target_index}:
    $ref: 'index_api.yml#/paths/~1{source_index}~1_split~1{target_index}'

  /_stats:
    $ref: 'index_api.yml#/paths/~1_stats'

  /_stats/{metric}:
    $ref: 'index_api.yml#/paths/~1_stats~1{metric}'

  /{index_ids}/_stats:
    $ref: 'index_api.yml#/paths/~1{index_ids}~1_stats'

  /{index_ids}/_stats/{metric}:
    $ref: 'index_api.yml#/paths/~1{index_ids}~1_stats~1{metric}'

  /{index}/_settings:
    $ref: 'index_api.yml#/paths/~1{index}~1_settings'

  /{index}/_analyze:
    parameters:
      - $ref: 'analyze_api.yml#/components/parameters/index'
    get:
      tags: [Analyze API]
      summary: Text analysis (Index GET)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeIndexedGet
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/field'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Analyze API]
      summary: Text analysis (Index POST)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeIndexedPost
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/field'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cat/aliases:
    get:
      tags:
        - Cat APIs
      summary: Get all aliases
      description: |
        It provides an overview of all existing aliases within your indexer cluster showing which aliases are associated with which specific indices.
      operationId: getCatAliases
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatAliasesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'

  /_cat/aliases/{name}:
    get:
      tags:
        - Cat APIs
      summary: Get specific alias
      description: |
        It provides an overview of all existing aliases within your indexer cluster showing which aliases are associated with which specific indices.
      operationId: getCatAliasesByName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/AliasName'
        - $ref: 'cat_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatAliasesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'

  /_cat/allocation:
    get:
      tags:
        - Cat APIs
      summary: Get all allocation
      description: |
        The CAT allocation operation shows how disk space is allocated for indexes and the quantity of shards on each node.
      operationId: getCatAllocation
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatAllocationSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatAllocationBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatAllocationForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/allocation/{node_id}:
    get:
      tags:
        - Cat APIs
      summary: Get allocation by node
      description: |
        The CAT allocation operation shows how disk space is allocated for indexes and the quantity of shards on each node.
      operationId: getCatAllocationByNode
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/NodeId'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatAllocationSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatAllocationBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatAllocationForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/count:
    get:
      tags:
        - Cat APIs
      summary: Get all count
      description: |
        The CAT count operation lists the number of documents in your cluster.
      operationId: getCatCount
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v_count'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatCountSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatCountBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatCountForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatCountMethodNotAllowed'

  /_cat/count/{INDEX}:
    get:
      tags:
        - Cat APIs
      summary: Get count by index
      description: |
        The CAT count operation lists the number of documents in your cluster.
      operationId: getCatCountByIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/IndexName'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v_count'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatCountSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatCountBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatCountForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatCountMethodNotAllowed'

  /_cat/fielddata:
    get:
      tags:
        - Cat APIs
      summary: Get all field data
      description: |
        The CAT field data operation lists the memory size used by each field per node.
      operationId: getCatFielddata
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatFielddataSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/fielddata/{field_name}:
    get:
      tags:
        - Cat APIs
      summary: Get field data by field
      description: |
        The CAT field data operation lists the memory size used by each field per node.
      operationId: getCatFielddataByField
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/FieldName'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatFielddataSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/health:
    get:
      tags:
        - Cat APIs
      summary: Health
      description: |
        The CAT health operation provides helpful information for analyzing your cluster's health, including cluster status, uptime, and the number of nodes.
      operationId: getCatHealth
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/ts'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatHealthSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/indices:
    get:
      tags:
        - Cat APIs
      summary: Get all indices
      description: |
        The CAT indices operation provides information on the indexes, including disk space usage, number of shards, and health status.
      operationId: getCatIndices
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/health'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/include_unloaded_segments'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/pri'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatIndicesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/indices/{index}:
    get:
      tags:
        - Cat APIs
      summary: Get indices by index
      description: |
        The CAT indices operation provides information on the indexes, including disk space usage, number of shards, and health status.
      operationId: getCatIndicesByIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/IndexName'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/health'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/include_unloaded_segments'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/pri'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
        - $ref: 'cat_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatIndicesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/cluster_manager:
    get:
      tags:
        - Cat APIs
      summary: Cluster manager
      description: |
        The CAT cluster manager operation lists information that helps identify the elected cluster manager node.
      operationId: getCatClusterManager
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatClusterManagerSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/nodeattrs:
    get:
      tags:
        - Cat APIs
      summary: Nodeattrs
      description: |
        The CAT nodeattrs operation lists the attributes of custom nodes.
      operationId: getCatNodeattrs
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatNodeattrsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/nodes:
    get:
      tags:
        - Cat APIs
      summary: Nodes
      description: |
        The CAT nodes operation lists node-level information, including node roles and load metrics such as the pid, name, cluster_manager, ip, port, version, build, jdk.
      operationId: getCatNodes
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/full_id'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatNodesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/pending_tasks:
    get:
      tags:
        - Cat APIs
      summary: Pending tasks
      description: |
        The CAT pending tasks operation lists the progress of all pending tasks, including the task's priority and its time in the queue.
      operationId: getCatPendingTasks
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatPendingTasksSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/pit_segments:
    get:
      tags:
        - Cat APIs
      summary: Get all Point-In-Time segments
      description: |
        The CAT point-in-time (PIT) segments operation returns information about one or more PIT segments.
      operationId: getCatPitSegments
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      requestBody:
        $ref: 'cat_api.yml#/components/requestBodies/PitSegmentsRequestBody'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsMethodNotAllowed'
        '500':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsInvalidPitId'

  /_cat/pit_segments/_all:
    get:
      tags:
        - Cat APIs
      summary: Get all Point-In-Time segments for all PITs
      description: |
        The CAT point-in-time (PIT) segments operation returns information about one or more PIT segments.
      operationId: getCatPitSegmentsAll
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      requestBody:
        $ref: 'cat_api.yml#/components/requestBodies/PitSegmentsRequestBody'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsMethodNotAllowed'
        '500':
          $ref: 'cat_api.yml#/components/responses/CatPitSegmentsInvalidPitId'

  /_cat/plugins:
    get:
      tags:
        - Cat APIs
      summary: Plugins
      description: |
        The CAT plugins operation lists the names, components, and versions of the installed plugins.
      operationId: getCatPlugins
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatPluginsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/recovery:
    get:
      tags:
        - Cat APIs
      summary: Get all recovery
      description: |
        The CAT recovery operation lists all completed and ongoing index and shard recoveries.
      operationId: getCatRecovery
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/active_only'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/detailed'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatRecoverySuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/recovery/{index}:
    get:
      tags:
        - Cat APIs
      summary: Get recovery by index
      description: |
        The CAT recovery operation lists all completed and ongoing index and shard recoveries.
      operationId: getCatRecoveryByIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/IndexName'
        - $ref: 'cat_api.yml#/components/parameters/active_only'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/detailed'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatRecoverySuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/repositories:
    get:
      tags:
        - Cat APIs
      summary: Repositories
      description: |
        The CAT repositories operation lists all snapshot repositories for a cluster.
      operationId: getCatRepositories
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatRepositoriesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/segment_replication:
    get:
      tags:
        - Cat APIs
      summary: Get all segment replication
      description: |
        The CAT segment replication operation returns information about active and last completed segment replication events on each replica shard, including related shard-level metrics. These metrics provide information about how far behind the primary shard the replicas are lagging.
      operationId: getCatSegmentReplication
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/active_only'
        - $ref: 'cat_api.yml#/components/parameters/allow_no_indices'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/completed_only'
        - $ref: 'cat_api.yml#/components/parameters/detailed'
        - $ref: 'cat_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/ignore_throttled'
        - $ref: 'cat_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/shards'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/timeout'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatSegmentReplicationSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/segment_replication/{index}:
    get:
      tags:
        - Cat APIs
      summary: Get segment replication by index
      description: |
        The CAT segment replication operation returns information about active and last completed segment replication events on each replica shard, including related shard-level metrics. These metrics provide information about how far behind the primary shard the replicas are lagging.
      operationId: getCatSegmentReplicationByIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/IndexName'
        - $ref: 'cat_api.yml#/components/parameters/active_only'
        - $ref: 'cat_api.yml#/components/parameters/allow_no_indices'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/completed_only'
        - $ref: 'cat_api.yml#/components/parameters/detailed'
        - $ref: 'cat_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/ignore_throttled'
        - $ref: 'cat_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/shards'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/timeout'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatSegmentReplicationSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/segments:
    get:
      tags:
        - Cat APIs
      summary: Get all segments
      description: |
        The cat segments operation lists Lucene segment-level information for each index.
      operationId: getCatSegments
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatSegmentsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/segments/{index}:
    get:
      tags:
        - Cat APIs
      summary: Get segments by index
      description: |
        The cat segments operation lists Lucene segment-level information for each index.
      operationId: getCatSegmentsByIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/IndexName'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatSegmentsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/shards:
    get:
      tags:
        - Cat APIs
      summary: Get all shards
      description: |
        The CAT shards operation lists the state of all primary and replica shards and how they are distributed.
      operationId: getCatShards
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatShardsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/shards/{index}:
    get:
      tags:
        - Cat APIs
      summary: Get shards by index
      description: |
        The CAT shards operation lists the state of all primary and replica shards and how they are distributed.
      operationId: getCatShardsByIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/IndexName'
        - $ref: 'cat_api.yml#/components/parameters/bytes'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatShardsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/snapshots:
    get:
      tags:
        - Cat APIs
      summary: Get all snapshots
      description: |
        The CAT snapshots operation lists all snapshots for a repository.
      operationId: getCatSnapshots
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatSnapshotsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/snapshots/{repository}:
    get:
      tags:
        - Cat APIs
      summary: Get snapshots by repository
      description: |
        The CAT snapshots operation lists all snapshots for a repository.
      operationId: getCatSnapshotsByRepository
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/RepositoryName'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatSnapshotsSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/tasks:
    get:
      tags:
        - Cat APIs
      summary: Tasks
      description: |
        The CAT tasks operation lists the progress of all tasks currently running on your cluster.
      operationId: getCatTasks
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/actions'
        - $ref: 'cat_api.yml#/components/parameters/detailed'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/nodes'
        - $ref: 'cat_api.yml#/components/parameters/parent_task_id'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/time'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatTasksSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/templates:
    get:
      tags:
        - Cat APIs
      summary: Get all templates
      description: |
        The CAT templates operation lists the names, patterns, order numbers, and version numbers of index templates.
      operationId: getCatTemplates
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatTemplatesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/templates/{name}:
    get:
      tags:
        - Cat APIs
      summary: Get templates by name
      description: |
        The CAT templates operation lists the names, patterns, order numbers, and version numbers of index templates.
      operationId: getCatTemplatesByName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/TemplateName'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatTemplatesSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/thread_pool:
    get:
      tags:
        - Cat APIs
      summary: Get all thread pool
      description: |
        The CAT thread pool operation lists the active, queued, and rejected threads of different thread pools on each node.
      operationId: getCatThreadPool
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/size'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatThreadPoolSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_cat/thread_pool/{thread_pool_patterns}:
    get:
      tags:
        - Cat APIs
      summary: Get thread pool by patterns
      description: |
        The CAT thread pool operation lists the active, queued, and rejected threads of different thread pools on each node.
      operationId: getCatThreadPoolByPatterns
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cat_api.yml#/components/parameters/ThreadPoolPatterns'
        - $ref: 'cat_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cat_api.yml#/components/parameters/format'
        - $ref: 'cat_api.yml#/components/parameters/h'
        - $ref: 'cat_api.yml#/components/parameters/help'
        - $ref: 'cat_api.yml#/components/parameters/local'
        - $ref: 'cat_api.yml#/components/parameters/s'
        - $ref: 'cat_api.yml#/components/parameters/size'
        - $ref: 'cat_api.yml#/components/parameters/v'
      responses:
        '200':
          $ref: 'cat_api.yml#/components/responses/CatThreadPoolSuccess'
        '400':
          $ref: 'cat_api.yml#/components/responses/CatBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cat_api.yml#/components/responses/CatForbidden'
        '405':
          $ref: 'cat_api.yml#/components/responses/CatMethodNotAllowed'

  /_ingest/pipeline/{pipeline_id}:
    parameters:
      - $ref: 'ingest_api.yml#/components/parameters/pipeline_id'
    put:
      tags: [ Ingest APIs ]
      summary: Create or Update Pipeline
      description: |
        The Create Pipeline API operation is used to define or update pipelines in OpenSearch. Each pipeline must include at least one processor, which determines how documents are modified during ingestion.

        ### Template snippets
        Some processor parameters support Mustache template snippets. To get the value of a field, surround the field name in three curly braces, for example, `{{{field-name}}}`.

        **Example:** set ingest processor using Mustache template snippet

        The following example sets the field `{{{role}}}` with a value `{{{tenure}}}`:

        ```
        PUT _ingest/pipeline/wazuh-pipeline
        {
          "processors": [
            {
              "set": {
                "field": "{{{role}}}",
                "value": "{{{tenure}}}"
              }
            }
          ]
        }
        ```
      operationId: createUpdatePipeline
      parameters:
        - $ref: 'ingest_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'ingest_api.yml#/components/parameters/timeout'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/CreatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/CreatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/CreatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: 'ingest_api.yml#/components/responses/CreatePipelineConflict'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    get:
      tags: [ Ingest APIs ]
      summary: Get Pipeline
      description: |
        The get ingest pipeline API operation retrieves all the information about the pipeline. The get ingest pipeline API operation retrieves all the information about the pipeline. Use the GET _ingest/pipeline/ to retrieve information about all ingest pipelines.
      operationId: getPipeline
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/GetPipelineSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ingest_api.yml#/components/responses/GetPipelineNotFound'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_ingest/pipeline/{pipeline_id}/_simulate:
    get:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (GET)
      description: |
        The following requests simulate a single pipeline based on the pipeline id:
      operationId: simulatePipeline
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline you want to simulate. The simulation will run the defined processors in the pipeline against sample input documents you provide in the request body.
          schema:
            type: string
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    post:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (POST)
      description: |
        The following requests simulate a single pipeline based on the pipeline id:
      operationId: simulatePipelinePost
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline you want to simulate. The simulation will run the defined processors in the pipeline against sample input documents you provide in the request body.
          schema:
            type: string
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_ingest/pipeline/_simulate:
    get:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (GET)
      description: |
        The following requests simulate the latest ingest pipeline created
      operationId: simulateLatestPipeline
      parameters:
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    post:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (POST)
      description: |
        The following requests simulate the latest ingest pipeline created
      operationId: simulateLatestPipelinePost
      parameters:
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_ingest/pipeline/{pipeline_id}/_data:
    get:
      tags: [ Ingest APIs ]
      summary: Access Data in a Pipeline
      description: |
        In ingest pipelines, the ctx object provides access to the document's data. This object represents the document being processed and enables you to read, update, or enrich its fields. Processors within the pipeline have read and write access to both the document's _source field and its metadata fields.

        ## Accessing document fields
        The ctx object makes all document fields accessible, allowing you to reference them directly using dot notation.

        **Example: Access a top-level field**
        Given the following example document:
        ```json
        {
          "user": "alice"
        }
        ```

        You can access user as follows:
        ```json
        "field": "ctx.user"
        ```

        **Example: Access a nested field**
        Given the following example document:
        ```json
        {
          "user": {
            "name": "alice"
          }
        }
        ```

        You can access user.name as follows:
        ```json
        "field": "ctx.user.name"
        ```

        ## Accessing a field in the source
        To access a field in the document _source, refer to the field by its name:
        ```json
        {
          "set": {
            "field": "environment",
            "value": "production"
          }
        }
        ```

        Alternatively, you can explicitly use _source:
        ```json
        {
          "set": {
            "field": "_source.environment",
            "value": "production"
          }
        }
        ```

        ## Accessing metadata fields
        You can read or write to metadata fields such as _index, _type, _id, _routing.

        **Example: Set _routing dynamically**
        ```json
        {
          "set": {
            "field": "_routing",
            "value": "{{region}}"
          }
        }
        ```

        Using {{_id}} is not supported when document IDs are auto-generated.

        ## Accessing ingest metadata fields
        The _ingest.timestamp field represents the time at which the ingest node received the document. To persist this timestamp, use the set processor:
        ```json
        {
          "set": {
            "field": "received_at",
            "value": "{{_ingest.timestamp}}"
          }
        }
        ```

        ## Using ctx in Mustache templates
        Mustache templates allow you to dynamically insert field values into processor settings. To include unescaped field values, use triple curly braces ({{{ and }}}).

        **Example: Combining source fields**
        The following processor configuration combines the app and env fields, separated by an underscore (_), and stores the result in the log_label field:
        ```json
        {
          "set": {
            "field": "log_label",
            "value": "{{{app}}}_{{{env}}}"
          }
        }
        ```

        **Example: Generating a dynamic greeting using the set processor**
        If a document's user field is set to alice, use the following syntax to produce the result "greeting": "Hello, alice!":
        ```json
        {
          "set": {
            "field": "greeting",
            "value": "Hello, {{{user}}}!"
          }
        }
        ```

        ## Dynamic field names
        You can use a field's value as the name of a new field:
        ```json
        {
          "set": {
            "field": "{{service}}",
            "value": "{{code}}"
          }
        }
        ```

        **Example: Routing to a dynamic index based on status**
        The following processor configuration sets the target index dynamically by appending -events to the value of the status field:
        ```json
        {
          "set": {
            "field": "_index",
            "value": "{{status}}-events"
          }
        }
        ```

        ## Using ctx in the script processor
        The script processor enables advanced transformations by allowing you to execute custom scripts that modify document fields during ingestion.

        **Example: Adding a field only if another is missing**
        The following processor adds the error_message field with the value "none" only if the field is missing from the document:
        ```json
        {
          "script": {
            "lang": "painless",
            "source": "if (ctx.error_message == null) { ctx.error_message = 'none'; }"
          }
        }
        ```

        **Example: Copying a value from one field to another**
        The following processor copies the value from the timestamp field into a new field called event_time:
        ```json
        {
          "script": {
            "lang": "painless",
            "source": "ctx.event_time = ctx.timestamp;"
          }
        }
        ```

        **Example of a complete pipeline**
        The example below presents a complete ingest pipeline that sets a value for the tagline field using an existing field from the document, extracts the year from the date field, and captures the document's ingest timestamp in the received_at field.
        ```json
        PUT _ingest/pipeline/example-pipeline
        {
          "description": "Sets tags, log label, and defaults error message",
          "processors": [
            {
              "set": {
                "field": "tagline",
                "value": "{{{user.first}}} from {{{department}}}"
              }
            },
            {
              "script": {
                "lang": "painless",
                "source": "ctx.year = ctx.date.substring(0, 4);"
              }
            },
            {
              "set": {
                "field": "received_at",
                "value": "{{_ingest.timestamp}}"
              }
            }
          ]
        }
        ```

        **To test the pipeline, use the following request:**
        ```json
        POST _ingest/pipeline/example-pipeline/_simulate
        {
          "docs": [
            {
              "_source": {
                "user": {
                  "first": "Liam"
                },
                "department": "Engineering",
                "date": "2024-12-03T14:05:00Z"
              }
            }
          ]
        }
        ```

        **The response shows the enriched document after processing, including the newly added tagline, extracted year, and the received_at timestamp generated by the ingest pipeline:**
        ```json
        {
          "docs": [
            {
              "doc": {
                "_index": "_index",
                "_id": "_id",
                "_source": {
                  "date": "2024-12-03T14:05:00Z",
                  "year": "2024",
                  "received_at": "2025-04-22T11:18:50.834050015Z",
                  "tagline": "Liam from Engineering",
                  "department": "Engineering",
                  "user": {
                    "first": "Liam"
                  }
                },
                "_ingest": {
                  "timestamp": "2025-04-22T11:18:50.834050015Z"
                }
              }
            }
          ]
        }
        ```
      operationId: accessPipelineData
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline to access data from.
          schema:
            type: string
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/AccessPipelineDataSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ingest_api.yml#/components/responses/AccessPipelineDataNotFound'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    delete:
      tags: [ Ingest APIs ]
      summary: Delete Pipeline
      description: |
        The delete pipeline API operation deletes a pipeline.

        You can delete a specific pipeline by its ID or use wildcards to delete multiple pipelines.
      operationId: deletePipeline
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline you want to delete. You can also use wildcards like * to delete multiple pipelines.
          schema:
            type: string
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/DeletePipelineSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ingest_api.yml#/components/responses/DeletePipelineNotFound'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_plugins/_sm/policies/{policy_name}:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_name}'
  /_plugins/_sm/policies:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies'
  /_plugins/_sm/policies/{policy_names}/_explain:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_names}~1_explain'
  /_plugins/_sm/policies/{policy_name}/_start:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_name}~1_start'
  /_plugins/_sm/policies/{policy_name}/_stop:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_name}~1_stop'

  /_scripts/{SCRIPT_ID}:
    put:
      $ref: 'script_api.yml#/paths/~1_scripts~1{SCRIPT_ID}/put'
    post:
      $ref: 'script_api.yml#/paths/~1_scripts~1{SCRIPT_ID}/post'
    get:
      $ref: 'script_api.yml#/paths/~1_scripts~1{SCRIPT_ID}/get'
    delete:
      $ref: 'script_api.yml#/paths/~1_scripts~1{SCRIPT_ID}/delete'

  /_scripts/{SCRIPT_ID}/{CONTEXT}:
    put:
      $ref: 'script_api.yml#/paths/~1_scripts~1{SCRIPT_ID}~1{CONTEXT}/put'
    post:
      $ref: 'script_api.yml#/paths/~1_scripts~1{SCRIPT_ID}~1{CONTEXT}/post'

  /_script_context:
    get:
      $ref: 'script_api.yml#/paths/~1_script_context/get'

  /_script_language:
    get:
      $ref: 'script_api.yml#/paths/~1_script_language/get'

  /_search/scroll:
    $ref: 'search_api.yml#/paths/~1_search~1scroll'

  /_search/scroll/{scroll_id}:
    $ref: 'search_api.yml#/paths/~1_search~1scroll~1{scroll_id}'

  /_search:
    $ref: 'search_api.yml#/paths/~1_search'

  /{index}/_search:
    $ref: 'search_api.yml#/paths/~1{index}~1_search'

  /_plugins/_security_analytics/detectors:
    post:
      tags:
        - Stats API
      summary: Stats API
      description: |
        The Stats API uses the stats operation to track and monitor shard indexing backpressure.
      operationId: getStatsAPI
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'stats_api.yml#/components/parameters/top'
        - $ref: 'stats_api.yml#/components/parameters/include_all'
        - $ref: 'stats_api.yml#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'stats_api.yml#/components/responses/StatsSuccess'
        '400':
          $ref: 'stats_api.yml#/components/responses/StatsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'stats_api.yml#/components/responses/StatsForbidden'
        '404':
          $ref: 'stats_api.yml#/components/responses/StatsNotFound'

  /_tasks:
    get:
      tags:
        - Tasks
      summary: Get all tasks
      description: |
        Retrieves details about tasks that are currently running within the cluster.
      operationId: getAllTasks
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'tasks_api.yml#/components/parameters/nodes'
        - $ref: 'tasks_api.yml#/components/parameters/actions'
        - $ref: 'tasks_api.yml#/components/parameters/detailed'
        - $ref: 'tasks_api.yml#/components/parameters/parent_task_id'
        - $ref: 'tasks_api.yml#/components/parameters/wait_for_completion'
        - $ref: 'tasks_api.yml#/components/parameters/group_by'
        - $ref: 'tasks_api.yml#/components/parameters/timeout'
        - $ref: 'tasks_api.yml#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: 'tasks_api.yml#/components/responses/TasksSuccess'
        '400':
          $ref: 'tasks_api.yml#/components/responses/TasksBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'tasks_api.yml#/components/responses/TasksForbidden'
        '404':
          $ref: 'tasks_api.yml#/components/responses/TasksNotFound'

  /_tasks/{TASK_ID}:
    get:
      tags:
        - Tasks
      summary: Get specific task
      description: |
        Retrieves details about tasks that are currently running within the cluster.
      operationId: getTaskById
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'tasks_api.yml#/components/parameters/TaskId'
        - $ref: 'tasks_api.yml#/components/parameters/nodes'
        - $ref: 'tasks_api.yml#/components/parameters/actions'
        - $ref: 'tasks_api.yml#/components/parameters/detailed'
        - $ref: 'tasks_api.yml#/components/parameters/parent_task_id'
        - $ref: 'tasks_api.yml#/components/parameters/wait_for_completion'
        - $ref: 'tasks_api.yml#/components/parameters/group_by'
        - $ref: 'tasks_api.yml#/components/parameters/timeout'
        - $ref: 'tasks_api.yml#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: 'tasks_api.yml#/components/responses/TasksSuccess'
        '400':
          $ref: 'tasks_api.yml#/components/responses/TasksBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'tasks_api.yml#/components/responses/TasksForbidden'
        '404':
          $ref: 'tasks_api.yml#/components/responses/TasksNotFound'

  /_plugins/_transform/{TRANSFORM_ID}:
    put:
      tags:
        - Transforms API
      summary: Create a transform job
      description: |
        Creates a transform job.
      operationId: createTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
        - $ref: 'transforms_api.yml#/components/parameters/defer_validation'
        - $ref: 'transforms_api.yml#/components/parameters/timeout'
      requestBody:
        $ref: 'transforms_api.yml#/components/requestBodies/CreateTransformRequestBody'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformCreated'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'
        '409':
          $ref: 'transforms_api.yml#/components/responses/TransformConflict'
    get:
      tags:
        - Transforms API
      summary: Get a transform job's details
      description: |
        Returns a transform job's details. You can also get details of all transform jobs by omitting transform_id.
      operationId: getTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
        - $ref: 'transforms_api.yml#/components/parameters/from'
        - $ref: 'transforms_api.yml#/components/parameters/size'
        - $ref: 'transforms_api.yml#/components/parameters/search'
        - $ref: 'transforms_api.yml#/components/parameters/sortField'
        - $ref: 'transforms_api.yml#/components/parameters/sortDirection'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformList'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'
    delete:
      tags:
        - Transforms API
      summary: Delete a transform job
      description: |
        Deletes a transform job.
      operationId: deleteTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
        - $ref: 'transforms_api.yml#/components/parameters/force'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformDeleted'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '409':
          $ref: 'transforms_api.yml#/components/responses/TransformConflict'

  /_plugins/_transform/{TRANSFORM_ID}?if_seq_no={SEQ_NO}&if_primary_term={PRIMARY_TERM}:
    put:
      tags:
        - Transforms API
      summary: Update a transform job
      description: |
        Updates an existing transform job if the specified transform_id already exists. This request requires providing the sequence number and primary term of the transform to be modified.
      operationId: updateTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
        - name: if_seq_no
          in: query
          required: true
          description: Executes the transform operation only if the most recent change to the transform job matches the specified sequence number.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          required: true
          description: Executes the transform operation only if the most recent change to the transform job matches the specified primary term.
          schema:
            type: integer
      requestBody:
        $ref: 'transforms_api.yml#/components/requestBodies/UpdateTransformRequestBody'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformUpdated'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'
        '409':
          $ref: 'transforms_api.yml#/components/responses/TransformConflict'

  /_plugins/_transform/{TRANSFORM_ID}/_start:
    post:
      tags:
        - Transforms API
      summary: Start a transform job
      description: |
        Transform jobs created via the API are enabled by default. However, if you need to activate a job manually, you can use the start API operation.
      operationId: startTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformStarted'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'

  /_plugins/_transform/{TRANSFORM_ID}/_stop:
    post:
      tags:
        - Transforms API
      summary: Stop a transform job
      description: |
        Transform jobs created via the API are enabled by default. However, if you need to activate a job manually, you can use the start API operation.
      operationId: stopTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformStopped'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'

  /_plugins/_transform/{TRANSFORM_ID}/_explain:
    get:
      tags:
        - Transforms API
      summary: Get the status of a transform job
      description: |
        Retrieves the status and metadata of a transform job.
      operationId: getTransformJobStatus
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'transforms_api.yml#/components/parameters/TransformId'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformStatus'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'

  /_plugins/_transform/_preview:
    post:
      tags:
        - Transforms API
      summary: Preview a transform job's results
      description: |
        Provides a preview of the expected structure and content of a transformed index.
      operationId: previewTransformJob
      security:
        - basicAuth: []
        - jwtAuth: []
      requestBody:
        $ref: 'transforms_api.yml#/components/requestBodies/PreviewTransformRequestBody'
      responses:
        '200':
          $ref: 'transforms_api.yml#/components/responses/TransformPreview'
        '400':
          $ref: 'transforms_api.yml#/components/responses/TransformBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'transforms_api.yml#/components/responses/TransformForbidden'
        '404':
          $ref: 'transforms_api.yml#/components/responses/TransformNotFound'

  /_cluster/allocation/explain:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1allocation~1explain'

  /_cluster/routing/awareness/{attribute}/weights:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1routing~1awareness~1{attribute}~1weights'

  /_cluster/decommission/awareness/{awareness_attribute_name}/{awareness_attribute_value}:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1decommission~1awareness~1{awareness_attribute_name}~1{awareness_attribute_value}'

  /_cluster/decommission/awareness/{awareness_attribute_name}/_status:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1decommission~1awareness~1{awareness_attribute_name}~1_status'

  /_cluster/decommission/awareness:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1decommission~1awareness'

  /_cluster/health:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1health'

  /_cluster/health/{index}:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1health~1{index}'

  /_cluster/settings:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1settings'

  /_cluster/stats:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1stats'

  /_cluster/stats/nodes/{node_filters}:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1stats~1nodes~1{node_filters}'

  /_cluster/stats/{metric}/nodes/{node_filters}:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1stats~1{metric}~1nodes~1{node_filters}'

  /_cluster/stats/{metric}/{index_metric}/nodes/{node_filters}:
    $ref: 'cluster_api.yml#/paths/~1_cluster~1stats~1{metric}~1{index_metric}~1nodes~1{node_filters}'

  /_plugins/_ism/policies/{policy_id}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1policies~1{policy_id}'

  /_plugins/_ism/add/{index}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1add~1{index}'

  /_plugins/_ism/policies/{policy_id}?if_seq_no={value}&if_primary_term={value}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1policies~1{policy_id}?if_seq_no={value}&if_primary_term={value}'

  /_plugins/_ism/remove/{index}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1remove~1{index}'

  /_plugins/_ism/change_policy/{index}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1change_policy~1{index}'

  /_plugins/_ism/retry/{index}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1retry~1{index}'

  /_plugins/_ism/explain/{index}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1explain~1{index}'

  /_plugins/_ism/explain/{index}?validate_action={value}:
    $ref: 'ism_api.yml#/paths/~1_plugins~1_ism~1explain~1{index}?validate_action={value}'

  /{index}/_doc/{id}:
    $ref: 'document_api.yml#/paths/~1{index}~1_doc~1{id}'

  /{index}/_doc:
    $ref: 'document_api.yml#/paths/~1{index}~1_doc'

  /{index}/_create/{id}:
    $ref: 'document_api.yml#/paths/~1{index}~1_create~1{id}'

  /{index}/_update/{id}:
    $ref: 'document_api.yml#/paths/~1{index}~1_update~1{id}'

  /_bulk:
    $ref: 'document_api.yml#/paths/~1_bulk'

  /{index}/_bulk:
    $ref: 'document_api.yml#/paths/~1{index}~1_bulk'

  /_mget:
    $ref: 'document_api.yml#/paths/~1_mget'

  /{index}/_mget:
    $ref: 'document_api.yml#/paths/~1{index}~1_mget'

  /{index}/_delete_by_query:
    $ref: 'document_api.yml#/paths/~1{index}~1_delete_by_query'

  # Update by query API endpoints
  /{index1},{index2}/_update_by_query:
    $ref: 'document_api.yml#/paths/~1{index1},{index2}~1_update_by_query'

  /_reindex:
    $ref: 'document_api.yml#/paths/~1_reindex'

  /{target}/_count:
    parameters:
      - $ref: 'miscellaneous_api.yml#/components/parameters/target'
    get:
      tags: [Count]
      summary: Count (GET)
      operationId: countDocuments
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_allow_no_indices'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_expand_wildcards'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_ignore_unavailable'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_min_score'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_terminate_after'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/CountRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/CountSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/CountBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/CountNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []
    post:
      tags: [Count]
      summary: Count (POST)
      operationId: countDocumentsPost
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_allow_no_indices'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_expand_wildcards'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_ignore_unavailable'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_min_score'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_terminate_after'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/CountRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/CountSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/CountBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/CountNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_explain/{id}:
    parameters:
      - $ref: 'miscellaneous_api.yml#/components/parameters/index_name'
      - $ref: 'miscellaneous_api.yml#/components/parameters/document_id'
    get:
      tags: [Explain]
      summary: Explain (GET)
      operationId: explainDocument
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_q'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_stored_fields'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_excludes'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/ExplainRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []
    post:
      tags: [Explain]
      summary: Explain (POST)
      operationId: explainDocumentPost
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_q'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_stored_fields'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_excludes'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/ExplainRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_plugins/_refresh_search_analyzers/{index_or_alias_or_wildcard}:
    parameters:
      - $ref: 'miscellaneous_api.yml#/components/parameters/index_or_alias_or_wildcard'
    post:
      tags: [Refresh search analyzer]
      summary: Refresh search analyzer
      operationId: refreshSearchAnalyzers
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/RefreshAnalyzerSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/RefreshAnalyzerBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/RefreshAnalyzerNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_remote/info:
    get:
      tags: [Remote cluster information]
      summary: Remote cluster information
      operationId: getRemoteClusterInfo
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/RemoteClusterInfoSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/RemoteClusterBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_plugins/_rollup/jobs/{ROLLUP_ID}:
    put:
      tags:
        - Index rollups API
      summary: Create or update an index rollup job
      description: |
        Creates or modifies an index rollup job. The `seq_no` and `primary_term` parameters are required for the update operation.
      operationId: createOrUpdateRollupJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'index_rollup.yml#/components/parameters/RollupId'
        - $ref: 'index_rollup.yml#/components/parameters/if_seq_no'
        - $ref: 'index_rollup.yml#/components/parameters/if_primary_term'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'index_rollup.yml#/components/schemas/CreateRollupRequest'
            example:
              rollup:
                source_index: "wazuh-alerts-4.x-2025.03.11"
                target_index: "wazuh-alerts-4.x-2025.03.12"
                schedule:
                  interval:
                    period: 1
                    unit: "Days"
                description: "Example rollup job"
                enabled: true
                page_size: 200
                delay: 0
                roles:
                  - "rollup_all"
                  - "nyc_taxi_all"
                  - "example_rollup_index_all"
                continuous: false
                dimensions:
                  - date_histogram:
                      source_field: "tpep_pickup_datetime"
                      fixed_interval: "1h"
                      timezone: "America/Los_Angeles"
                  - terms:
                      source_field: "PULocationID"
                metrics:
                  - source_field: "passenger_count"
                    metrics:
                      - avg: {}
                      - sum: {}
                      - max: {}
                      - min: {}
                      - value_count: {}
      responses:
        '200':
          $ref: 'index_rollup.yml#/components/responses/RollupJobCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: 'index_rollup.yml#/components/responses/RollupConflict'
    get:
      tags:
        - Index rollups API
      summary: Get an index rollup job
      description: |
        Retrieves complete details of an index rollup job using the specified `rollup_id`.
      operationId: getRollupJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'index_rollup.yml#/components/parameters/RollupId'
      responses:
        '200':
          $ref: 'index_rollup.yml#/components/responses/RollupJobRetrieved'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'index_rollup.yml#/components/responses/RollupNotFound'
    delete:
      tags:
        - Index rollups API
      summary: Delete an index rollup job
      description: |
        Deletes an index rollup job based on the `rollup_id`.
      operationId: deleteRollupJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'index_rollup.yml#/components/parameters/RollupId'
      responses:
        '200':
          $ref: 'index_rollup.yml#/components/responses/RollupJobDeleted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'index_rollup.yml#/components/responses/RollupNotFound'

  /_plugins/_rollup/jobs/{ROLLUP_ID}/_start:
    post:
      tags:
        - Index rollups API
      summary: Start an index rollup job
      description: |
        This API operation start or stop an index rollup job.
      operationId: startRollupJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'index_rollup.yml#/components/parameters/RollupId'
      responses:
        '200':
          $ref: 'index_rollup.yml#/components/responses/RollupJobStarted'
        '400':
          $ref: 'index_rollup.yml#/components/responses/RollupBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'index_rollup.yml#/components/responses/RollupNotFound'

  /_plugins/_rollup/jobs/{ROLLUP_ID}/_stop:
    post:
      tags:
        - Index rollups API
      summary: Stop an index rollup job
      description: |
        This API operation start or stop an index rollup job.
      operationId: stopRollupJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'index_rollup.yml#/components/parameters/RollupId'
      responses:
        '200':
          $ref: 'index_rollup.yml#/components/responses/RollupJobStopped'
        '400':
          $ref: 'index_rollup.yml#/components/responses/RollupBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'index_rollup.yml#/components/responses/RollupNotFound'

  /_plugins/_rollup/jobs/{ROLLUP_ID}/_explain:
    get:
      tags:
        - Index rollups API
      summary: Explain an index rollup job
      description: |
        Provides comprehensive metadata about the index rollup job, including its current execution status and progress.
      operationId: explainRollupJob
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'index_rollup.yml#/components/parameters/RollupId'
      responses:
        '200':
          $ref: 'index_rollup.yml#/components/responses/RollupJobExplained'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'index_rollup.yml#/components/responses/RollupNotFound'

components:
  parameters:
    pretty:
      name: pretty
      in: query
      description: Show results in human-readable format.
      schema:
        type: boolean
        default: false

    format:
      name: format
      in: query
      description: A short version of the `Accept` header, such as `json` or `yaml`.
      schema:
        type: string
        enum: [json, yaml]

  schemas:
    ApiInfo:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the specific Wazuh indexer node that responded to the request. In a multi-node cluster, this will be the name of the node that handled the request.
        cluster_name:
          type: string
          description: The name of the cluster which the Wazuh indexer is joined to.
        cluster_uuid:
          type: string
          description: A unique ID that identifies the Wazuh indexer node's cluster. This ID is generated when the cluster is first formed and remains constant.
        version:
          $ref: '#/components/schemas/VersionInfo'
        tagline:
          type: string
          description: Project description

    VersionInfo:
      type: object
      properties:
        number:
          type: string
          description: The version number of the Wazuh indexer node.
        build_type:
          type: string
          description: Describes how the build was packaged (e.g., `rpm`, `deb`, `tar`).
        build_hash:
          type: string
          description: A short hash of the Git commit from which this build was created. Useful for debugging and identifying the exact source code version.
        build_date:
          type: string
          format: date-time
          description: The date and time when this particular build was created.
        build_snapshot:
          type: boolean
          description: A boolean indicating if this is a snapshot build (development version) or a release build (`false` for releases).
        lucene_version:
          type: string
          description: The version of Apache Lucene, the underlying search library that Wazuh indexer uses.
        minimum_wire_compatibility_version:
          type: string
          description: The minimum version of Wazuh indexer that this node can communicate with over the network. Ensures backward compatibility.
        minimum_index_compatibility_version:
          type: string
          description: The minimum version of Wazuh indexer that this node can read indices created by. Ensures backward compatibility for stored data.

    SecurityError:
      type: object
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type: { type: string }
                  reason: { type: string }
            type: { type: string }
            reason: { type: string }
        status: { type: integer }

  responses:
    BadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  root_cause:
                    type: object
                    properties:
                      type: { type: string }
                      reason: { type: string }
              status: { type: integer }
          examples:
            missingText:
              value:
                error:
                  root_cause:
                    - type: "action_request_validation_exception"
                      reason: "Validation Failed: 1: text is missing;"
                  type: "action_request_validation_exception"
                  reason: "Validation Failed: 1: text is missing;"
                status: 400

    Unauthorized:
      description: Response to report an unauthorized request
      content:
        text/plain:
          schema:
            type: string
          example: "Unauthorized"

    ForbiddenApiInfo:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "security_exception"
                  reason: "no permissions for [/] and User [name=test, backend_roles=[], requestedTenant=null]"
              type: "security_exception"
              reason: "no permissions for [/] and User [name=test, backend_roles=[], requestedTenant=null]"
            status: 403

    Forbidden:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "security_exception"
                  reason: "no permissions for [indices:admin/analyze] and User [name=test, backend_roles=[], requestedTenant=null]"
              type: "security_exception"
              reason: "no permissions for [indices:admin/analyze] and User [name=test, backend_roles=[], requestedTenant=null]"
            status: 403

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic HTTP authentication
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer token authentication

tags:
  - name: Get API info
    description: Wazuh indexer API information
  - name: Analyze API
  - name: Cat APIs
    description: |
      The compact and aligned text (CAT) API provides access to key statistics about your cluster. Instead of complex JSON output, the CAT API delivers information in a clear and concise tabular format, making it easier to read and understand information such as which node is currently leading the cluster, what is the overall status of the cluster, how many documents are stored in each index within the cluster, etc.
  - name: Cluster API
    description: The cluster APIs allow you to manage your cluster. You can use them to check cluster health, modify settings, retrieve statistics, and more.
  - name: Count
    description: The Count API provides quick access to retrieve the number of documents matching a query. It can also be used to determine the document count for an index, data stream, or cluster.
  - name: Document APIs
    description: |
      Document APIs enable you to manage documents within your index, including adding, updating, and deleting records.

      These APIs are categorized into single-document operations and multi-document operations. Multi-document operations are more efficient than processing multiple individual requests separately, so it is recommended to use them whenever possible for better performance.
  - name: Explain
    description: The Explain API in Wazuh indexer  provides a detailed breakdown of how a document matches a given query and how its relevance score (`_score`) is calculated. It helps in understanding why certain documents rank higher or lower in search results.
  - name: Index APIs
    description: Index API operations allow you to manage indexes within your cluster. With these operations, you can create, delete, close, and perform various other tasks related to index management.
  - name: Index rollups API
    description: You can use the index rollup operations to programmatically work with index rollup jobs.
  - name: Index state management API
    description: The Index State Management (ISM) API operations allow you to programmatically manage index policies and the lifecycle of indexes in the Wazuh indexer.
  - name: ISM error prevention API
    description: Index State Management (ISM) supports the automatic execution of actions. However, these actions may encounter failures due to various reasons. To help prevent such issues, you can perform error prevention validation to test an action and identify potential failures beforehand.
  - name: Ingest APIs
    description: |
      The Wazuh indexer Ingest APIs facilitate the transformation and enrichment of data as it is ingested into the system. These APIs allow for the creation and management of ingest pipelines, which consist of a series of processors that execute sequentially to process incoming documents.

      **Ingest pipeline APIs**
      1. **Create or Update Pipeline**: Define a new pipeline or modify an existing one by specifying a sequence of processors.
      2. **Get Pipeline**: Retrieve the configuration details of a specific pipeline.
      3. **Simulate Pipeline**: Test a pipeline configuration by simulating the processing of sample documents, aiding in validation before deployment.
      4. **Delete Pipeline**: Remove an existing pipeline from the system.
      5. **Access Data in a Pipeline**: Interact with data as it flows through a pipeline, enabling monitoring and debugging of the ingestion process.
  - name: Refresh search analyzer
    description: |
      The Refresh Search Analyzer is an API operation that reloads search-time analyzers in real time, specifically those with updateable components. The ability to refresh search analyzers using this endpoint requires the ISM plugin to be installed in your Wazuh indexer cluster.
      For the refresh to work, the token filter within your analyzer must have the `updateable` flag set to `true` without needing to close or recreate the index. For example:
      ```
      {
        "analyzer": {
          "my_synonyms": {
            "tokenizer": "whitespace",
            "filter": [
              "synonym"
            ]
          }
        },
        "filter": {
          "synonym": {
            "type": "synonym_graph",
            "synonyms_path": "synonyms.txt",
            "updateable": true
          }
        }
      }
      ```
      This configuration ensures that changes to the `synonyms.txt` file are picked up when the analyzer is refreshed. Ensure that the updated resources (e.g., `synonyms.txt`) are accessible to all nodes in the cluster, as the refresh operation will reload these resources across the nodes.
  - name: Remote cluster information
    description: |
      This operation returns detailed connection information for remote Wazuh indexer clusters configured with the local cluster. It includes data such as the remote cluster alias, connection mode (`sniff` or `proxy`), seed node IP addresses, and timeout configurations.
      The response is more comprehensive and useful than a call to `_cluster/settings`, which only includes the cluster alias and seed nodes.
  - name: Snapshot management API
    description: |
      The snapshot management (SM) API enables automated snapshot creation in the Wazuh indexer. This API helps streamline the process of backing up index data by allowing you to configure, schedule, and manage snapshots programmatically.
  - name: Script APIs
    description: The Script APIs enable the use of stored scripts, which are maintained as part of the cluster state. These scripts help minimize compilation time and improve search performance. The default scripting language is Painless.
  - name: Scroll
    description: |
      You can utilize the scroll operation to obtain a substantial number of results. For instance, when looking for machine learning jobs, you can request an unlimited number of results in separate batches.

      To implement the scroll operation, include a scroll parameter in the request header along with a search context that indicates to the indexer how long you wish to continue scrolling. This search context should be sufficiently lengthy to allow for processing a single batch of results.

      Since search contexts can be memory-intensive, it's advisable to avoid using the scroll operation for frequent user queries. Instead, consider utilizing the sort parameter in conjunction with the search_after parameter to paginate through results for user queries.
  - name: Search
    description: The Search API operation allows you to perform a search request to find data within your cluster.
  - name: Stats API
    description: The Stats API uses the stats operation to track and monitor shard indexing backpressure.
  - name: Tasks
    description: Retrieves details about tasks that are currently running within the cluster.
  - name: Transforms API
    description: |
      The Transform API is a RESTful interface that enables users to create, manage, and execute transform jobs. These jobs allow you to generate summarized or aggregated views of your existing data, facilitating more efficient analysis and visualization. By defining specific transformations, you can restructure and condense large datasets into more insightful representations.