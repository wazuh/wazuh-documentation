openapi: 3.0.0

info:
  title: Wazuh indexer API reference
  description: |
    The Wazuh indexer API is an open source RESTful API. It allows interaction with the Wazuh indexer from a web browser, command line tools like cURL or any script or program that can make web requests. The Wazuh indexer API is used to perform actions like adding and querying the indexes, modifying the Wazuh indexer settings, etc.

    # Authentication

    Wazuh indexer API endpoints require authentication to be used. There are multiple options on what authentication mechanism to use including basic HTTP authentication and JSON Web Token (JWT). More information can be seen in [Logging into the Wazuh indexer API](https://documentation.wazuh.com/current/user-manual/indexer-api/getting-started.html#logging-into-the-wazuh-indexer-api).
  version: 1.0.0

servers:
  - url: '{protocol}://{host}:{port}'
    description: Wazuh indexer API server
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
        description: Protocol for API communication
      host:
        default: localhost
        description: Hostname or IP address
      port:
        default: '9200'
        description: API port number

security:
  - basicAuth: []
  - jwtAuth: []

paths:
  /:
    get:
      tags:
        - Get API info
      summary: API info
      description: Return basic information about the API
      operationId: getApiInfo
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiInfo'
              example:
                name: "node-1"
                cluster_name: "wazuh-cluster"
                cluster_uuid: "XUqydNCQTuCnvtXobnRZ8w"
                version:
                  number: "7.10.2"
                  build_type: "deb"
                  build_hash: "9fd1835bba77ae04d48550eb4dc9be4787070806"
                  build_date: "2024-08-30T10:06:03.028357Z"
                  build_snapshot: false
                  lucene_version: "9.10.0"
                  minimum_wire_compatibility_version: "7.10.0"
                  minimum_index_compatibility_version: "7.0.0"
                tagline: "The OpenSearch Project: https://opensearch.org/"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/ForbiddenApiInfo'

  /_analyze:
    get:
      tags: [Analyze API]
      summary: Text analysis (Global GET)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeGlobalGet
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Analyze API]
      summary: Text analysis (Global POST)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeGlobalPost
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_analyze:
    parameters:
      - $ref: 'analyze_api.yml#/components/parameters/index'
    get:
      tags: [Analyze API]
      summary: Text analysis (Index GET)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeIndexedGet
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/field'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Analyze API]
      summary: Text analysis (Index POST)
      description: |
        The analyze API endpoint enables text analysis by transforming unstructured text into individual tokens, typically words, optimized for search functionality. It processes a text string and returns the corresponding tokens as the output. It helps you debug and fine-tune text analysis settings for indexing and querying, providing insight into how text is broken into tokens and how filters are applied.
      operationId: analyzeIndexedPost
      parameters:
        - $ref: 'analyze_api.yml#/components/parameters/analyzer'
        - $ref: 'analyze_api.yml#/components/parameters/attributes'
        - $ref: 'analyze_api.yml#/components/parameters/char_filter'
        - $ref: 'analyze_api.yml#/components/parameters/field'
        - $ref: 'analyze_api.yml#/components/parameters/filter'
        - $ref: 'analyze_api.yml#/components/parameters/normalizer'
        - $ref: 'analyze_api.yml#/components/parameters/tokenizer'
        - $ref: 'analyze_api.yml#/components/parameters/explain'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'analyze_api.yml#/components/requestBodies/AnalyzeRequest'
      responses:
        '200':
          $ref: 'analyze_api.yml#/components/responses/AnalyzeSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_ingest/pipeline/{pipeline_id}:
    parameters:
      - $ref: 'ingest_api.yml#/components/parameters/pipeline_id'
    put:
      tags: [ Ingest APIs ]
      summary: Create or Update Pipeline
      description: |
        The Create Pipeline API operation is used to define or update pipelines in OpenSearch. Each pipeline must include at least one processor, which determines how documents are modified during ingestion.

        ### Template snippets
        Some processor parameters support Mustache template snippets. To get the value of a field, surround the field name in three curly braces, for example, `{{{field-name}}}`.

        **Example:** set ingest processor using Mustache template snippet

        The following example sets the field `{{{role}}}` with a value `{{{tenure}}}`:

        ```
        PUT _ingest/pipeline/wazuh-pipeline
        {
          "processors": [
            {
              "set": {
                "field": "{{{role}}}",
                "value": "{{{tenure}}}"
              }
            }
          ]
        }
        ```
      operationId: createUpdatePipeline
      parameters:
        - $ref: 'ingest_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'ingest_api.yml#/components/parameters/timeout'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/CreatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/CreatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/CreatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: 'ingest_api.yml#/components/responses/CreatePipelineConflict'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    get:
      tags: [ Ingest APIs ]
      summary: Get Pipeline
      description: |
        The get ingest pipeline API operation retrieves all the information about the pipeline. The get ingest pipeline API operation retrieves all the information about the pipeline. Use the GET _ingest/pipeline/ to retrieve information about all ingest pipelines.
      operationId: getPipeline
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/GetPipelineSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ingest_api.yml#/components/responses/GetPipelineNotFound'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_ingest/pipeline/{pipeline_id}/_simulate:
    get:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (GET)
      description: |
        The following requests simulate a single pipeline based on the pipeline id:
      operationId: simulatePipeline
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline you want to simulate. The simulation will run the defined processors in the pipeline against sample input documents you provide in the request body.
          schema:
            type: string
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    post:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (POST)
      description: |
        The following requests simulate a single pipeline based on the pipeline id:
      operationId: simulatePipelinePost
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline you want to simulate. The simulation will run the defined processors in the pipeline against sample input documents you provide in the request body.
          schema:
            type: string
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_ingest/pipeline/_simulate:
    get:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (GET)
      description: |
        The following requests simulate the latest ingest pipeline created
      operationId: simulateLatestPipeline
      parameters:
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    post:
      tags: [ Ingest APIs ]
      summary: Simulate pipeline (POST)
      description: |
        The following requests simulate the latest ingest pipeline created
      operationId: simulateLatestPipelinePost
      parameters:
        - name: verbose
          in: query
          required: false
          description: |
            This enables verbose mode, which includes the output data after each processor in the pipeline execution.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'ingest_api.yml#/components/requestBodies/SimulatePipelineRequest'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineSuccess'
        '400':
          $ref: 'ingest_api.yml#/components/responses/SimulatePipelineBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_ingest/pipeline/{pipeline_id}/_data:
    get:
      tags: [ Ingest APIs ]
      summary: Access Data in a Pipeline
      description: |
        In ingest pipelines, the ctx object provides access to the document's data. This object represents the document being processed and enables you to read, update, or enrich its fields. Processors within the pipeline have read and write access to both the document's _source field and its metadata fields.

        ## Accessing document fields
        The ctx object makes all document fields accessible, allowing you to reference them directly using dot notation.

        **Example: Access a top-level field**
        Given the following example document:
        ```json
        {
          "user": "alice"
        }
        ```

        You can access user as follows:
        ```json
        "field": "ctx.user"
        ```

        **Example: Access a nested field**
        Given the following example document:
        ```json
        {
          "user": {
            "name": "alice"
          }
        }
        ```

        You can access user.name as follows:
        ```json
        "field": "ctx.user.name"
        ```

        ## Accessing a field in the source
        To access a field in the document _source, refer to the field by its name:
        ```json
        {
          "set": {
            "field": "environment",
            "value": "production"
          }
        }
        ```

        Alternatively, you can explicitly use _source:
        ```json
        {
          "set": {
            "field": "_source.environment",
            "value": "production"
          }
        }
        ```

        ## Accessing metadata fields
        You can read or write to metadata fields such as _index, _type, _id, _routing.

        **Example: Set _routing dynamically**
        ```json
        {
          "set": {
            "field": "_routing",
            "value": "{{region}}"
          }
        }
        ```

        Using {{_id}} is not supported when document IDs are auto-generated.

        ## Accessing ingest metadata fields
        The _ingest.timestamp field represents the time at which the ingest node received the document. To persist this timestamp, use the set processor:
        ```json
        {
          "set": {
            "field": "received_at",
            "value": "{{_ingest.timestamp}}"
          }
        }
        ```

        ## Using ctx in Mustache templates
        Mustache templates allow you to dynamically insert field values into processor settings. To include unescaped field values, use triple curly braces ({{{ and }}}).

        **Example: Combining source fields**
        The following processor configuration combines the app and env fields, separated by an underscore (_), and stores the result in the log_label field:
        ```json
        {
          "set": {
            "field": "log_label",
            "value": "{{{app}}}_{{{env}}}"
          }
        }
        ```

        **Example: Generating a dynamic greeting using the set processor**
        If a document's user field is set to alice, use the following syntax to produce the result "greeting": "Hello, alice!":
        ```json
        {
          "set": {
            "field": "greeting",
            "value": "Hello, {{{user}}}!"
          }
        }
        ```

        ## Dynamic field names
        You can use a field's value as the name of a new field:
        ```json
        {
          "set": {
            "field": "{{service}}",
            "value": "{{code}}"
          }
        }
        ```

        **Example: Routing to a dynamic index based on status**
        The following processor configuration sets the target index dynamically by appending -events to the value of the status field:
        ```json
        {
          "set": {
            "field": "_index",
            "value": "{{status}}-events"
          }
        }
        ```

        ## Using ctx in the script processor
        The script processor enables advanced transformations by allowing you to execute custom scripts that modify document fields during ingestion.

        **Example: Adding a field only if another is missing**
        The following processor adds the error_message field with the value "none" only if the field is missing from the document:
        ```json
        {
          "script": {
            "lang": "painless",
            "source": "if (ctx.error_message == null) { ctx.error_message = 'none'; }"
          }
        }
        ```

        **Example: Copying a value from one field to another**
        The following processor copies the value from the timestamp field into a new field called event_time:
        ```json
        {
          "script": {
            "lang": "painless",
            "source": "ctx.event_time = ctx.timestamp;"
          }
        }
        ```

        **Example of a complete pipeline**
        The example below presents a complete ingest pipeline that sets a value for the tagline field using an existing field from the document, extracts the year from the date field, and captures the document's ingest timestamp in the received_at field.
        ```json
        PUT _ingest/pipeline/example-pipeline
        {
          "description": "Sets tags, log label, and defaults error message",
          "processors": [
            {
              "set": {
                "field": "tagline",
                "value": "{{{user.first}}} from {{{department}}}"
              }
            },
            {
              "script": {
                "lang": "painless",
                "source": "ctx.year = ctx.date.substring(0, 4);"
              }
            },
            {
              "set": {
                "field": "received_at",
                "value": "{{_ingest.timestamp}}"
              }
            }
          ]
        }
        ```

        **To test the pipeline, use the following request:**
        ```json
        POST _ingest/pipeline/example-pipeline/_simulate
        {
          "docs": [
            {
              "_source": {
                "user": {
                  "first": "Liam"
                },
                "department": "Engineering",
                "date": "2024-12-03T14:05:00Z"
              }
            }
          ]
        }
        ```

        **The response shows the enriched document after processing, including the newly added tagline, extracted year, and the received_at timestamp generated by the ingest pipeline:**
        ```json
        {
          "docs": [
            {
              "doc": {
                "_index": "_index",
                "_id": "_id",
                "_source": {
                  "date": "2024-12-03T14:05:00Z",
                  "year": "2024",
                  "received_at": "2025-04-22T11:18:50.834050015Z",
                  "tagline": "Liam from Engineering",
                  "department": "Engineering",
                  "user": {
                    "first": "Liam"
                  }
                },
                "_ingest": {
                  "timestamp": "2025-04-22T11:18:50.834050015Z"
                }
              }
            }
          ]
        }
        ```
      operationId: accessPipelineData
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline to access data from.
          schema:
            type: string
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/AccessPipelineDataSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ingest_api.yml#/components/responses/AccessPipelineDataNotFound'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

    delete:
      tags: [ Ingest APIs ]
      summary: Delete Pipeline
      description: |
        The delete pipeline API operation deletes a pipeline.

        You can delete a specific pipeline by its ID or use wildcards to delete multiple pipelines.
      operationId: deletePipeline
      parameters:
        - name: pipeline_id
          in: path
          required: true
          description: The unique identifier of the ingest pipeline you want to delete. You can also use wildcards like * to delete multiple pipelines.
          schema:
            type: string
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'ingest_api.yml#/components/responses/DeletePipelineSuccess'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ingest_api.yml#/components/responses/DeletePipelineNotFound'
      security:
        - basicAuth: [ ]
        - jwtAuth: [ ]

  /_search/scroll:
    get:
      tags: [Scroll]
      summary: Scroll search (GET)
      operationId: scrollSearchGet
      parameters:
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/scroll_id'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/ScrollRequest'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/ScrollSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/ScrollBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Scroll]
      summary: Scroll search (POST)
      operationId: scrollSearchPost
      parameters:
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/scroll_id'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/ScrollRequest'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/ScrollSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/ScrollBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_search/scroll/{scroll_id}:
    parameters:
      - $ref: 'search_api.yml#/components/parameters/scroll_id_path'
    get:
      tags: [Scroll]
      summary: Scroll search by ID (GET)
      operationId: scrollSearchByIdGet
      parameters:
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/ScrollRequestByID'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/ScrollSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/ScrollBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Scroll]
      summary: Scroll search by ID (POST)
      operationId: scrollSearchByIdPost
      parameters:
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/ScrollRequestByID'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/ScrollSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/ScrollBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_search:
    get:
      tags: [Search]
      summary: Global search (GET)
      operationId: searchGlobalGet
      parameters:
        - $ref: 'search_api.yml#/components/parameters/allow_partial_search_results'
        - $ref: 'search_api.yml#/components/parameters/searchAnalyzer'
        - $ref: 'search_api.yml#/components/parameters/analyze_wildcard'
        - $ref: 'search_api.yml#/components/parameters/batched_reduce_size'
        - $ref: 'search_api.yml#/components/parameters/cancel_after_time_interval'
        - $ref: 'search_api.yml#/components/parameters/ccs_minimize_roundtrips'
        - $ref: 'search_api.yml#/components/parameters/default_operator'
        - $ref: 'search_api.yml#/components/parameters/df'
        - $ref: 'search_api.yml#/components/parameters/docvalue_fields'
        - $ref: 'search_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'search_api.yml#/components/parameters/searchExplain'
        - $ref: 'search_api.yml#/components/parameters/from'
        - $ref: 'search_api.yml#/components/parameters/ignore_throttled'
        - $ref: 'search_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'search_api.yml#/components/parameters/lenient'
        - $ref: 'search_api.yml#/components/parameters/max_concurrent_shard_requests'
        - $ref: 'search_api.yml#/components/parameters/phase_took'
        - $ref: 'search_api.yml#/components/parameters/pre_filter_shard_size'
        - $ref: 'search_api.yml#/components/parameters/preference'
        - $ref: 'search_api.yml#/components/parameters/q'
        - $ref: 'search_api.yml#/components/parameters/request_cache'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
        - $ref: 'search_api.yml#/components/parameters/routing'
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/search_type'
        - $ref: 'search_api.yml#/components/parameters/seq_no_primary_term'
        - $ref: 'search_api.yml#/components/parameters/size'
        - $ref: 'search_api.yml#/components/parameters/sort'
        - $ref: 'search_api.yml#/components/parameters/_source'
        - $ref: 'search_api.yml#/components/parameters/_source_excludes'
        - $ref: 'search_api.yml#/components/parameters/_source_includes'
        - $ref: 'search_api.yml#/components/parameters/stats'
        - $ref: 'search_api.yml#/components/parameters/stored_fields'
        - $ref: 'search_api.yml#/components/parameters/suggest_field'
        - $ref: 'search_api.yml#/components/parameters/suggest_mode'
        - $ref: 'search_api.yml#/components/parameters/suggest_size'
        - $ref: 'search_api.yml#/components/parameters/suggest_text'
        - $ref: 'search_api.yml#/components/parameters/terminate_after'
        - $ref: 'search_api.yml#/components/parameters/timeout'
        - $ref: 'search_api.yml#/components/parameters/track_scores'
        - $ref: 'search_api.yml#/components/parameters/track_total_hits'
        - $ref: 'search_api.yml#/components/parameters/typed_keys'
        - $ref: 'search_api.yml#/components/parameters/version'
        - $ref: 'search_api.yml#/components/parameters/include_named_queries_score'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/SearchRequest'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/SearchSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/SearchBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'search_api.yml#/components/responses/SearchNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Search]
      summary: Global search (POST)
      operationId: searchGlobalPost
      parameters:
        - $ref: 'search_api.yml#/components/parameters/allow_partial_search_results'
        - $ref: 'search_api.yml#/components/parameters/searchAnalyzer'
        - $ref: 'search_api.yml#/components/parameters/analyze_wildcard'
        - $ref: 'search_api.yml#/components/parameters/batched_reduce_size'
        - $ref: 'search_api.yml#/components/parameters/cancel_after_time_interval'
        - $ref: 'search_api.yml#/components/parameters/ccs_minimize_roundtrips'
        - $ref: 'search_api.yml#/components/parameters/default_operator'
        - $ref: 'search_api.yml#/components/parameters/df'
        - $ref: 'search_api.yml#/components/parameters/docvalue_fields'
        - $ref: 'search_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'search_api.yml#/components/parameters/searchExplain'
        - $ref: 'search_api.yml#/components/parameters/from'
        - $ref: 'search_api.yml#/components/parameters/ignore_throttled'
        - $ref: 'search_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'search_api.yml#/components/parameters/lenient'
        - $ref: 'search_api.yml#/components/parameters/max_concurrent_shard_requests'
        - $ref: 'search_api.yml#/components/parameters/phase_took'
        - $ref: 'search_api.yml#/components/parameters/pre_filter_shard_size'
        - $ref: 'search_api.yml#/components/parameters/preference'
        - $ref: 'search_api.yml#/components/parameters/q'
        - $ref: 'search_api.yml#/components/parameters/request_cache'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
        - $ref: 'search_api.yml#/components/parameters/routing'
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/search_type'
        - $ref: 'search_api.yml#/components/parameters/seq_no_primary_term'
        - $ref: 'search_api.yml#/components/parameters/size'
        - $ref: 'search_api.yml#/components/parameters/sort'
        - $ref: 'search_api.yml#/components/parameters/_source'
        - $ref: 'search_api.yml#/components/parameters/_source_excludes'
        - $ref: 'search_api.yml#/components/parameters/_source_includes'
        - $ref: 'search_api.yml#/components/parameters/stats'
        - $ref: 'search_api.yml#/components/parameters/stored_fields'
        - $ref: 'search_api.yml#/components/parameters/suggest_field'
        - $ref: 'search_api.yml#/components/parameters/suggest_mode'
        - $ref: 'search_api.yml#/components/parameters/suggest_size'
        - $ref: 'search_api.yml#/components/parameters/suggest_text'
        - $ref: 'search_api.yml#/components/parameters/terminate_after'
        - $ref: 'search_api.yml#/components/parameters/timeout'
        - $ref: 'search_api.yml#/components/parameters/track_scores'
        - $ref: 'search_api.yml#/components/parameters/track_total_hits'
        - $ref: 'search_api.yml#/components/parameters/typed_keys'
        - $ref: 'search_api.yml#/components/parameters/version'
        - $ref: 'search_api.yml#/components/parameters/include_named_queries_score'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/SearchRequest'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/SearchSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/SearchBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'search_api.yml#/components/responses/SearchNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_search:
    parameters:
      - $ref: 'analyze_api.yml#/components/parameters/index'
    get:
      tags: [Search]
      summary: Index search (GET)
      operationId: searchIndexGet
      parameters:
        - $ref: 'search_api.yml#/components/parameters/allow_partial_search_results'
        - $ref: 'search_api.yml#/components/parameters/searchAnalyzer'
        - $ref: 'search_api.yml#/components/parameters/analyze_wildcard'
        - $ref: 'search_api.yml#/components/parameters/batched_reduce_size'
        - $ref: 'search_api.yml#/components/parameters/cancel_after_time_interval'
        - $ref: 'search_api.yml#/components/parameters/ccs_minimize_roundtrips'
        - $ref: 'search_api.yml#/components/parameters/default_operator'
        - $ref: 'search_api.yml#/components/parameters/df'
        - $ref: 'search_api.yml#/components/parameters/docvalue_fields'
        - $ref: 'search_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'search_api.yml#/components/parameters/searchExplain'
        - $ref: 'search_api.yml#/components/parameters/from'
        - $ref: 'search_api.yml#/components/parameters/ignore_throttled'
        - $ref: 'search_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'search_api.yml#/components/parameters/lenient'
        - $ref: 'search_api.yml#/components/parameters/max_concurrent_shard_requests'
        - $ref: 'search_api.yml#/components/parameters/phase_took'
        - $ref: 'search_api.yml#/components/parameters/pre_filter_shard_size'
        - $ref: 'search_api.yml#/components/parameters/preference'
        - $ref: 'search_api.yml#/components/parameters/q'
        - $ref: 'search_api.yml#/components/parameters/request_cache'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
        - $ref: 'search_api.yml#/components/parameters/routing'
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/search_type'
        - $ref: 'search_api.yml#/components/parameters/seq_no_primary_term'
        - $ref: 'search_api.yml#/components/parameters/size'
        - $ref: 'search_api.yml#/components/parameters/sort'
        - $ref: 'search_api.yml#/components/parameters/_source'
        - $ref: 'search_api.yml#/components/parameters/_source_excludes'
        - $ref: 'search_api.yml#/components/parameters/_source_includes'
        - $ref: 'search_api.yml#/components/parameters/stats'
        - $ref: 'search_api.yml#/components/parameters/stored_fields'
        - $ref: 'search_api.yml#/components/parameters/suggest_field'
        - $ref: 'search_api.yml#/components/parameters/suggest_mode'
        - $ref: 'search_api.yml#/components/parameters/suggest_size'
        - $ref: 'search_api.yml#/components/parameters/suggest_text'
        - $ref: 'search_api.yml#/components/parameters/terminate_after'
        - $ref: 'search_api.yml#/components/parameters/timeout'
        - $ref: 'search_api.yml#/components/parameters/track_scores'
        - $ref: 'search_api.yml#/components/parameters/track_total_hits'
        - $ref: 'search_api.yml#/components/parameters/typed_keys'
        - $ref: 'search_api.yml#/components/parameters/version'
        - $ref: 'search_api.yml#/components/parameters/include_named_queries_score'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/SearchRequest'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/SearchSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/SearchBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'search_api.yml#/components/responses/SearchNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Search]
      summary: Index search (POST)
      operationId: searchIndexPost
      parameters:
        - $ref: 'search_api.yml#/components/parameters/allow_partial_search_results'
        - $ref: 'search_api.yml#/components/parameters/searchAnalyzer'
        - $ref: 'search_api.yml#/components/parameters/analyze_wildcard'
        - $ref: 'search_api.yml#/components/parameters/batched_reduce_size'
        - $ref: 'search_api.yml#/components/parameters/cancel_after_time_interval'
        - $ref: 'search_api.yml#/components/parameters/ccs_minimize_roundtrips'
        - $ref: 'search_api.yml#/components/parameters/default_operator'
        - $ref: 'search_api.yml#/components/parameters/df'
        - $ref: 'search_api.yml#/components/parameters/docvalue_fields'
        - $ref: 'search_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'search_api.yml#/components/parameters/searchExplain'
        - $ref: 'search_api.yml#/components/parameters/from'
        - $ref: 'search_api.yml#/components/parameters/ignore_throttled'
        - $ref: 'search_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'search_api.yml#/components/parameters/lenient'
        - $ref: 'search_api.yml#/components/parameters/max_concurrent_shard_requests'
        - $ref: 'search_api.yml#/components/parameters/phase_took'
        - $ref: 'search_api.yml#/components/parameters/pre_filter_shard_size'
        - $ref: 'search_api.yml#/components/parameters/preference'
        - $ref: 'search_api.yml#/components/parameters/q'
        - $ref: 'search_api.yml#/components/parameters/request_cache'
        - $ref: 'search_api.yml#/components/parameters/rest_total_hits_as_int'
        - $ref: 'search_api.yml#/components/parameters/routing'
        - $ref: 'search_api.yml#/components/parameters/scroll'
        - $ref: 'search_api.yml#/components/parameters/search_type'
        - $ref: 'search_api.yml#/components/parameters/seq_no_primary_term'
        - $ref: 'search_api.yml#/components/parameters/size'
        - $ref: 'search_api.yml#/components/parameters/sort'
        - $ref: 'search_api.yml#/components/parameters/_source'
        - $ref: 'search_api.yml#/components/parameters/_source_excludes'
        - $ref: 'search_api.yml#/components/parameters/_source_includes'
        - $ref: 'search_api.yml#/components/parameters/stats'
        - $ref: 'search_api.yml#/components/parameters/stored_fields'
        - $ref: 'search_api.yml#/components/parameters/suggest_field'
        - $ref: 'search_api.yml#/components/parameters/suggest_mode'
        - $ref: 'search_api.yml#/components/parameters/suggest_size'
        - $ref: 'search_api.yml#/components/parameters/suggest_text'
        - $ref: 'search_api.yml#/components/parameters/terminate_after'
        - $ref: 'search_api.yml#/components/parameters/timeout'
        - $ref: 'search_api.yml#/components/parameters/track_scores'
        - $ref: 'search_api.yml#/components/parameters/track_total_hits'
        - $ref: 'search_api.yml#/components/parameters/typed_keys'
        - $ref: 'search_api.yml#/components/parameters/version'
        - $ref: 'search_api.yml#/components/parameters/include_named_queries_score'
      requestBody:
        $ref: 'search_api.yml#/components/requestBodies/SearchRequest'
      responses:
        '200':
          $ref: 'search_api.yml#/components/responses/SearchSuccess'
        '400':
          $ref: 'search_api.yml#/components/responses/SearchBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'search_api.yml#/components/responses/SearchNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/allocation/explain:
    get:
      tags: [Cluster API]
      summary: Cluster allocation explain (GET)
      description: |
        The cluster allocation explain request finds an unassigned shard and explains why it cannot be allocated to a node.
      operationId: clusterAllocationExplainGet
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/include_yes_decisions'
        - $ref: 'cluster_api.yml#/components/parameters/include_disk_info'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'cluster_api.yml#/components/requestBodies/ClusterAllocationExplainRequest'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterAllocationExplainSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterAllocExplainBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'cluster_api.yml#/components/responses/IndexNotFound'
        '405':
          $ref: 'cluster_api.yml#/components/responses/MethodNotAllowed'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Cluster API]
      summary: Cluster allocation explain (POST)
      description: |
        The cluster allocation explain request finds an unassigned shard and explains why it cannot be allocated to a node.
      operationId: clusterAllocationExplainPost
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/include_yes_decisions'
        - $ref: 'cluster_api.yml#/components/parameters/include_disk_info'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'cluster_api.yml#/components/requestBodies/ClusterAllocationExplainRequest'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterAllocationExplainSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'cluster_api.yml#/components/responses/IndexNotFound'
        '405':
          $ref: 'cluster_api.yml#/components/responses/MethodNotAllowed'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/routing/awareness/{attribute}/weights:
    parameters:
      - $ref: 'cluster_api.yml#/components/parameters/awareness_attribute'
    get:
      tags: [Cluster API]
      summary: Cluster routing and awareness (GET)
      description: |
        Cluster routing and awareness is used to control the distribution of search or HTTP traffic. You can use the weights per awareness attribute to control the distribution of search or HTTP traffic across zones. This is commonly used for zonal deployments, heterogeneous instances, and routing traffic away from zones during zonal failure.
      operationId: getClusterRoutingAwarenessWeights
      parameters:
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingWeightsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingForbidden'
        '500':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingServerError'
      security:
        - basicAuth: []
        - jwtAuth: []

    put:
      tags: [Cluster API]
      summary: Cluster routing and awareness (PUT)
      description: |
        Cluster routing and awareness is used to control the distribution of search or HTTP traffic. You can use the weights per awareness attribute to control the distribution of search or HTTP traffic across zones. This is commonly used for zonal deployments, heterogeneous instances, and routing traffic away from zones during zonal failure.
      operationId: setClusterRoutingAwarenessWeights
      parameters:
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'cluster_api.yml#/components/requestBodies/ClusterRoutingWeightsRequest'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingWeightsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingForbidden'
        '500':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingServerError'
      security:
        - basicAuth: []
        - jwtAuth: []

    delete:
      tags: [Cluster API]
      summary: Cluster routing and awareness (DELETE)
      description: |
        Cluster routing and awareness is used to control the distribution of search or HTTP traffic. You can use the weights per awareness attribute to control the distribution of search or HTTP traffic across zones. This is commonly used for zonal deployments, heterogeneous instances, and routing traffic away from zones during zonal failure.
      operationId: deleteClusterRoutingAwarenessWeights
      parameters:
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingDeleteSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingForbidden'
        '500':
          $ref: 'cluster_api.yml#/components/responses/ClusterRoutingServerError'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/decommission/awareness/{awareness_attribute_name}/{awareness_attribute_value}:
    parameters:
      - $ref: 'cluster_api.yml#/components/parameters/awareness_attribute_name'
      - $ref: 'cluster_api.yml#/components/parameters/awareness_attribute_value'
    put:
      tags: [Cluster API]
      summary: Cluster decommission (PUT)
      description: |
        The cluster decommission operation adds support for awareness based decommissioning. It greatly benefits multi-zone deployments where awareness attributes, such as zones, can aid in applying new upgrades to a cluster in a controlled fashion. This is especially useful during outages, in which case, you can decommission the unhealthy zone to prevent replication requests from stalling and prevent your request backlog from becoming too large.
      operationId: decommissionAwareness
      parameters:
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/DecommissionSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/decommission/awareness/{awareness_attribute_name}/_status:
    parameters:
      - $ref: 'cluster_api.yml#/components/parameters/awareness_attribute_name'
    get:
      tags: [Cluster API]
      summary: Cluster decommission (GET)
      description: |
        The cluster decommission operation adds support for awareness based decommissioning. It greatly benefits multi-zone deployments where awareness attributes, such as zones, can aid in applying new upgrades to a cluster in a controlled fashion. This is especially useful during outages, in which case, you can decommission the unhealthy zone to prevent replication requests from stalling and prevent your request backlog from becoming too large.
      operationId: getDecommissionStatus
      parameters:
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/DecommissionSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/decommission/awareness:
    delete:
      tags: [Cluster API]
      summary: Cluster decommission (DELETE)
      description: |
        The cluster decommission operation adds support for awareness based decommissioning. It greatly benefits multi-zone deployments where awareness attributes, such as zones, can aid in applying new upgrades to a cluster in a controlled fashion. This is especially useful during outages, in which case, you can decommission the unhealthy zone to prevent replication requests from stalling and prevent your request backlog from becoming too large.
      operationId: cancelDecommission
      parameters:
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/DecommissionSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/health:
    get:
      tags: [Cluster API]
      summary: Cluster health
      description: |
        The cluster health API returns a simple status of the health of your cluster. The cluster health is represented in three colors: green, yellow, and red. A green status means all primary shards and their replicas are allocated to nodes. A yellow status means all primary shards are allocated to nodes, but some replicas aren't. A red status means at least one primary shard is not allocated to any node.
      operationId: clusterHealth
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cluster_api.yml#/components/parameters/level'
        - $ref: 'cluster_api.yml#/components/parameters/awareness_attribute_health'
        - $ref: 'cluster_api.yml#/components/parameters/local'
        - $ref: 'cluster_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cluster_api.yml#/components/parameters/timeout'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_nodes'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_events'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_no_relocating_shards'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_no_initializing_shards'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_status'
        - $ref: 'cluster_api.yml#/components/parameters/weights'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthForbidden'
        '405':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthMethodNotAllowed'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/health/{index}:
    get:
      tags: [Cluster API]
      summary: Cluster health (Index)
      description: |
        The cluster health API returns a simple status of the health of your cluster. The cluster health is represented in three colors: green, yellow, and red. A green status means all primary shards and their replicas are allocated to nodes. A yellow status means all primary shards are allocated to nodes, but some replicas aren't. A red status means at least one primary shard is not allocated to any node.
      operationId: clusterHealthIndex
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/cluster_health_index'
        - $ref: 'cluster_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'cluster_api.yml#/components/parameters/level'
        - $ref: 'cluster_api.yml#/components/parameters/awareness_attribute_health'
        - $ref: 'cluster_api.yml#/components/parameters/local'
        - $ref: 'cluster_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cluster_api.yml#/components/parameters/timeout'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_nodes'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_events'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_no_relocating_shards'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_no_initializing_shards'
        - $ref: 'cluster_api.yml#/components/parameters/wait_for_status'
        - $ref: 'cluster_api.yml#/components/parameters/weights'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthForbidden'
        '405':
          $ref: 'cluster_api.yml#/components/responses/ClusterHealthMethodNotAllowed'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/settings:
    get:
      tags: [Cluster API]
      summary: Cluster settings (GET)
      description: |
        The cluster settings operation allows you to view and modify the current settings for your cluster, as well as review the default settings. Any setting updates made through the API are applied to all nodes within the cluster by Wazuh indexer.

        The request body is only supported by PUT operation. Not all settings can be updated via the cluster settings API, some settings are only available in the configuration file. When you try to update a setting that is not supported by the cluster setting API, a `"setting [cluster.some.setting], not dynamically updateable"` response is received.

        The cluster settings API contains three types of settings: persistent, transient, and default. Persistent settings remain after a cluster restart, unlike transient settings, which the Wazuh indexer removes after a restart. When the same setting is specified in multiple places, the following hierarchy is followed by the Wazuh indexer:

        - Transient settings
        - Persistent settings
        - Settings from the `/etc/wazuh-indexer/opensearch.yml` file
        - Default settings

        The cluster setting API PUT operation must contain either `transient` or `persistent` value. To check available settings, you can run the GET request with the `include_defaults` parameter and copy any setting to edit the required setting.
      operationId: getClusterSettings
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/flat_settings'
        - $ref: 'cluster_api.yml#/components/parameters/include_defaults'
        - $ref: 'cluster_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterSettingsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterSettingsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterSettingsForbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    put:
      tags: [Cluster API]
      summary: Cluster settings (PUT)
      description: |
        The cluster settings operation allows you to view and modify the current settings for your cluster, as well as review the default settings. Any setting updates made through the API are applied to all nodes within the cluster by Wazuh indexer.

        The request body is only supported by PUT operation. Not all settings can be updated via the cluster settings API, some settings are only available in the configuration file. When you try to update a setting that is not supported by the cluster setting API, a `"setting [cluster.some.setting], not dynamically updateable"` response is received.

        The cluster settings API contains three types of settings: persistent, transient, and default. Persistent settings remain after a cluster restart, unlike transient settings, which the Wazuh indexer removes after a restart. When the same setting is specified in multiple places, the following hierarchy is followed by the Wazuh indexer:

        - Transient settings
        - Persistent settings
        - Settings from the `/etc/wazuh-indexer/opensearch.yml` file
        - Default settings

        The cluster setting API PUT operation must contain either `transient` or `persistent` value. To check available settings, you can run the GET request with the `include_defaults` parameter and copy any setting to edit the required setting.
      operationId: putClusterSettings
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/flat_settings'
        - $ref: 'cluster_api.yml#/components/parameters/cluster_manager_timeout'
        - $ref: 'cluster_api.yml#/components/parameters/timeout'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'cluster_api.yml#/components/requestBodies/ClusterSettingsRequest'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterSettingsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterSettingsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterSettingsForbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_cluster/stats:
    get:
      tags:
        - Cluster API
      summary: Cluster stats
      description: The cluster stats API operation returns statistics about your cluster.
      operationId: getClusterStats
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsForbidden'
        '405':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsMethodNotAllowed'

  /_cluster/stats/nodes/{node_filters}:
    get:
      tags:
        - Cluster API
      summary: Cluster stats (Node filters)
      description: The cluster stats API operation returns statistics about your cluster.
      operationId: getClusterStatsWithNodeFilters
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/node_filters'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsForbidden'
        '405':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsMethodNotAllowed'

  /_cluster/stats/{metric}/nodes/{node_filters}:
    get:
      tags:
        - Cluster API
      summary: Cluster stats (Metric and node filters)
      description: The cluster stats API operation returns statistics about your cluster.
      operationId: getClusterStatsWithMetricAndNodeFilters
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/node_filters'
        - $ref: 'cluster_api.yml#/components/parameters/metric'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsForbidden'
        '405':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsMethodNotAllowed'

  /_cluster/stats/{metric}/{index_metric}/nodes/{node_filters}:
    get:
      tags:
        - Cluster API
      summary: Cluster stats (Metric, index metric and node filters)
      description: The cluster stats API operation returns statistics about your cluster.
      operationId: getClusterStatsWithMetricIndexMetricAndNodeFilters
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: 'cluster_api.yml#/components/parameters/node_filters'
        - $ref: 'cluster_api.yml#/components/parameters/metric'
        - $ref: 'cluster_api.yml#/components/parameters/index_metric'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsSuccess'
        '400':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsForbidden'
        '405':
          $ref: 'cluster_api.yml#/components/responses/ClusterStatsMethodNotAllowed'

  /_plugins/_ism/policies/{policy_id}:
    put:
      tags:
        - Index state management API
      summary: Create policy
      description: This API operation creates  a policy.
      operationId: createPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: A unique identifier used to reference the policy being created.
          schema:
            type: string
        - name: if_seq_no
          in: query
          description: Performs the operation only if the policy has the specified sequence number.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          description: Performs the operation only if the policy has the specified primary term.
          schema:
            type: integer
        - name: refresh
          in: query
          description: Specifies if the affected shards should be refreshed.
          schema:
            type: string
            enum: ["true", "false", "wait_for"]
            default: "false"
        - $ref: '#/components/parameters/pretty'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'ism_api.yml#/components/schemas/PolicyRequest'
            example:
              policy:
                description: "ingesting logs"
                default_state: "ingest"
                states:
                  - name: "ingest"
                    actions:
                      - rollover:
                          min_doc_count: 5
                    transitions:
                      - state_name: "search"
                  - name: "search"
                    actions: []
                    transitions:
                      - state_name: "delete"
                        conditions:
                          min_index_age: "5m"
                  - name: "delete"
                    actions:
                      - delete: {}
                    transitions: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/PolicyResponse'
              example:
                _id: "policy_1"
                _version: 1
                _primary_term: 8
                _seq_no: 140840
                policy:
                  policy:
                    policy_id: "policy_1"
                    description: "ingesting logs"
                    last_updated_time: 1744640873889
                    schema_version: 1
                    error_notification: null
                    default_state: "ingest"
                    states:
                      - name: "ingest"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            rollover:
                              min_doc_count: 5
                              copy_alias: false
                        transitions:
                          - state_name: "search"
                      - name: "search"
                        actions: []
                        transitions:
                          - state_name: "delete"
                            conditions:
                              min_index_age: "5m"
                      - name: "delete"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            delete: {}
                        transitions: []
                    ism_template: null
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: 'ism_api.yml#/components/responses/VersionConflict'

    get:
      tags:
        - Index state management API
      summary: Get policy
      description: Retrieves a policy using its `policy_id`.
      operationId: getPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: The unique identifier of the policy. It is required to retrieve a specific policy.
          schema:
            type: string
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/PolicyResponse'
              example:
                _id: "policy_1"
                _version: 2
                _seq_no: 144943
                _primary_term: 8
                policy:
                  policy_id: "policy_1"
                  description: "ingesting logs"
                  last_updated_time: 1744701144668
                  schema_version: 21
                  error_notification: null
                  default_state: "ingest"
                  states:
                    - name: "ingest"
                      actions:
                        - retry:
                            count: 3
                            backoff: "exponential"
                            delay: "1m"
                          rollover:
                            min_doc_count: 5
                            copy_alias: false
                      transitions:
                        - state_name: "search"
                    - name: "search"
                      actions: []
                      transitions:
                        - state_name: "delete"
                          conditions:
                            min_index_age: "5m"
                    - name: "delete"
                      actions:
                        - retry:
                            count: 3
                            backoff: "exponential"
                            delay: "1m"
                          delete: {}
                      transitions: []
                  ism_template: null
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequestGet'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ism_api.yml#/components/responses/PolicyNotFoundGet'

    delete:
      tags:
        - Index state management API
      summary: Delete policy
      description: This deletes the policy using the `policy_id`.
      operationId: deletePolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: The unique identifier of the ISM policy that you want to delete. This ID is required and must match the policy you previously created or applied to an index.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/DeletePolicyResponse'
              example:
                _index: ".opendistro-ism-config"
                _id: "policy_5"
                _version: 2
                result: "deleted"
                forced_refresh: true
                _shards:
                  total: 2
                  successful: 1
                  failed: 0
                _seq_no: 164481
                _primary_term: 9
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequestDelete'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ism_api.yml#/components/responses/PolicyNotFoundDelete'

  /_plugins/_ism/add/{index}:
    post:
      tags:
        - Index state management API
      summary: Add policy
      description: |
        This API operation associates a policy with an index. If the index already has a policy, this operation does not modify it.

        If you use a wildcard `*` while adding a policy to an index, the ISM plugin interprets `*` as all indexes, including system indexes like `.opendistro-security`, which stores users, roles, and tenants. A delete action in your policy might accidentally delete all user roles and tenants in your cluster. Don’t use the broad `*` wildcard, and instead add a prefix, such as `my-logs*`, when specifying indexes with the `_ism/add` API.
      operationId: addPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index (or a comma-separated list of indexes) to which the ISM policy should be applied.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'ism_api.yml#/components/schemas/AddPolicyRequest'
            example:
              policy_id: "policy_1"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/AddPolicyResponse'
              example:
                updated_indices: 1
                failures: false
                failed_indices: []
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ism_api.yml#/components/responses/PolicyNotFound'

  /_plugins/_ism/policies/{policy_id}?if_seq_no={value}&if_primary_term={value}:
    put:
      tags:
        - Index state management API
      summary: Update policy
      description: |
        This API operation updates an existing policy. To perform this update, you must include the `seq_no` and `primary_term` parameters. If these values don't match the current policy version or the policy doesn't exist, Index State Management (ISM) will return an error.
      operationId: updatePolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: The unique identifier of the policy to update.
          schema:
            type: string
        - name: if_seq_no
          in: query
          required: true
          description: The sequence number for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          required: true
          description: The primary term for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - $ref: '#/components/parameters/pretty'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'ism_api.yml#/components/schemas/PolicyRequestUpdate'
            example:
              policy:
                description: "ingesting logs"
                default_state: "ingest"
                states:
                  - name: "ingest"
                    actions:
                      - rollover:
                          min_doc_count: 5
                    transitions:
                      - state_name: "search"
                  - name: "search"
                    actions: []
                    transitions:
                      - state_name: "delete"
                        conditions:
                          min_index_age: "5m"
                  - name: "delete"
                    actions:
                      - delete: {}
                    transitions: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/PolicyResponse'
              example:
                _id: "policy_1"
                _version: 2
                _primary_term: 8
                _seq_no: 144943
                policy:
                  policy:
                    policy_id: "policy_1"
                    description: "ingesting logs"
                    last_updated_time: 1744701144668
                    schema_version: 1
                    error_notification: null
                    default_state: "ingest"
                    states:
                      - name: "ingest"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            rollover:
                              min_doc_count: 5
                              copy_alias: false
                        transitions:
                          - state_name: "search"
                      - name: "search"
                        actions: []
                        transitions:
                          - state_name: "delete"
                            conditions:
                              min_index_age: "5m"
                      - name: "delete"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            delete: {}
                        transitions: []
                    ism_template: null
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequestUpdate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: 'ism_api.yml#/components/responses/VersionConflictUpdate'

  /_plugins/_ism/remove/{index}:
    post:
      tags:
        - Index state management API
      summary: Remove policy from index
      description: Removes any Index State Management (ISM) policy currently associated with an index.
      operationId: removePolicyFromIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index from which to remove the ISM policy.
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/RemovePolicyResponse'
              example:
                updated_indices: 1
                failures: false
                failed_indices: []
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequestRemove'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: 'ism_api.yml#/components/responses/PolicyNotFoundRemove'

  /_plugins/_ism/change_policy/{index}:
    post:
      tags:
        - Index state management API
      summary: Update managed index policy
      description: |
        Update the managed index policy to a new policy or a new version of an existing one. This update can be applied to multiple indexes at once using an index pattern. To ensure the update targets only specific managed indexes, a state filter can be included. This filter limits the update to indexes currently in the specified state. It's also possible to define the state that the managed index transitions to after the policy change takes effect.

        Policy changes are handled as asynchronous background processes and are not executed immediately. This delay prevents disruptions to currently running managed indexes. If the new policy introduces minor configuration adjustments such as changing the `min_index_age` in a rollover condition from `1000d` to `100d`, the change is applied during the index's next execution. However, if the update alters the current state, its actions, or the order of actions, the changes are applied only after the current state completes and before transitioning to a new one.

        For example, changing the policy on `wazuh-alerts-4.x-2025.03.11` to `policy_1` (either a new or updated version) will only take place if `wazuh-alerts-4.x-2025.03.11` is in the `searches` state. Once the policy is updated, the index will transition to the `delete` state.
      operationId: updateManagedIndexPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index or a comma-separated list of index names to which the policy change should be applied. You can also use wildcard expressions (e.g., `wazuh-alerts-4.x-*`) to target multiple indexes.
          schema:
            type: string
        - name: if_seq_no
          in: query
          description: The sequence number for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          description: The primary term for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - $ref: '#/components/parameters/pretty'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'ism_api.yml#/components/schemas/ChangePolicyRequest'
            example:
              policy_id: "policy_1"
              state: "delete"
              include:
                - state: "searches"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/ChangePolicyResponse'
              example:
                updated_indices: 1
                failures: false
                failed_indices: []
        '400':
          description: Response to report a bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityError'
              example:
                error:
                  root_cause:
                    - type: "illegal_argument_exception"
                      reason: "ChangePolicy policy id is null"
                  type: "illegal_argument_exception"
                  reason: "ChangePolicy policy id is null"
                status: 400
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          description: Response to report a request not found
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/IndexNotFoundException'
              example:
                error:
                  root_cause:
                    - type: "index_not_found_exception"
                      reason: "no such index [wazuh-alerts-4.x-2025.03.40]"
                      index: "wazuh-alerts-4.x-2025.03.40"
                      resource.id: "wazuh-alerts-4.x-2025.03.40"
                      resource.type: "index_or_alias"
                      index_uuid: "_na_"
                  type: "index_not_found_exception"
                  reason: "no such index [wazuh-alerts-4.x-2025.03.40]"
                  index: "wazuh-alerts-4.x-2025.03.40"
                  resource.id: "wazuh-alerts-4.x-2025.03.40"
                  resource.type: "index_or_alias"
                  index_uuid: "_na_"
                status: 404

  /_plugins/_ism/retry/{index}:
    post:
      tags:
        - Index state management API
      summary: Retry failed index
      description: |
        To successfully perform a retry, the index must be managed by ISM and must currently be in a failed state.
        Wildcard patterns (`*`) can be used to target and retry multiple failed indexes simultaneously.
      operationId: retryFailedIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: |
            The name of the index or a comma-separated list of index names for which to retry failed actions.
            You can also use wildcard expressions (e.g., `wazuh-alerts-4.x-*`) to target multiple indexes.
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: |
                    Specifies the name of the state where the retry should be applied.
                    If not provided, the retry is applied to the current failed state.
            example:
              state: "delete"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/RetryFailedIndexResponse'
              example:
                updated_indices: 0
                failures: false
                failed_indices: []
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequestRemove'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ism_api.yml#/components/responses/PolicyNotFoundRemove'

  /_plugins/_ism/explain/{index}:
    get:
      tags:
        - Index state management API
      summary: Explain index
      description: The Explain index API retrieves the current state of an index. It supports the use of index patterns to obtain the status of multiple indexes simultaneously.
      operationId: explainIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: Specifies the name of the index or index pattern whose ISM (Index State Management) status should be retrieved. You can also use wildcard expressions (e.g., `wazuh-alerts-4.x-*`) to target multiple indexes.
          schema:
            type: string
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/ExplainIndexResponse'
              example:
                "wazuh-alerts-4.x-2025.03.36":
                  "index.plugins.index_state_management.policy_id": "policy_1"
                  "index.opendistro.index_state_management.policy_id": "policy_1"
                  index: "wazuh-alerts-4.x-2025.03.36"
                  index_uuid: "1GkrhBwOQA-2I-Giq0ul9A"
                  policy_id: "policy_1"
                  policy_seq_no: 144943
                  policy_primary_term: 8
                  rolled_over: false
                  index_creation_date: 1742532571328
                  state:
                    name: "ingest"
                    start_time: 1745214419126
                  action:
                    name: "rollover"
                    start_time: 1745214828297
                    index: 0
                    failed: true
                    consumed_retries: 3
                    last_retry_time: 1745215466654
                  step:
                    name: "attempt_rollover"
                    start_time: 1745214828297
                    step_status: "failed"
                  retry_info:
                    failed: false
                    consumed_retries: 0
                  info:
                    message: "Missing rollover_alias index setting [index=wazuh-alerts-4.x-2025.03.36]"
                  enabled: false
                total_managed_indices: 1
        '400':
          $ref: 'ism_api.yml#/components/responses/PolicyBadRequestExplain'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /_plugins/_ism/explain/{index}?validate_action={value}:
    get:
      tags:
        - ISM error prevention API
      summary: Explain index with validation
      description: |
        To enable error prevention validation, set the `plugins.index_state_management.action_validation.enabled` setting to `true`:

        ```json
        PUT _cluster/settings
        {
          "persistent":{
            "plugins.index_state_management.action_validation.enabled": "true"
          }
        }
        ```

        The response should be as below:

        ```json
        {
          "acknowledged": true,
          "persistent": {
            "plugins": {
              "index_state_management": {
                "action_validation": {
                  "enabled": "true"
                }
              }
            }
          },
          "transient": {}
        }
        ```

        To check an error prevention validation status and message, pass `validate_action=true` to the `_plugins/_ism/explain` endpoint.
      operationId: explainIndexWithValidation
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index you want to retrieve the ISM explanation details. You can also use index patterns (wazuh-alerts-4.x-*) to retrieve information for multiple indexes.
          schema:
            type: string
        - name: validate_action
          in: query
          required: false
          description: When set to true, this parameter checks whether the current action in the ISM policy for the specified index is valid and free of configuration issues.
          schema:
            type: boolean
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: 'ism_api.yml#/components/schemas/ExplainIndexResponse'
              example:
                "wazuh-alerts-4.x-2025.03.22":
                  "index.plugins.index_state_management.policy_id": "policy_15"
                  "index.opendistro.index_state_management.policy_id": "policy_15"
                  index: "wazuh-alerts-4.x-2025.03.22"
                  index_uuid: "GbPjnHpgTiivnQRY_wCJ1g"
                  policy_id: "policy_15"
                  policy_seq_no: 161427
                  policy_primary_term: 9
                  rolled_over: false
                  index_creation_date: 1742198911410
                  state:
                    name: "ingest"
                    start_time: 1745215282309
                  action:
                    name: "rollover"
                    start_time: 1745217086031
                    index: 0
                    failed: true
                    consumed_retries: 3
                    last_retry_time: 1745217814683
                  step:
                    name: "attempt_rollover"
                    start_time: 1745217086031
                    step_status: "failed"
                  retry_info:
                    failed: false
                    consumed_retries: 0
                  info:
                    message: "Missing rollover_alias index setting [index=wazuh-alerts-4.x-2025.03.22]"
                  enabled: false
                  validate:
                    validation_message: "Missing rollover_alias index setting [index=wazuh-alerts-4.x-2025.03.22]"
                    validation_status: "re_validating"
                total_managed_indices: 1
        '400':
          description: Response to report a validation bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      root_cause:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: The type of validation error
                            reason:
                              type: string
                              description: The reason for the validation failure
                      type:
                        type: string
                        description: The type of validation error
                      reason:
                        type: string
                        description: The reason for the validation failure
                      status:
                        type: integer
                        description: The HTTP status code
                  status:
                    type: integer
                    description: The HTTP status code
              example:
                error:
                  root_cause:
                    - type: "action_request_validation_exception"
                      reason: "Validation Failed: 1: no documents to get;"
                  type: "action_request_validation_exception"
                  reason: "Validation Failed: 1: no documents to get;"
                  status: 400
                status: 400
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'ism_api.yml#/components/responses/PolicyNotFoundRemove'

  /{index}/_doc/{id}:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
      - $ref: 'document_api.yml#/components/parameters/document_id'
    put:
      tags: [Document APIs]
      summary: Index document (PUT _doc)
      description: |
        The Index Document operation allows you to add an individual document to your index.
      operationId: indexDocumentPut
      parameters:
        - $ref: 'document_api.yml#/components/parameters/if_seq_no'
        - $ref: 'document_api.yml#/components/parameters/if_primary_term'
        - $ref: 'document_api.yml#/components/parameters/op_type'
        - $ref: 'document_api.yml#/components/parameters/pipeline'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/IndexDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/IndexDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/IndexDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    get:
      tags: [Document APIs]
      summary: Get document (GET)
      description: |
        Once a JSON document is added to your index, you can retrieve its information and data using the Get Document API. Use the GET method to retrieve a document along with its source or stored fields from a specific index. To check if a document exists, use the HEAD method.
      operationId: getDocument
      parameters:
        - $ref: 'document_api.yml#/components/parameters/preference'
        - $ref: 'document_api.yml#/components/parameters/realtime'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/stored_fields'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/GetDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/GetDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/GetDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/GetDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

    head:
      tags: [Document APIs]
      summary: Get document (HEAD)
      description: |
        Once a JSON document is added to your index, you can retrieve its information and data using the Get Document API. Use the GET method to retrieve a document along with its source or stored fields from a specific index. To check if a document exists, use the HEAD method.
      operationId: documentExists
      parameters:
        - $ref: 'document_api.yml#/components/parameters/preference'
        - $ref: 'document_api.yml#/components/parameters/realtime'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/stored_fields'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/GetDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/GetDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/GetDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/GetDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

    delete:
      tags: [Document APIs]
      summary: Delete document
      description: |
        If a document is no longer required in your index, you can remove it using the Delete Document API operation.
      operationId: deleteDocument
      parameters:
        - $ref: 'document_api.yml#/components/parameters/if_seq_no'
        - $ref: 'document_api.yml#/components/parameters/if_primary_term'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/DeleteDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/DocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/DeleteDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_doc:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
    post:
      tags: [Document APIs]
      summary: Index document (POST _doc)
      description: |
        The Index Document operation allows you to add an individual document to your index.
      operationId: indexDocumentPost
      parameters:
        - $ref: 'document_api.yml#/components/parameters/if_seq_no'
        - $ref: 'document_api.yml#/components/parameters/if_primary_term'
        - $ref: 'document_api.yml#/components/parameters/op_type'
        - $ref: 'document_api.yml#/components/parameters/pipeline'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/IndexDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/IndexDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/IndexDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_create/{id}:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
      - $ref: 'document_api.yml#/components/parameters/document_id'
    put:
      tags: [Document APIs]
      summary: Index document (PUT _create)
      description: |
        The Index Document operation allows you to add an individual document to your index.
      operationId: createDocumentPut
      parameters:
        - $ref: 'document_api.yml#/components/parameters/if_seq_no'
        - $ref: 'document_api.yml#/components/parameters/if_primary_term'
        - $ref: 'document_api.yml#/components/parameters/op_type'
        - $ref: 'document_api.yml#/components/parameters/pipeline'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/IndexDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/IndexDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/IndexDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Document APIs]
      summary: Index document (POST _create)
      description: |
        The Index Document operation allows you to create a new document with a specific ID. This operation will only succeed if a document with the same ID does not already exist.
      operationId: createDocumentPost
      parameters:
        - $ref: 'document_api.yml#/components/parameters/if_seq_no'
        - $ref: 'document_api.yml#/components/parameters/if_primary_term'
        - $ref: 'document_api.yml#/components/parameters/op_type'
        - $ref: 'document_api.yml#/components/parameters/pipeline'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version'
        - $ref: 'document_api.yml#/components/parameters/version_type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/IndexDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/IndexDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/IndexDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_update/{id}:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
      - $ref: 'document_api.yml#/components/parameters/document_id'
    post:
      tags: [Document APIs]
      summary: Update document
      description: |
        To modify a document's fields in your index, you can use the Update Document API. This can be done by providing the updated data directly or by including a script in the request body, which Wazuh indexer executes to update the document. By default, the update operation only applies to existing documents in the index. If the document does not exist, the API returns an error.
      operationId: updateDocument
      parameters:
        - $ref: 'document_api.yml#/components/parameters/if_seq_no'
        - $ref: 'document_api.yml#/components/parameters/if_primary_term'
        - $ref: 'document_api.yml#/components/parameters/lang'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/retry_on_conflict'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/UpdateDocumentRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/UpdateDocumentSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/UpdateDocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/UpdateDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_bulk:
    post:
      tags: [Document APIs]
      summary: Bulk
      description: |
        The bulk operation allows you to add, update, or delete multiple documents within a single request. This approach offers significant performance improvements over individual Wazuh indexing requests. Whenever possible, it is recommended to batch indexing operations using bulk requests for better efficiency.
      operationId: bulkOperations
      parameters:
        - $ref: 'document_api.yml#/components/parameters/pipeline_bulk'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/batch_size'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/BulkRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/BulkSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_bulk:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
    post:
      tags: [Document APIs]
      summary: Bulk (Index)
      description: |
        The bulk operation allows you to add, update, or delete multiple documents within a single request. This approach offers significant performance improvements over individual Wazuh indexing requests. Whenever possible, it is recommended to batch indexing operations using bulk requests for better efficiency.
      operationId: bulkOperationsIndex
      parameters:
        - $ref: 'document_api.yml#/components/parameters/pipeline_bulk'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/type'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/batch_size'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/BulkRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/BulkSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_mget:
    get:
      tags: [Document APIs]
      summary: Multi-get documents (Global GET)
      description: |
        The multi-get operation enables you to perform multiple GET requests within a single request, allowing you to retrieve multiple documents that match your specified criteria.
      operationId: multiGetDocumentsGet
      parameters:
        - $ref: 'document_api.yml#/components/parameters/preference_mget'
        - $ref: 'document_api.yml#/components/parameters/realtime_mget'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/stored_fields'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/MultiGetRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/MultiGetSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Document APIs]
      summary: Multi-get documents (Global POST)
      description: |
        The multi-get operation enables you to perform multiple GET requests within a single request, allowing you to retrieve multiple documents that match your specified criteria.
      operationId: multiGetDocumentsPost
      parameters:
        - $ref: 'document_api.yml#/components/parameters/preference_mget'
        - $ref: 'document_api.yml#/components/parameters/realtime_mget'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/stored_fields'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/MultiGetRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/MultiGetSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_mget:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
    get:
      tags: [Document APIs]
      summary: Multi-get documents (Index GET)
      description: |
        The multi-get operation enables you to perform multiple GET requests within a single request, allowing you to retrieve multiple documents that match your specified criteria.
      operationId: multiGetDocumentsIndexGet
      parameters:
        - $ref: 'document_api.yml#/components/parameters/preference_mget'
        - $ref: 'document_api.yml#/components/parameters/realtime_mget'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/stored_fields'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/MultiGetRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/MultiGetSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

    post:
      tags: [Document APIs]
      summary: Multi-get documents (Index POST)
      description: |
        The multi-get operation enables you to perform multiple GET requests within a single request, allowing you to retrieve multiple documents that match your specified criteria.
      operationId: multiGetDocumentsIndexPost
      parameters:
        - $ref: 'document_api.yml#/components/parameters/preference_mget'
        - $ref: 'document_api.yml#/components/parameters/realtime_mget'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/stored_fields'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/MultiGetRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/MultiGetSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_delete_by_query:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index'
    post:
      tags: [Document APIs]
      summary: Delete by query
      description: |
        You can add a query to your delete request to have the Wazuh indexer remove all documents that match the specified conditions.
      operationId: deleteByQueryIndex
      parameters:
        - $ref: 'document_api.yml#/components/parameters/allow_no_indices'
        - $ref: 'document_api.yml#/components/parameters/analyzer'
        - $ref: 'document_api.yml#/components/parameters/analyze_wildcard'
        - $ref: 'document_api.yml#/components/parameters/conflicts'
        - $ref: 'document_api.yml#/components/parameters/default_operator'
        - $ref: 'document_api.yml#/components/parameters/df'
        - $ref: 'document_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'document_api.yml#/components/parameters/from'
        - $ref: 'document_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'document_api.yml#/components/parameters/lenient'
        - $ref: 'document_api.yml#/components/parameters/max_docs'
        - $ref: 'document_api.yml#/components/parameters/preference_delete'
        - $ref: 'document_api.yml#/components/parameters/q'
        - $ref: 'document_api.yml#/components/parameters/request_cache'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/requests_per_second'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/scroll'
        - $ref: 'document_api.yml#/components/parameters/scroll_size'
        - $ref: 'document_api.yml#/components/parameters/search_type'
        - $ref: 'document_api.yml#/components/parameters/search_timeout'
        - $ref: 'document_api.yml#/components/parameters/slices'
        - $ref: 'document_api.yml#/components/parameters/sort'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: 'document_api.yml#/components/parameters/stats'
        - $ref: 'document_api.yml#/components/parameters/terminate_after'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version_query'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/DeleteByQueryRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/DeleteByQuerySuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/ByQueryDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  # Update by query API endpoints
  /{index1},{index2}/_update_by_query:
    parameters:
      - $ref: 'document_api.yml#/components/parameters/document_index_1'
      - $ref: 'document_api.yml#/components/parameters/document_index_2'
    post:
      tags: [Document APIs]
      summary: Update by query
      description: |
        You can provide both a query and a script in your update request, allowing the Wazuh indexer  to execute the script on all documents that match the query criteria.
      operationId: updateByQueryIndex
      parameters:
        - $ref: 'document_api.yml#/components/parameters/allow_no_indices'
        - $ref: 'document_api.yml#/components/parameters/analyzer'
        - $ref: 'document_api.yml#/components/parameters/analyze_wildcard'
        - $ref: 'document_api.yml#/components/parameters/conflicts'
        - $ref: 'document_api.yml#/components/parameters/default_operator'
        - $ref: 'document_api.yml#/components/parameters/df'
        - $ref: 'document_api.yml#/components/parameters/expand_wildcards'
        - $ref: 'document_api.yml#/components/parameters/from'
        - $ref: 'document_api.yml#/components/parameters/ignore_unavailable'
        - $ref: 'document_api.yml#/components/parameters/lenient'
        - $ref: 'document_api.yml#/components/parameters/max_docs'
        - $ref: 'document_api.yml#/components/parameters/preference_update'
        - $ref: 'document_api.yml#/components/parameters/q'
        - $ref: 'document_api.yml#/components/parameters/request_cache'
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/requests_per_second'
        - $ref: 'document_api.yml#/components/parameters/routing'
        - $ref: 'document_api.yml#/components/parameters/scroll'
        - $ref: 'document_api.yml#/components/parameters/scroll_size'
        - $ref: 'document_api.yml#/components/parameters/search_type'
        - $ref: 'document_api.yml#/components/parameters/search_timeout'
        - $ref: 'document_api.yml#/components/parameters/slices'
        - $ref: 'document_api.yml#/components/parameters/sort'
        - $ref: 'document_api.yml#/components/parameters/_source'
        - $ref: 'document_api.yml#/components/parameters/_source_excludes'
        - $ref: 'document_api.yml#/components/parameters/_source_includes'
        - $ref: 'document_api.yml#/components/parameters/stats'
        - $ref: 'document_api.yml#/components/parameters/terminate_after'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/version_query'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/UpdateByQueryRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/UpdateByQuerySuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/DocumentBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/ByQueryDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_reindex:
    post:
      tags: [Document APIs]
      summary: Reindex documents
      description: |
        The Reindex API allows you to copy documents from one or more source indexes to a destination index.
      operationId: reindexDocuments
      parameters:
        - $ref: 'document_api.yml#/components/parameters/refresh'
        - $ref: 'document_api.yml#/components/parameters/timeout'
        - $ref: 'document_api.yml#/components/parameters/wait_for_active_shards'
        - $ref: 'document_api.yml#/components/parameters/wait_for_completion'
        - $ref: 'document_api.yml#/components/parameters/requests_per_second'
        - $ref: 'document_api.yml#/components/parameters/require_alias'
        - $ref: 'document_api.yml#/components/parameters/scroll'
        - $ref: 'document_api.yml#/components/parameters/slices_reindex'
        - $ref: 'document_api.yml#/components/parameters/scroll'
        - $ref: 'document_api.yml#/components/parameters/max_docs_reindex'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'document_api.yml#/components/requestBodies/ReindexRequest'
      responses:
        '200':
          $ref: 'document_api.yml#/components/responses/ReindexSuccess'
        '400':
          $ref: 'document_api.yml#/components/responses/BulkBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'document_api.yml#/components/responses/ByQueryDocumentNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{target}/_count:
    parameters:
      - $ref: 'miscellaneous_api.yml#/components/parameters/target'
    get:
      tags: [Count]
      summary: Count (GET)
      operationId: countDocuments
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_allow_no_indices'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_expand_wildcards'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_ignore_unavailable'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_min_score'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_terminate_after'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/CountRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/CountSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/CountBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/CountNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []
    post:
      tags: [Count]
      summary: Count (POST)
      operationId: countDocumentsPost
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_allow_no_indices'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_expand_wildcards'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_ignore_unavailable'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_min_score'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/count_terminate_after'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/CountRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/CountSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/CountBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/CountNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /{index}/_explain/{id}:
    parameters:
      - $ref: 'miscellaneous_api.yml#/components/parameters/index_name'
      - $ref: 'miscellaneous_api.yml#/components/parameters/document_id'
    get:
      tags: [Explain]
      summary: Explain (GET)
      operationId: explainDocument
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_q'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_stored_fields'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_excludes'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/ExplainRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []
    post:
      tags: [Explain]
      summary: Explain (POST)
      operationId: explainDocumentPost
      parameters:
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyzer'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_analyze_wildcard'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_default_operator'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_df'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_lenient'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_preference'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_q'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_stored_fields'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_routing'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_excludes'
        - $ref: 'miscellaneous_api.yml#/components/parameters/explain_source_includes'
        - $ref: '#/components/parameters/pretty'
      requestBody:
        $ref: 'miscellaneous_api.yml#/components/requestBodies/ExplainRequest'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/ExplainNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_plugins/_refresh_search_analyzers/{index_or_alias_or_wildcard}:
    parameters:
      - $ref: 'miscellaneous_api.yml#/components/parameters/index_or_alias_or_wildcard'
    post:
      tags: [Refresh search analyzer]
      summary: Refresh search analyzer
      operationId: refreshSearchAnalyzers
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/RefreshAnalyzerSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/RefreshAnalyzerBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: 'miscellaneous_api.yml#/components/responses/RefreshAnalyzerNotFound'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_remote/info:
    get:
      tags: [Remote cluster information]
      summary: Remote cluster information
      operationId: getRemoteClusterInfo
      parameters:
        - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          $ref: 'miscellaneous_api.yml#/components/responses/RemoteClusterInfoSuccess'
        '400':
          $ref: 'miscellaneous_api.yml#/components/responses/RemoteClusterBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - basicAuth: []
        - jwtAuth: []

  /_plugins/_sm/policies/{policy_name}:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_name}'
  /_plugins/_sm/policies:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies'
  /_plugins/_sm/policies/{policy_names}/_explain:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_names}~1_explain'
  /_plugins/_sm/policies/{policy_name}/_start:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_name}~1_start'
  /_plugins/_sm/policies/{policy_name}/_stop:
    $ref: 'snapshot_management_api.yml#/paths/~1_plugins~1_sm~1policies~1{policy_name}~1_stop'

components:
  parameters:
    pretty:
      name: pretty
      in: query
      description: Show results in human-readable format.
      schema:
        type: boolean
        default: false

    format:
      name: format
      in: query
      description: A short version of the `Accept` header, such as `json` or `yaml`.
      schema:
        type: string
        enum: [json, yaml]

  schemas:
    ApiInfo:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the specific Wazuh indexer node that responded to the request. In a multi-node cluster, this will be the name of the node that handled the request.
        cluster_name:
          type: string
          description: The name of the cluster which the Wazuh indexer is joined to.
        cluster_uuid:
          type: string
          description: A unique ID that identifies the Wazuh indexer node's cluster. This ID is generated when the cluster is first formed and remains constant.
        version:
          $ref: '#/components/schemas/VersionInfo'
        tagline:
          type: string
          description: Project description

    VersionInfo:
      type: object
      properties:
        number:
          type: string
          description: The version number of the Wazuh indexer node.
        build_type:
          type: string
          description: Describes how the build was packaged (e.g., `rpm`, `deb`, `tar`).
        build_hash:
          type: string
          description: A short hash of the Git commit from which this build was created. Useful for debugging and identifying the exact source code version.
        build_date:
          type: string
          format: date-time
          description: The date and time when this particular build was created.
        build_snapshot:
          type: boolean
          description: A boolean indicating if this is a snapshot build (development version) or a release build (`false` for releases).
        lucene_version:
          type: string
          description: The version of Apache Lucene, the underlying search library that Wazuh indexer uses.
        minimum_wire_compatibility_version:
          type: string
          description: The minimum version of Wazuh indexer that this node can communicate with over the network. Ensures backward compatibility.
        minimum_index_compatibility_version:
          type: string
          description: The minimum version of Wazuh indexer that this node can read indices created by. Ensures backward compatibility for stored data.

    SecurityError:
      type: object
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type: { type: string }
                  reason: { type: string }
            type: { type: string }
            reason: { type: string }
        status: { type: integer }

  responses:
    BadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  root_cause:
                    type: object
                    properties:
                      type: { type: string }
                      reason: { type: string }
              status: { type: integer }
          examples:
            missingText:
              value:
                error:
                  root_cause:
                    - type: "action_request_validation_exception"
                      reason: "Validation Failed: 1: text is missing;"
                  type: "action_request_validation_exception"
                  reason: "Validation Failed: 1: text is missing;"
                status: 400

    Unauthorized:
      description: Response to report an unauthorized request
      content:
        application/json:
          schema:
            type: string
          example: "Unauthorized"

    ForbiddenApiInfo:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "security_exception"
                  reason: "no permissions for [/] and User [name=test, backend_roles=[], requestedTenant=null]"
              type: "security_exception"
              reason: "no permissions for [/] and User [name=test, backend_roles=[], requestedTenant=null]"
            status: 403

    Forbidden:
      description: Response to report a permission denied request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "security_exception"
                  reason: "no permissions for [indices:admin/analyze] and User [name=test, backend_roles=[], requestedTenant=null]"
              type: "security_exception"
              reason: "no permissions for [indices:admin/analyze] and User [name=test, backend_roles=[], requestedTenant=null]"
            status: 403

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic HTTP authentication
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer token authentication

tags:
  - name: Get API info
    description: Wazuh indexer API information
  - name: Analyze API
  - name: Cluster API
    description: The cluster APIs allow you to manage your cluster. You can use them to check cluster health, modify settings, retrieve statistics, and more.
  - name: Count
    description: The Count API provides quick access to retrieve the number of documents matching a query. It can also be used to determine the document count for an index, data stream, or cluster.
  - name: Document APIs
    description: |
      Document APIs enable you to manage documents within your index, including adding, updating, and deleting records.

      These APIs are categorized into single-document operations and multi-document operations. Multi-document operations are more efficient than processing multiple individual requests separately, so it is recommended to use them whenever possible for better performance.
  - name: Explain
    description: The Explain API in Wazuh indexer  provides a detailed breakdown of how a document matches a given query and how its relevance score (`_score`) is calculated. It helps in understanding why certain documents rank higher or lower in search results.
  - name: Index state management API
    description: The Index State Management (ISM) API operations allow you to programmatically manage index policies and the lifecycle of indexes in the Wazuh indexer.
  - name: ISM error prevention API
    description: Index State Management (ISM) supports the automatic execution of actions. However, these actions may encounter failures due to various reasons. To help prevent such issues, you can perform error prevention validation to test an action and identify potential failures beforehand.
  - name: Ingest APIs
    description: |
      The Wazuh indexer Ingest APIs facilitate the transformation and enrichment of data as it is ingested into the system. These APIs allow for the creation and management of ingest pipelines, which consist of a series of processors that execute sequentially to process incoming documents.

      **Ingest pipeline APIs**
      1. **Create or Update Pipeline**: Define a new pipeline or modify an existing one by specifying a sequence of processors.
      2. **Get Pipeline**: Retrieve the configuration details of a specific pipeline.
      3. **Simulate Pipeline**: Test a pipeline configuration by simulating the processing of sample documents, aiding in validation before deployment.
      4. **Delete Pipeline**: Remove an existing pipeline from the system.
      5. **Access Data in a Pipeline**: Interact with data as it flows through a pipeline, enabling monitoring and debugging of the ingestion process.
  - name: Refresh search analyzer
    description: |
      The Refresh Search Analyzer is an API operation that reloads search-time analyzers in real time, specifically those with updateable components. The ability to refresh search analyzers using this endpoint requires the ISM plugin to be installed in your Wazuh indexer cluster.

      For the refresh to work, the token filter within your analyzer must have the `updateable` flag set to `true` without needing to close or recreate the index. For example:

      ```
      {
        "analyzer": {
          "my_synonyms": {
            "tokenizer": "whitespace",
            "filter": [
              "synonym"
            ]
          }
        },
        "filter": {
          "synonym": {
            "type": "synonym_graph",
            "synonyms_path": "synonyms.txt",
            "updateable": true
          }
        }
      }
      ```

      This configuration ensures that changes to the `synonyms.txt` file are picked up when the analyzer is refreshed. Ensure that the updated resources (e.g., `synonyms.txt`) are accessible to all nodes in the cluster, as the refresh operation will reload these resources across the nodes.
  - name: Remote cluster information
    description: |
      This operation returns detailed connection information for remote Wazuh indexer clusters configured with the local cluster. It includes data such as the remote cluster alias, connection mode (`sniff` or `proxy`), seed node IP addresses, and timeout configurations.

      The response is more comprehensive and useful than a call to `_cluster/settings`, which only includes the cluster alias and seed nodes.
  - name: Snapshot management API
    description: |
      The snapshot management (SM) API enables automated snapshot creation in the Wazuh indexer. This API helps streamline the process of backing up index data by allowing you to configure, schedule, and manage snapshots programmatically.
  - name: Scroll
    description: |
      You can utilize the scroll operation to obtain a substantial number of results. For instance, when looking for machine learning jobs, you can request an unlimited number of results in separate batches.

      To implement the scroll operation, include a scroll parameter in the request header along with a search context that indicates to the indexer how long you wish to continue scrolling. This search context should be sufficiently lengthy to allow for processing a single batch of results.

      Since search contexts can be memory-intensive, it's advisable to avoid using the scroll operation for frequent user queries. Instead, consider utilizing the sort parameter in conjunction with the search_after parameter to paginate through results for user queries.
  - name: Search
    description: The Search API operation allows you to perform a search request to find data within your cluster.