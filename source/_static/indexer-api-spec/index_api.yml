paths:
  /_aliases:
    post:
      tags: [Index APIs]
      summary: Alias
      description: |
        An alias in Wazuh indexer serves as a virtual reference to one or more indexes, enabling seamless reindexing and data management without downtime.
      operationId: postAliases
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/AliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/AliasSuccess'
        '400':
          $ref: '#/components/responses/AliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_alias/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/target'
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (Target POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postTargetAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_alias/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (Alias POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Alias PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_aliases/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/target'
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Aliases POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postTargetAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Aliases PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_aliases/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_alias:
    parameters:
      - $ref: '#/components/parameters/target'
    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Alias PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAlias
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_aliases:
    parameters:
      - $ref: '#/components/parameters/target'
    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Aliases PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAliases
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_alias:
    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Alias PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putAlias
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_block/{block}:
    parameters:
      - $ref: '#/components/parameters/index_only'
      - $ref: '#/components/parameters/block'
    put:
      tags: [Index APIs]
      summary: Blocks (Index PUT)
      description: |
        The Blocks API allows you to restrict specific operations on a given index. You can apply different types of blocks to prevent write, read, or metadata actions. For instance, applying a write block ensures that all shards of the index acknowledge the restriction before confirming success. Any ongoing write operations must finish before the block is enforced.
      operationId: putIndexBlockBlock
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/BlocksSuccess'
        '400':
          $ref: '#/components/responses/BlocksBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_block/{block}:
    parameters:
      - $ref: '#/components/parameters/block'
    put:
      tags: [Index APIs]
      summary: Blocks (Global PUT)
      description: |
        The Blocks API allows you to restrict specific operations on a given index. You can apply different types of blocks to prevent write, read, or metadata actions. For instance, applying a write block ensures that all shards of the index acknowledge the restriction before confirming success. Any ongoing write operations must finish before the block is enforced.
      operationId: putBlockBlock
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/BlocksSuccess'
        '400':
          $ref: '#/components/responses/BlocksBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_cache/clear:
    parameters:
      - $ref: '#/components/parameters/target'
    post:
      tags: [Index APIs]
      summary: Clear cache
      description: |
        The Clear Cache API removes cached data from one or more indexes. If used on a data stream, it clears the caches of all associated backing indexes.
      operationId: postTargetCacheClear
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/fielddata'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/request'
      responses:
        '200':
          $ref: '#/components/responses/ClearCacheSuccess'
        '400':
          $ref: '#/components/responses/ClearCacheBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{source_index}/_clone/{target_index}:
    parameters:
      - $ref: '#/components/parameters/source_index'
      - $ref: '#/components/parameters/target_index'
    post:
      tags: [Index APIs]
      summary: Clone index (POST)
      description: |
        The Clone Index API copies all data from an existing read-only index into a new index. The destination index must not already exist.
      operationId: postSourceIndexCloneTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/CloneIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneIndexSuccess'
        '400':
          $ref: '#/components/responses/CloneIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Clone index (PUT)
      description: |
        The Clone Index API copies all data from an existing read-only index into a new index. The destination index must not already exist.
      operationId: putSourceIndexCloneTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/CloneIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneIndexSuccess'
        '400':
          $ref: '#/components/responses/CloneIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_close:
    parameters:
      - $ref: '#/components/parameters/index_only'
    post:
      tags: [Index APIs]
      summary: Close index
      description: |
        The Close Index API is used to close an index, making it inaccessible for writing or searching. Once closed, the index cannot be updated or queried until it is reopened.
      operationId: postIndexClose
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/CloseIndexSuccess'
        '400':
          $ref: '#/components/responses/CloseIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}:
    put:
      tags: [Index APIs]
      summary: Create index
      description: |
        The Create Index API allows you to create an index from scratch without adding a document, allowing you to set it up for future use. During index creation, you can define its mappings, settings, and any associated aliases.

        **Index naming restrictions**

        The Wazuh indexer indexes have the following naming restrictions:

        - All letters must be lowercase.
        - Index names can't begin with underscores (_) or hyphens (-).
        - Index names can't contain spaces, commas, or the following characters:

          :, ", *, +, /, \\, |, ?, #, >, or <
      operationId: putIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/single-index'
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateIndexSuccess'
        '400':
          $ref: '#/components/responses/CreateIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    get:
      tags: [Index APIs]
      summary: Get index
      description: |
        The Get Index API allows you to retrieve detailed information about a specific index.
      operationId: getIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flat_settings'
        - $ref: '#/components/parameters/include_defaults'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: '#/components/responses/GetIndexSuccess'
        '400':
          $ref: '#/components/responses/GetIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index_name}:
    parameters:
      - $ref: '#/components/parameters/index_name'
    delete:
      tags: [Index APIs]
      summary: Delete index
      description: |
        If an index is no longer needed, you can delete it using the Delete Index API.
      operationId: deleteIndexName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/DeleteIndexSuccess'
        '400':
          $ref: '#/components/responses/DeleteIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_index_template/{template_name}:
    parameters:
      - $ref: '#/components/parameters/template_name'
    put:
      tags: [Index APIs]
      summary: Create or update index template (PUT)
      description: |
        The Create or Update Index Template API allows you to define index templates with preset mappings and settings, or modify existing templates.
      operationId: putIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      requestBody:
        $ref: '#/components/requestBodies/IndexTemplateRequest'
      responses:
        '200':
          $ref: '#/components/responses/IndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/IndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    post:
      tags: [Index APIs]
      summary: Create or update index template (POST)
      description: |
        The Create or Update Index Template API allows you to define index templates with preset mappings and settings, or modify existing templates.
      operationId: postIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      requestBody:
        $ref: '#/components/requestBodies/IndexTemplateRequest'
      responses:
        '200':
          $ref: '#/components/responses/IndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/IndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    get:
      tags: [Index APIs]
      summary: Get index template
      description: |
        The Get Index Template API returns information about one or more index templates.
      operationId: getIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/flat_settings'
      responses:
        '200':
          $ref: '#/components/responses/GetIndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/GetIndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GetIndexTemplateNotFound'

components:
  parameters:
    target:
      name: target
      in: path
      required: false
      description: |
        A comma-separated list of index names. Supports wildcard expressions (`*`). To apply the operation to all indexes in the cluster, use `_all` or `*`.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.15"

    alias_name:
      name: alias-name
      in: path
      required: false
      description: |
        The name of the alias to create or update.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.15-alias"

    index:
      name: index
      in: path
      required: true
      description: |
        A comma-separated list of indexes, data streams, or index aliases that the operation is applied. Wildcard expressions  such as (`*`) are supported. Use `_all` or `*` to apply the operation to all indexes and data streams in the cluster.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    index_only:
      name: index
      in: path
      required: true
      description: |
        Specifies the index or list of indexes to operate on. You can provide a single index name, a comma-separated list of multiple indexes, or use `_all` or `*` to operate on all indexes in the cluster.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    single-index:
      name: index
      in: path
      required: true
      description: |
        The name of the index to be created. It must follow the index naming rules.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.5"

    block:
      name: block
      in: path
      required: true
      description: |
        Defines the type of block to set on the specified index. Valid options include:
        - `metadata`: Disables all metadata changes, such as closing the index.
        - `read`: Disables any read operations.
        - `read_only`: Disables any write operations and metadata changes.
        - `write`: Disables write operations, but still allows metadata updates.
      schema:
        type: string
        enum: [metadata, read, read_only, write]
      example: "write"

    cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      required: false
      description: |
        Time to wait for a response from the cluster manager node.
      schema:
        type: string
        format: duration
        default: '30s'

    timeout:
      name: timeout
      in: query
      required: false
      description: |
        Time to wait for a response from the cluster.
      schema:
        type: string
        format: duration
        default: '30s'

    ignore_unavailable:
      name: ignore_unavailable
      in: query
      required: false
      description: |
        If set to `false`, the request will return an error when it targets an index that is either missing or closed.
      schema:
        type: boolean
        default: false

    allow_no_indices:
      name: allow_no_indices
      in: query
      required: false
      description: |
        If `false`, the API will return an error when a wildcard pattern, alias, or `_all` only matches closed or nonexistent indexes, even if open indexes are specified.
      schema:
        type: boolean
        default: true

    expand_wildcards:
      name: expand_wildcards
      in: query
      required: false
      description: |
        Specifies the types of indexes that wildcard expressions should match. If data streams are included in the request, this also determines whether hidden streams are matched. Accepts comma-separated values like `open,hidden`.
      schema:
        type: string
        enum: [all, open, closed, hidden, none]
        default: open

    source_index:
      name: source_index
      in: path
      required: true
      description: |
        The source index to clone.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    target_index:
      name: target_index
      in: path
      required: true
      description: |
        The index to create and add cloned data to.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12-cloned"

    fielddata:
      name: fielddata
      in: query
      required: false
      description: |
        When `true`, clears the field data cache. You can use the `fields` parameter to target specific fields.
      schema:
        type: boolean
        default: true

    fields:
      name: fields
      in: query
      required: false
      description: |
        A comma-separated list of field names whose field data caches should be cleared. This applies only when fielddata is enabled. Field aliases and objects are not supported. It defaults to all fields.
      schema:
        type: string

    query:
      name: query
      in: query
      required: false
      description: |
        Clears the query cache when set to `true`.
      schema:
        type: boolean
        default: true

    request:
      name: request
      in: query
      required: false
      description: |
        Clears the request cache when set to `true`.
      schema:
        type: boolean
        default: true

    wait_for_active_shards:
      name: wait_for_active_shards
      in: query
      required: false
      description: |
        Specifies the number of active shards required before proceeding with the operation. The default is `1`, meaning only the primary shard is needed. You can set it to `all` or a specific positive integer. If greater than `1`, the index must have the corresponding number of replicas available across different nodes.
      schema:
        type: string
        default: '1'

    wait_for_completion:
      name: wait_for_completion
      in: query
      required: false
      description: |
        If false, the API responds immediately without waiting for the operation to finish. Use the Tasks API along with the returned task ID to track progress.
      schema:
        type: boolean
        default: true

    task_execution_timeout:
      name: task_execution_timeout
      in: query
      required: false
      description: |
        Sets a specific time limit for how long the task can run. Only applies when `wait_for_completion` is `false`.
      schema:
        type: string
        format: duration
        default: '1h'

    index_name:
      name: index_name
      in: path
      required: true
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.04"

    flat_settings:
      name: flat_settings
      in: query
      required: false
      description: |
        Returns index settings in a simplified flat key-value format if set to `true`. This improves readability, especially for deeply nested configurations. For example, `"index": { "creation_date": "123456789" }` becomes `"index.creation_date": "123456789"`.
      schema:
        type: boolean

    include_defaults:
      name: include_defaults
      in: query
      required: false
      description: |
        Specifies whether the response should include default index settings. This is helpful for identifying setting names and values that can be customized.
      schema:
        type: boolean

    local:
      name: local
      in: query
      required: false
      description: |
        If set to `true`, returns index information only from the local node rather than querying the cluster manager node.
      schema:
        type: boolean
        default: false

    template_name:
      name: template_name
      in: path
      required: true
      description: |
        The name of the index template.
      schema:
        type: string
      example: "alias-template"

    create:
      name: create
      in: query
      required: false
      description: |
        If set to `true`, the API will not overwrite or modify any existing index templates.
      schema:
        type: boolean
        default: false

  requestBodies:
    AliasRequest:
      description: |
        Request body for alias operations
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              actions:
                type: array
                description: |
                  List of actions to perform on the index. Valid options includes add, remove, and remove_index. You must have at least one action in the array.
                items:
                  type: object
                  properties:
                    add:
                      type: object
                      description: |
                        Adds an alias to the specified index.
                      properties:
                        index:
                          type: string
                          description: |
                            Name of the index to associate with the alias. Supports wildcard expressions.
                        indices:
                          type: array
                          items:
                            type: string
                          description: |
                            List of index names to associate with the alias.
                        alias:
                          type: string
                          description: |
                            The name of the alias.
                        aliases:
                          type: array
                          items:
                            type: string
                          description: |
                            List of alias names.
                        filter:
                          type: object
                          description: |
                            A filter to apply to the alias, allowing it to point to a subset of the index.
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates if the alias should be hidden from results that include wildcard expressions.
                        must_exist:
                          type: boolean
                          description: |
                            Specifies whether the alias to remove must exist.
                        is_write_index:
                          type: boolean
                          description: |
                            Designates the index as a write index. An alias can have only one write index at a time.
                        routing:
                          type: string
                          description: |
                            Custom value to assign to a shard for specific operations.
                        index_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for index operations.
                        search_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for search operations.
                    remove:
                      type: object
                      description: |
                        Removes an alias from the specified index.
                      properties:
                        index:
                          type: string
                          description: |
                            Name of the index to associate with the alias. Supports wildcard expressions.
                        indices:
                          type: array
                          items:
                            type: string
                          description: |
                            List of index names to associate with the alias.
                        alias:
                          type: string
                          description: |
                            The name of the alias.
                        aliases:
                          type: array
                          items:
                            type: string
                          description: |
                            List of alias names.
                        filter:
                          type: object
                          description: |
                            A filter to apply to the alias, allowing it to point to a subset of the index.
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates if the alias should be hidden from results that include wildcard expressions.
                        must_exist:
                          type: boolean
                          description: |
                            Specifies whether the alias to remove must exist.
                        is_write_index:
                          type: boolean
                          description: |
                            Designates the index as a write index. An alias can have only one write index at a time.
                        routing:
                          type: string
                          description: |
                            Custom value to assign to a shard for specific operations.
                        index_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for index operations.
                        search_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for search operations.
                    remove_index:
                      type: object
                      description: |
                        Deletes an index.
                      properties:
                        index:
                          type: string
                          description: |
                            Name of the index to associate with the alias. Supports wildcard expressions.
                        indices:
                          type: array
                          items:
                            type: string
                          description: |
                            List of index names to associate with the alias.
                        alias:
                          type: string
                          description: |
                            The name of the alias.
                        aliases:
                          type: array
                          items:
                            type: string
                          description: |
                            List of alias names.
                        filter:
                          type: object
                          description: |
                            A filter to apply to the alias, allowing it to point to a subset of the index.
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates if the alias should be hidden from results that include wildcard expressions.
                        must_exist:
                          type: boolean
                          description: |
                            Specifies whether the alias to remove must exist.
                        is_write_index:
                          type: boolean
                          description: |
                            Designates the index as a write index. An alias can have only one write index at a time.
                        routing:
                          type: string
                          description: |
                            Custom value to assign to a shard for specific operations.
                        index_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for index operations.
                        search_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for search operations.
          example:
            actions:
              - add:
                  index: "wazuh-alerts-4.x-2025.03.12"
                  alias: "wazuh-alerts-4.x-2025.03.12-alias1"

    CreateUpdateAliasRequest:
      description: |
        Request body for creating or updating aliases
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              index:
                type: string
                description: |
                  A comma-separated list of indexes to associate with the alias. If specified, this value overrides the index name in the URL path.
              alias:
                type: string
                description: |
                  The name of the alias. If provided, it overrides the alias name in the URL path.
              is_write_index:
                type: boolean
                description: |
                  Indicates whether the associated index should act as the write index. Only one write index is allowed per alias. If an alias points to multiple indexes, write requests are directed only to the designated write index.
              routing:
                type: string
                description: |
                  Custom value to assign to a shard for specific operations.
              index_routing:
                type: string
                description: |
                  Custom value to assign to a shard specifically for index operations.
              search_routing:
                type: string
                description: |
                  Custom value to assign to a shard specifically for search operations.
              filter:
                type: object
                description: |
                  A query filter that limits the alias to a subset of the index data.
          example:
            routing: "test"

    CloneIndexRequest:
      description: |
        Request body for clone index operations
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: |
                  A set of index settings to apply to the cloned index. Common use cases include removing or updating settings that cannot be carried over.
              aliases:
                type: object
                description: |
                  Defines one or more aliases to be associated with the newly created target index. You can specify alias names and their configuration (e.g., filters, routing).
          example:
            settings:
              index:
                number_of_shards: 3
                number_of_replicas: 1
            aliases:
              "wazuh-alerts-4.x-2025.03.12-alias": {}

    CreateIndexRequest:
      description: |
        Request body for creating indexes
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: |
                  Defines configuration settings for the index such as the number of shards, replicas, and custom analyzers.
              mappings:
                type: object
                description: |
                  Specifies the structure of documents in the index, including field types and data formats.
              aliases:
                type: object
                description: |
                  One or more aliases to associate with the index. You can include alias-specific settings like filters, routing, and write index designation.
          example:
            settings:
              index:
                number_of_shards: 2
                number_of_replicas: 1
            mappings:
              properties:
                age:
                  type: "integer"
            aliases:
              "sample-alias1": {}

    IndexTemplateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              index_patterns:
                type: array
                items:
                  type: string
                description: |
                  Array of wildcard patterns used to match the names of data streams and indexes created when the template is applied. This field is required.
              composed_of:
                type: array
                items:
                  type: string
                description: |
                  An ordered list of component template names. These templates are combined in the specified sequence. This field is optional.
              data_stream:
                type: object
                description: |
                  If included, the request sets up data streams and their backing indexes according to the template. This requires a matching index template. It can also be combined with the hidden setting to make backing indexes hidden when set to `true`. This field is optional.
              _meta:
                type: object
                description: |
                  A metadata used to describe or add details about the index template. This field is optional.
              priority:
                type: integer
                description: |
                  A numeric value that determines the priority of index templates when multiple templates match. The one with the highest priority is applied. If not specified, the default is `0`, which is the lowest priority. Optional field.
              template:
                type: object
                description: |
                  Contains the actual template definition, including aliases, mappings, and settings. Optional field.
                properties:
                  aliases:
                    type: object
                    description: |
                      Specify aliases to be linked with the template. This is required when the template field is included in the request body and supports defining multiple aliases.
                    additionalProperties:
                      type: object
                      description: |
                        The alias object can include the following optional parameters.
                      properties:
                        filter:
                          type: object
                          description: |
                            A DSL query that restricts which documents are accessible through the alias.
                        index_routing:
                          type: string
                          description: |
                            Defines the routing value specifically for indexing operations. If provided, it overrides any general routing value for indexing.
                        is_hidden:
                          type: boolean
                          description: |
                            If set to `true`, the alias is hidden. All indexes associated with the alias must have the same setting for this parameter.
                          default: false
                        is_write_index:
                          type: boolean
                          description: |
                            Specifies whether the index is the write index for the alias.
                          default: false
                        routing:
                          type: string
                          description: |
                            Sets a custom routing value used for both indexing and searching operations.
                        search_routing:
                          type: string
                          description: |
                            A value that routes search operations to a specific shard. If specified, it overrides the general routing setting for searches.
                  settings:
                    type: object
                  mappings:
                    type: object
              version:
                type: integer
                description: |
                  This is used to track or manage versions of index templates. Optional field.
              context:
                type: object
                description: |
                  This parameter defines use-case-specific, predefined templates that can be applied to an index. Among all defined template configurations, those provided via context take precedence. Optional field.
          example:
            index_patterns: ["wazuh-alerts-4.x-*"]
            template:
              settings:
                number_of_shards: 1
              aliases:
                alias1: {}
                alias2:
                  filter:
                    term:
                      "user.id": "wazuh"
                  routing: "shard-1"
                "{index}-alias": {}

  responses:
    AliasSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    CreateUpdateAliasSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    BlocksSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  indices:
                    type: object
                    properties:
                      name:
                        type: string
                        description: |
                          The name of the index where the block was applied.
                      blocked:
                        type: boolean
                        description: |
                          Indicates whether the block was successfully set (true) or not (false) for the specified index.
          example:
            acknowledged: true
            shards_acknowledged: true
            indices:
              "wazuh-alerts-4.x-2025.03.12":
                blocked: true

    ClearCacheSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShardsResponse'
          example:
            _shards:
              total: 3
              successful: 3
              failed: 0

    CloneIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  index:
                    type: string
                    description: |
                      The name of the newly created cloned index.
          example:
            acknowledged: true
            shards_acknowledged: true
            index: "wazuh-alerts-4.x-2025.03.12-cloned"

    CloseIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  indices:
                    type: object
                    description: |
                      Contains the results of the close operation for each index included in the request. The index name is used as the key.
          example:
            acknowledged: true
            shards_acknowledged: true
            indices:
              "wazuh-alerts-4.x-2025.03.11":
                closed: true

    CreateIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  index:
                    type: string
                    description: |
                      This indicates the name of the newly created index.
          example:
            acknowledged: true
            shards_acknowledged: true
            index: "wazuh-alerts-4.x-2025.03.5"

    DeleteIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    GetIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              aliases:
                type: object
                description: |
                  A list of any aliases assigned to the index.
              mappings:
                type: object
                description: |
                  The mapping definitions applied to the index.
              settings:
                type: object
                description: |
                  Configuration settings specific to the index.
              creation_date:
                type: string
                description: |
                  The timestamp, in Unix epoch format, representing when the index was created.
              number_of_shards:
                type: string
                description: |
                  The number of primary shards allocated to the index.
              number_of_replicas:
                type: string
                description: |
                  The number of replica shards configured for the index.
              uuid:
                type: string
                description: |
                  The unique identifier (UUID) assigned to the index.
              created:
                type: string
                description: |
                  The version of Wazuh indexer used to create the index.
              provided_name:
                type: string
                description: |
                  The original name given to the index.
          example:
            "sample_target":
              aliases: {}
              mappings:
                _meta:
                  schema_version: 1
                dynamic_templates:
                  - strings:
                      match_mapping_type: "string"
                      mapping:
                        type: "keyword"
                properties:
                  day:
                    type: "date"
                  quantity:
                    type: "float"
                  transform:
                    properties:
                      _doc_count:
                        type: "long"
                      _id:
                        type: "keyword"
                  version:
                    type: "keyword"
              settings:
                index:
                  replication:
                    type: "DOCUMENT"
                  number_of_shards: "1"
                  provided_name: "sample_target"
                  creation_date: "1739872000922"
                  number_of_replicas: "1"
                  uuid: "Erdstb-2SBaFhH3l3br38A"
                  version:
                    created: "136377827"

    AliasBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "No action specified"
              type: "illegal_argument_exception"
              reason: "No action specified"
            status: 400

    CreateUpdateAliasBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.15"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.15"
              index_uuid: "_na_"
            status: 400

    BlocksBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.22], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.22"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.22], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.22"
              index_uuid: "_na_"
            status: 400

    CloseIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.11], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.11"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.11], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.11"
              index_uuid: "_na_"
            status: 400

    CreateIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "resource_already_exists_exception"
                  reason: "index [wazuh-alerts-4.x-2025.03.5/iru5_ZTuQp-vK1Q-TNC6Uw] already exists"
                  index: "wazuh-alerts-4.x-2025.03.5"
                  index_uuid: "iru5_ZTuQp-vK1Q-TNC6Uw"
              type: "resource_already_exists_exception"
              reason: "index [wazuh-alerts-4.x-2025.03.5/iru5_ZTuQp-vK1Q-TNC6Uw] already exists"
              index: "wazuh-alerts-4.x-2025.03.5"
              index_uuid: "iru5_ZTuQp-vK1Q-TNC6Uw"
            status: 400

    ClearCacheBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.12], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.12"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.12], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.12"
              index_uuid: "_na_"
            status: 400

    CloneIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "the number of target shards (2) must be the same as the number of source shards (3)"
              type: "illegal_argument_exception"
              reason: "the number of target shards (2) must be the same as the number of source shards (3)"
            status: 400

    GetIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.15"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.15"
              index_uuid: "_na_"
            status: 400

    DeleteIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    NotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  root_cause:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                        reason:
                          type: string
                        index:
                          type: string
                        resource.id:
                          type: integer
                        resource.type:
                          type: string
                        index_uuid:
                          type: string
                  type:
                    type: string
                  reason:
                    type: string
                  index:
                    type: string
                  resource.id:
                    type: integer
                  resource.type:
                    type: string
                  index_uuid:
                    type: string
              status:
                type: integer
          example:
            error:
              root_cause:
                - type: "index_not_found_exception"
                  reason: "no such index [wazuh-alerts-4.x-2025.03.12]"
                  index: "wazuh-alerts-4.x-2025.03.12"
                  resource.id: "wazuh-alerts-4.x-2025.03.12"
                  resource.type: "index_or_alias"
                  index_uuid: "_na_"
              type: "index_not_found_exception"
              reason: "no such index [wazuh-alerts-4.x-2025.03.12]"
              index: "wazuh-alerts-4.x-2025.03.12"
              resource.id: "wazuh-alerts-4.x-2025.03.12"
              resource.type: "index_or_alias"
              index_uuid: "_na_"
            status: 404

    IndexTemplateSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    IndexTemplateBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "parse_exception"
                  reason: "request body is required"
              type: "parse_exception"
              reason: "request body is required"
            status: 400

    GetIndexTemplateSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              index_templates:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: |
                        The name assigned to the index template.
                    index_template:
                      type: object
                      properties:
                        index_patterns:
                          type: array
                          items:
                            type: string
                          description: |
                            A list of patterns used to match index names. When a new index is created that matches the pattern, this template is automatically applied.
                        template:
                          type: object
                          description: |
                            Defines the index-level settings, mappings, and aliases that should be applied when an index matches the pattern.
                        composed_of:
                          type: array
                          items:
                            type: string
                          description: |
                            A list of component templates that are combined to form this index template.
          example:
            index_templates:
              - name: "alias-template"
                index_template:
                  index_patterns:
                    - "wazuh-alerts-4.x*"
                  template:
                    settings:
                      index:
                        number_of_shards: "1"
                    aliases:
                      alias1: {}
                      "{index}-alias": {}
                      alias2:
                        filter:
                          term:
                            "user.id": "wazuh"
                        index_routing: "shard-1"
                        search_routing: "shard-1"
                  composed_of: []

    GetIndexTemplateBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "request [/_index_template/alias-template] contains unrecognized parameter: [create]"
              type: "illegal_argument_exception"
              reason: "request [/_index_template/alias-template] contains unrecognized parameter: [create]"
            status: 400

    GetIndexTemplateNotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "resource_not_found_exception"
                  reason: "index template matching [alias-templat] not found"
              type: "resource_not_found_exception"
              reason: "index template matching [alias-templat] not found"
            status: 404

  schemas:
    # Common error response structure
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  reason:
                    type: string
            type:
              type: string
            reason:
              type: string
        status:
          type: integer

    # Error response with index and index_uuid fields
    IndexErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            error:
              type: object
              properties:
                root_cause:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      reason:
                        type: string
                      index:
                        type: string
                      index_uuid:
                        type: string
                index:
                  type: string
                index_uuid:
                  type: string

    # Common success response structure
    AcknowledgedResponse:
      type: object
      properties:
        acknowledged:
          type: boolean
          description: |
            Indicates whether the request was successfully received and processed by the cluster.

    # Success response with shards_acknowledged
    ShardsAcknowledgedResponse:
      allOf:
        - $ref: '#/components/schemas/AcknowledgedResponse'
        - type: object
          properties:
            shards_acknowledged:
              type: boolean
              description: |
                Confirms that all primary and replica shards acknowledged the operation.

    # Common shards response structure
    ShardsResponse:
      type: object
      properties:
        _shards:
          type: object
          properties:
            total:
              type: integer
              description: |
                The total number of shards involved in the request.
            successful:
              type: integer
              description: |
                The number of shards where the operation was completed successfully.
            failed:
              type: integer
              description: |
                The number of shards where the operation failed.