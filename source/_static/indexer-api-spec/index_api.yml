paths:
  /_aliases:
    post:
      tags: [Index APIs]
      summary: Alias
      description: |
        An alias in Wazuh indexer serves as a virtual reference to one or more indexes, enabling seamless reindexing and data management without downtime.
      operationId: postAliases
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/AliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/AliasSuccess'
        '400':
          $ref: '#/components/responses/AliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_alias/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/target'
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (Target POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postTargetAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_alias/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (Alias POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Alias PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putAliasAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_aliases/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/target'
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Aliases POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postTargetAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Aliases PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_aliases/{alias_name}:
    parameters:
      - $ref: '#/components/parameters/alias_name'
    post:
      tags: [Index APIs]
      summary: Create or Update Alias (POST)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: postAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Create or Update Alias (PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putAliasesAliasName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_alias:
    parameters:
      - $ref: '#/components/parameters/target'
    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Alias PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAlias
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_aliases:
    parameters:
      - $ref: '#/components/parameters/target'
    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Target Aliases PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putTargetAliases
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_alias:
    put:
      tags: [Index APIs]
      summary: Create or Update Alias (Alias PUT)
      description: |
        The Create or Update Alias API allows you to associate one or more indexes with an alias or update the settings of an existing alias.
      operationId: putAlias
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateAliasRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateUpdateAliasSuccess'
        '400':
          $ref: '#/components/responses/CreateUpdateAliasBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_block/{block}:
    parameters:
      - $ref: '#/components/parameters/index_only'
      - $ref: '#/components/parameters/block'
    put:
      tags: [Index APIs]
      summary: Blocks (Index PUT)
      description: |
        The Blocks API allows you to restrict specific operations on a given index. You can apply different types of blocks to prevent write, read, or metadata actions. For instance, applying a write block ensures that all shards of the index acknowledge the restriction before confirming success. Any ongoing write operations must finish before the block is enforced.
      operationId: putIndexBlockBlock
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/BlocksSuccess'
        '400':
          $ref: '#/components/responses/BlocksBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_block/{block}:
    parameters:
      - $ref: '#/components/parameters/block'
    put:
      tags: [Index APIs]
      summary: Blocks (Global PUT)
      description: |
        The Blocks API allows you to restrict specific operations on a given index. You can apply different types of blocks to prevent write, read, or metadata actions. For instance, applying a write block ensures that all shards of the index acknowledge the restriction before confirming success. Any ongoing write operations must finish before the block is enforced.
      operationId: putBlockBlock
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/BlocksSuccess'
        '400':
          $ref: '#/components/responses/BlocksBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{target}/_cache/clear:
    parameters:
      - $ref: '#/components/parameters/target'
    post:
      tags: [Index APIs]
      summary: Clear cache
      description: |
        The Clear Cache API removes cached data from one or more indexes. If used on a data stream, it clears the caches of all associated backing indexes.
      operationId: postTargetCacheClear
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/fielddata'
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/request'
      responses:
        '200':
          $ref: '#/components/responses/ClearCacheSuccess'
        '400':
          $ref: '#/components/responses/ClearCacheBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{source_index}/_clone/{target_index}:
    parameters:
      - $ref: '#/components/parameters/source_index'
      - $ref: '#/components/parameters/target_index'
    post:
      tags: [Index APIs]
      summary: Clone index (POST)
      description: |
        The Clone Index API copies all data from an existing read-only index into a new index. The destination index must not already exist.
      operationId: postSourceIndexCloneTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/CloneIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneIndexSuccess'
        '400':
          $ref: '#/components/responses/CloneIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Clone index (PUT)
      description: |
        The Clone Index API copies all data from an existing read-only index into a new index. The destination index must not already exist.
      operationId: putSourceIndexCloneTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/CloneIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloneIndexSuccess'
        '400':
          $ref: '#/components/responses/CloneIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_close:
    parameters:
      - $ref: '#/components/parameters/index_only'
    post:
      tags: [Index APIs]
      summary: Close index
      description: |
        The Close Index API is used to close an index, making it inaccessible for writing or searching. Once closed, the index cannot be updated or queried until it is reopened.
      operationId: postIndexClose
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/CloseIndexSuccess'
        '400':
          $ref: '#/components/responses/CloseIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}:
    put:
      tags: [Index APIs]
      summary: Create index
      description: |
        The Create Index API allows you to create an index from scratch without adding a document, allowing you to set it up for future use. During index creation, you can define its mappings, settings, and any associated aliases.

        **Index naming restrictions**

        The Wazuh indexer indexes have the following naming restrictions:

        - All letters must be lowercase.
        - Index names can't begin with underscores (_) or hyphens (-).
        - Index names can't contain spaces, commas, or the following characters:

          :, ", *, +, /, \\, |, ?, #, >, or <
      operationId: putIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/single-index'
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/CreateIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/CreateIndexSuccess'
        '400':
          $ref: '#/components/responses/CreateIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    get:
      tags: [Index APIs]
      summary: Get index
      description: |
        The Get Index API allows you to retrieve detailed information about a specific index.
      operationId: getIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flat_settings'
        - $ref: '#/components/parameters/include_defaults'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: '#/components/responses/GetIndexSuccess'
        '400':
          $ref: '#/components/responses/GetIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index_name}:
    parameters:
      - $ref: '#/components/parameters/index_name'
    delete:
      tags: [Index APIs]
      summary: Delete index
      description: |
        If an index is no longer needed, you can delete it using the Delete Index API.
      operationId: deleteIndexName
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/DeleteIndexSuccess'
        '400':
          $ref: '#/components/responses/DeleteIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    head:
      tags: [Index APIs]
      summary: Index exists
      description: |
        The Index exists API determines if a specified index is present in the cluster, returning a response that indicates whether the index currently exists.
      operationId: headIndexExists
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flat_settings'
        - $ref: '#/components/parameters/include_defaults'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: '#/components/responses/IndexExistsSuccess'
        '404':
          $ref: '#/components/responses/IndexExistsNotFound'

  /{target_index}/_mapping:
    parameters:
      - $ref: '#/components/parameters/target_index_mapping'
    put:
      tags: [Index APIs]
      summary: Create or update mappings
      description: |
        To create or add mappings and fields to an index, you can use the PUT mapping API. If the mapping already exists, this operation will update it.

        However, this operation cannot be used to modify mappings that are already applied to existing data in the index. To update those mappings, you must first create a new index with the desired mappings and then use the [Reindex API](https://documentation.wazuh.com/indexer-api/user-manual/indexer-api/reference.html#operation/reindexDocuments) to transfer the documents from the old index to the new one.
      operationId: putTargetIndexMapping
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/write_index_only'
      requestBody:
        $ref: '#/components/requestBodies/MappingRequest'
      responses:
        '200':
          $ref: '#/components/responses/MappingSuccess'
        '400':
          $ref: '#/components/responses/MappingBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_index_template/{template_name}:
    parameters:
      - $ref: '#/components/parameters/template_name'
    put:
      tags: [Index APIs]
      summary: Create or update index template (PUT)
      description: |
        The Create or Update Index Template API allows you to define index templates with preset mappings and settings, or modify existing templates.
      operationId: putIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      requestBody:
        $ref: '#/components/requestBodies/IndexTemplateRequest'
      responses:
        '200':
          $ref: '#/components/responses/IndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/IndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    post:
      tags: [Index APIs]
      summary: Create or update index template (POST)
      description: |
        The Create or Update Index Template API allows you to define index templates with preset mappings and settings, or modify existing templates.
      operationId: postIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      requestBody:
        $ref: '#/components/requestBodies/IndexTemplateRequest'
      responses:
        '200':
          $ref: '#/components/responses/IndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/IndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    get:
      tags: [Index APIs]
      summary: Get index template
      description: |
        The Get Index Template API returns information about one or more index templates.
      operationId: getIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/flat_settings'
      responses:
        '200':
          $ref: '#/components/responses/GetIndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/GetIndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GetIndexTemplateNotFound'

    delete:
      tags: [Index APIs]
      summary: Delete index template
      description: |
        The Delete Index Template API deletes one or more index templates.
      operationId: deleteIndexTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/template_name_delete'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/DeleteIndexTemplateSuccess'
        '400':
          $ref: '#/components/responses/DeleteIndexTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/DeleteIndexTemplateNotFound'

  /_component_template/{component_template_name}:
    parameters:
      - $ref: '#/components/parameters/component_template_name'
    put:
      tags: [Index APIs]
      summary: Create or update component template (PUT)
      description: |
        The Component Template API allows you to create or update a component template. These templates serve as reusable building blocks that define settings, mappings, and aliases, which can be shared across multiple index templates.

        An index template can include multiple component templates. To use a component template within an index template, it must be listed in the `composed_of` section of the index template. Component templates are only applied to new indexes or data streams that match the conditions defined in the associated index template.

        If an index template or an index creation request specifies its own settings or mappings, those will override any conflicting settings or mappings from the component template.

        Component templates are only applied during index creation. In the case of data streams, this applies both to the creation of the stream itself and to the creation of its backing indexes. Any changes made to component templates do not impact existing indexes, including the backing indexes of already created data streams.
      operationId: putComponentTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/ComponentTemplateRequest'
      responses:
        '200':
          $ref: '#/components/responses/ComponentTemplateSuccess'
        '400':
          $ref: '#/components/responses/ComponentTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

    get:
      tags: [Index APIs]
      summary: Create or update component template (GET)
      description: |
        The Component Template API allows you to create or update a component template. These templates serve as reusable building blocks that define settings, mappings, and aliases, which can be shared across multiple index templates.

        An index template can include multiple component templates. To use a component template within an index template, it must be listed in the `composed_of` section of the index template. Component templates are only applied to new indexes or data streams that match the conditions defined in the associated index template.

        If an index template or an index creation request specifies its own settings or mappings, those will override any conflicting settings or mappings from the component template.

        Component templates are only applied during index creation. In the case of data streams, this applies both to the creation of the stream itself and to the creation of its backing indexes. Any changes made to component templates do not impact existing indexes, including the backing indexes of already created data streams.
      operationId: getComponentTemplate
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/create'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/ComponentTemplateRequest'
      responses:
        '200':
          $ref: '#/components/responses/ComponentTemplateSuccess'
        '400':
          $ref: '#/components/responses/ComponentTemplateBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

  /_dangling:
    get:
      tags: [Index APIs]
      summary: Dangling indexes (GET)
      description: |
        List dangling indexes. Dangling indexes are created when a node joins a cluster and contains shard data in its local directory that isn't already present in the cluster.
      operationId: getDangling
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/DanglingIndexesSuccess'
        '400':
          $ref: '#/components/responses/DanglingIndexesBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

  /_dangling/{index_uuid}:
    parameters:
      - $ref: '#/components/parameters/index_uuid'
    post:
      tags: [Index APIs]
      summary: Dangling indexes (POST)
      description: |
        Import a dangling index into the cluster. Dangling indexes are created when a node joins a cluster and contains shard data in its local directory that isn't already present in the cluster.
      operationId: postDanglingIndexUuid
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/accept_data_loss'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/DanglingIndexImportSuccess'
        '400':
          $ref: '#/components/responses/DanglingIndexImportBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags: [Index APIs]
      summary: Dangling indexes (DELETE)
      description: |
        Delete a dangling index from the cluster. Dangling indexes are created when a node joins a cluster and contains shard data in its local directory that isn't already present in the cluster.
      operationId: deleteDanglingIndexUuid
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/accept_data_loss'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      responses:
        '200':
          $ref: '#/components/responses/DanglingIndexDeleteSuccess'
        '400':
          $ref: '#/components/responses/DanglingIndexDeleteBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_flush:
    get:
      tags: [Index APIs]
      summary: Flush (Global GET)
      description: |
        The Flush API writes all in-memory operations to disk segments. Once these operations are flushed to index segments, they no longer need to be retained in transaction logs during a cluster restart, as they are now safely stored within the Lucene index.

        The Wazuh indexer automatically performs background flushes based on certain conditions, such as the size of the transaction log, which is managed by the `index.translog.flush_threshold_size` setting. It is recommended to use the Flush API only when necessary—for instance, before performing manual restarts or when aiming to free up memory.
      operationId: getFlushGlobal
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/force'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_if_ongoing'
      responses:
        '200':
          $ref: '#/components/responses/FlushSuccess'
        '400':
          $ref: '#/components/responses/FlushBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      tags: [Index APIs]
      summary: Flush (Global POST)
      description: |
        The Flush API writes all in-memory operations to disk segments. Once these operations are flushed to index segments, they no longer need to be retained in transaction logs during a cluster restart, as they are now safely stored within the Lucene index.

        The Wazuh indexer automatically performs background flushes based on certain conditions, such as the size of the transaction log, which is managed by the `index.translog.flush_threshold_size` setting. It is recommended to use the Flush API only when necessary—for instance, before performing manual restarts or when aiming to free up memory.
      operationId: postFlushGlobal
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/force'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_if_ongoing'
      responses:
        '200':
          $ref: '#/components/responses/FlushSuccess'
        '400':
          $ref: '#/components/responses/FlushBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_flush:
    parameters:
      - $ref: '#/components/parameters/index'
    get:
      tags: [Index APIs]
      summary: Flush (Index GET)
      description: |
        The Flush API writes all in-memory operations to disk segments. Once these operations are flushed to index segments, they no longer need to be retained in transaction logs during a cluster restart, as they are now safely stored within the Lucene index.

        The Wazuh indexer automatically performs background flushes based on certain conditions, such as the size of the transaction log, which is managed by the `index.translog.flush_threshold_size` setting. It is recommended to use the Flush API only when necessary—for instance, before performing manual restarts or when aiming to free up memory.
      operationId: getIndexFlush
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/force'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_if_ongoing'
      responses:
        '200':
          $ref: '#/components/responses/FlushSuccess'
        '400':
          $ref: '#/components/responses/FlushBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      tags: [Index APIs]
      summary: Flush (Index POST)
      description: |
        The Flush API writes all in-memory operations to disk segments. Once these operations are flushed to index segments, they no longer need to be retained in transaction logs during a cluster restart, as they are now safely stored within the Lucene index.

        The Wazuh indexer automatically performs background flushes based on certain conditions, such as the size of the transaction log, which is managed by the `index.translog.flush_threshold_size` setting. It is recommended to use the Flush API only when necessary—for instance, before performing manual restarts or when aiming to free up memory.
      operationId: postIndexFlush
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/force'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_if_ongoing'
      responses:
        '200':
          $ref: '#/components/responses/FlushSuccess'
        '400':
          $ref: '#/components/responses/FlushBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_forcemerge:
    post:
      tags: [Index APIs]
      summary: Force merge (Global POST)
      description: |
        The Force Merge API triggers a merge process on the shards of one or more specified indexes. When used with a data stream, it merges the shards of the stream's backing index.

        When the Force Merge API is invoked, the request remains blocked until the merge process finishes. If the connection is lost during this time, the force merge will still continue in the background. Any new force merge requests for the same index will be held until the ongoing merge operation is completed.

        ## Force merging multiple indexes

        You can use the Force Merge API to merge segments across multiple indexes by targeting:

        * Multiple specific indexes
        * One or more data streams, each with multiple backing indexes
        * One or more index aliases that reference multiple indexes
        * All data streams and indexes in the cluster

        When merging multiple indexes, the force merge operation is carried out sequentially on each shard within a node. During this process, the shard's storage usage temporarily increases to accommodate the rewriting of all existing segments into a new one. If `max_num_segments` is set to `1`, the storage required for the shard may temporarily double.
      operationId: postForcemerge
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flush'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/max_num_segments'
        - $ref: '#/components/parameters/only_expunge_deletes'
        - $ref: '#/components/parameters/primary_only'
      responses:
        '200':
          $ref: '#/components/responses/ForcemergeSuccess'
        '400':
          $ref: '#/components/responses/ForcemergeBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_forcemerge:
    post:
      tags: [Index APIs]
      summary: Force merge (Index POST)
      description: |
        The Force Merge API triggers a merge process on the shards of one or more specified indexes. When used with a data stream, it merges the shards of the stream's backing index.

        When the Force Merge API is invoked, the request remains blocked until the merge process finishes. If the connection is lost during this time, the force merge will still continue in the background. Any new force merge requests for the same index will be held until the ongoing merge operation is completed.

        ## Force merging multiple indexes

        You can use the Force Merge API to merge segments across multiple indexes by targeting:

        * Multiple specific indexes
        * One or more data streams, each with multiple backing indexes
        * One or more index aliases that reference multiple indexes
        * All data streams and indexes in the cluster

        When merging multiple indexes, the force merge operation is carried out sequentially on each shard within a node. During this process, the shard's storage usage temporarily increases to accommodate the rewriting of all existing segments into a new one. If `max_num_segments` is set to `1`, the storage required for the shard may temporarily double.
      operationId: postIndexForcemerge
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/index'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flush'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/max_num_segments'
        - $ref: '#/components/parameters/only_expunge_deletes'
        - $ref: '#/components/parameters/primary_only'
      responses:
        '200':
          $ref: '#/components/responses/ForcemergeSuccess'
        '400':
          $ref: '#/components/responses/ForcemergeBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_recovery:
    get:
      tags: [Index APIs]
      summary: Recovery API (Global GET)
      description: |
        The Recovery API offers insights into both completed and ongoing shard recovery processes for one or more indexes. When a data stream is specified, the API also returns recovery information for its associated backing indexes.

        Shard recovery is the process of creating a shard copy, either to restore a primary shard from a snapshot or to bring a replica shard in sync with the primary. Once the recovery process finishes, the shard becomes fully available for indexing and search operations.

        Recovery is automatically triggered in several scenarios, including:

        * Node startup (also known as local store recovery)
        * Replication of a primary shard
        * Relocation of a shard to another node within the same cluster
        * Snapshot restoration
        * Clone, shrink, or split operations

        The Recovery API exclusively displays the latest recovery status for shard copies that currently exist in the cluster. It does not include historical data about past recoveries or information about shards that no longer exist. As a result, if a shard completes recovery and is later moved to a different node, the original recovery details will not appear in the API response.
      operationId: getRecovery
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/active_only'
        - $ref: '#/components/parameters/detailed'
        - $ref: '#/components/parameters/index_query'
      responses:
        '200':
          $ref: '#/components/responses/RecoverySuccess'
        '400':
          $ref: '#/components/responses/RecoveryBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_recovery:
    parameters:
      - $ref: '#/components/parameters/index'
    get:
      tags: [Index APIs]
      summary: Recovery API (Index GET)
      description: |
        The Recovery API offers insights into both completed and ongoing shard recovery processes for one or more indexes. When a data stream is specified, the API also returns recovery information for its associated backing indexes.

        Shard recovery is the process of creating a shard copy, either to restore a primary shard from a snapshot or to bring a replica shard in sync with the primary. Once the recovery process finishes, the shard becomes fully available for indexing and search operations.

        Recovery is automatically triggered in several scenarios, including:

        * Node startup (also known as local store recovery)
        * Replication of a primary shard
        * Relocation of a shard to another node within the same cluster
        * Snapshot restoration
        * Clone, shrink, or split operations

        The Recovery API exclusively displays the latest recovery status for shard copies that currently exist in the cluster. It does not include historical data about past recoveries or information about shards that no longer exist. As a result, if a shard completes recovery and is later moved to a different node, the original recovery details will not appear in the API response.
      operationId: getIndexRecovery
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/active_only'
        - $ref: '#/components/parameters/detailed'
      responses:
        '200':
          $ref: '#/components/responses/RecoverySuccess'
        '400':
          $ref: '#/components/responses/RecoveryBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_open:
    parameters:
      - $ref: '#/components/parameters/index_only'
    post:
      tags: [Index APIs]
      summary: Open index
      description: |
        The Open Index API reactivates a previously closed index, allowing data to be added to it or searched from it once again.
      operationId: postIndexOpen
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      responses:
        '200':
          $ref: '#/components/responses/OpenIndexSuccess'
        '400':
          $ref: '#/components/responses/OpenIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /_refresh:
    get:
      tags: [Index APIs]
      summary: Refresh index (Global GET)
      description: |
        The Refresh Index API updates one or more indexes in an OpenSearch cluster to make recent changes (such as newly indexed or deleted documents) searchable.

        Once a shard becomes idle, it stops refreshing automatically. In such cases, the next search request or an explicit call to the Refresh Index API will trigger a refresh. If a search request comes first, it will pause until the refresh finishes.

        To execute the Refresh Index API, you must have write permissions for the target indexes.
      operationId: getRefreshGlobal
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
      responses:
        '200':
          $ref: '#/components/responses/RefreshIndexSuccess'
        '400':
          $ref: '#/components/responses/RefreshIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      tags: [Index APIs]
      summary: Refresh index (Global POST)
      description: |
        The Refresh Index API updates one or more indexes in an OpenSearch cluster to make recent changes (such as newly indexed or deleted documents) searchable.

        Once a shard becomes idle, it stops refreshing automatically. In such cases, the next search request or an explicit call to the Refresh Index API will trigger a refresh. If a search request comes first, it will pause until the refresh finishes.

        To execute the Refresh Index API, you must have write permissions for the target indexes.
      operationId: postRefreshGlobal
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
      responses:
        '200':
          $ref: '#/components/responses/RefreshIndexSuccess'
        '400':
          $ref: '#/components/responses/RefreshIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_refresh:
    parameters:
      - $ref: '#/components/parameters/index'
    get:
      tags: [Index APIs]
      summary: Refresh index (Index GET)
      description: |
        The Refresh Index API updates one or more indexes in an OpenSearch cluster to make recent changes (such as newly indexed or deleted documents) searchable.

        Once a shard becomes idle, it stops refreshing automatically. In such cases, the next search request or an explicit call to the Refresh Index API will trigger a refresh. If a search request comes first, it will pause until the refresh finishes.

        To execute the Refresh Index API, you must have write permissions for the target indexes.
      operationId: getIndexRefresh
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
      responses:
        '200':
          $ref: '#/components/responses/RefreshIndexSuccess'
        '400':
          $ref: '#/components/responses/RefreshIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      tags: [Index APIs]
      summary: Refresh index (Index POST)
      description: |
        The Refresh Index API updates one or more indexes in an OpenSearch cluster to make recent changes (such as newly indexed or deleted documents) searchable.

        Once a shard becomes idle, it stops refreshing automatically. In such cases, the next search request or an explicit call to the Refresh Index API will trigger a refresh. If a search request comes first, it will pause until the refresh finishes.

        To execute the Refresh Index API, you must have write permissions for the target indexes.
      operationId: postIndexRefresh
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
      responses:
        '200':
          $ref: '#/components/responses/RefreshIndexSuccess'
        '400':
          $ref: '#/components/responses/RefreshIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{rollover_target}/_rollover:
    parameters:
      - $ref: '#/components/parameters/rollover_target'
    post:
      tags: [Index APIs]
      summary: Roll over index (Global)
      description: |
        The Rollover Index API operation initiates the creation of a new index for a data stream or index alias, depending on the conditions defined by the `wait_for_active_shards` setting.

        **Rollover types**

        You can roll over a data stream, an index alias with one index, or an index alias with a write index.

        **Data Stream**

        When performing a rollover on a data stream, the API creates a new write index for that stream. The existing write index is converted into a standard backing index, and the data stream's generation count is incremented. Note that rollover operations on data streams do not allow specifying index settings in the request body.

        **Index Alias with a Single Index**

        If an index alias is linked to just one index, initiating a rollover will result in the creation of a new index. The original index is then removed from the alias.

        **Index Alias with a Write Index**

        For an alias that points to multiple indexes, one must be identified as the write index. During the rollover process, the API generates a new write index with its `is_write_index` flag set to `true`, while the previous write index has this property updated to `false`.

        **Auto-Incrementing Index Names for Aliases**

        When rolling over an index alias and no custom name is provided, if the current index name ends in a hyphen followed by a numeric sequence (e.g., `my-index-000001` or `my-index-3`), the rollover automatically increments this number in the new index name. For example, rolling over `my-index-000001` results in `my-index-000002`. The numerical suffix is padded with leading zeros to maintain a fixed length of six digits.

        **Using Date Math in Index Rollovers**

        For time-series data, you can incorporate date math into the index name when using an alias. For instance, creating an alias like `my-index-{now/d}-000001` on June 11, 2029, would result in an index named `my-index-2029.06.11-000001`. Performing a rollover on June 12, 2029, would generate `my-index-2029.06.12-000002`.
      operationId: postRolloverTargetRollover
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/RolloverIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/RolloverIndexSuccess'
        '400':
          $ref: '#/components/responses/RolloverIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

  /{rollover_target}/_rollover/{target_index}:
    parameters:
      - $ref: '#/components/parameters/rollover_target'
      - $ref: '#/components/parameters/target_index_rollover'
    post:
      tags: [Index APIs]
      summary: Roll over index (Target)
      description: |
        The Rollover Index API operation initiates the creation of a new index for a data stream or index alias, depending on the conditions defined by the `wait_for_active_shards` setting.

        **Rollover types**

        You can roll over a data stream, an index alias with one index, or an index alias with a write index.

        **Data Stream**

        When performing a rollover on a data stream, the API creates a new write index for that stream. The existing write index is converted into a standard backing index, and the data stream's generation count is incremented. Note that rollover operations on data streams do not allow specifying index settings in the request body.

        **Index Alias with a Single Index**

        If an index alias is linked to just one index, initiating a rollover will result in the creation of a new index. The original index is then removed from the alias.

        **Index Alias with a Write Index**

        For an alias that points to multiple indexes, one must be identified as the write index. During the rollover process, the API generates a new write index with its `is_write_index` flag set to `true`, while the previous write index has this property updated to `false`.

        **Auto-Incrementing Index Names for Aliases**

        When rolling over an index alias and no custom name is provided, if the current index name ends in a hyphen followed by a numeric sequence (e.g., `my-index-000001` or `my-index-3`), the rollover automatically increments this number in the new index name. For example, rolling over `my-index-000001` results in `my-index-000002`. The numerical suffix is padded with leading zeros to maintain a fixed length of six digits.

        **Using Date Math in Index Rollovers**

        For time-series data, you can incorporate date math into the index name when using an alias. For instance, creating an alias like `my-index-{now/d}-000001` on June 11, 2029, would result in an index named `my-index-2029.06.11-000001`. Performing a rollover on June 12, 2029, would generate `my-index-2029.06.12-000002`.
      operationId: postRolloverTargetRolloverTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
      requestBody:
        $ref: '#/components/requestBodies/RolloverIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/RolloverIndexSuccess'
        '400':
          $ref: '#/components/responses/RolloverIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

  /_settings:
    get:
      tags: [Index APIs]
      summary: Get settings (Global GET)
      description: |
        The Get Settings API retrieves all configuration settings associated with a specified index.
      operationId: getSettingsGlobal
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flat_settings'
        - $ref: '#/components/parameters/include_defaults'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: '#/components/responses/GetSettingsSuccess'
        '400':
          $ref: '#/components/responses/GetSettingsBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GetSettingsNotFound'

  /{target_index}/_settings:
    parameters:
      - $ref: '#/components/parameters/target_index_settings'
    get:
      tags: [Index APIs]
      summary: Get settings (Target GET)
      description: |
        The Get Settings API retrieves all configuration settings associated with a specified index.
      operationId: getSettingsTarget
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flat_settings'
        - $ref: '#/components/parameters/include_defaults'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: '#/components/responses/GetSettingsSuccess'
        '400':
          $ref: '#/components/responses/GetSettingsBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GetSettingsNotFound'

  /{target_index}/_settings/{setting}:
    parameters:
      - $ref: '#/components/parameters/target_index_settings'
      - $ref: '#/components/parameters/setting'
    get:
      tags: [Index APIs]
      summary: Get settings (Target Setting GET)
      description: |
        The Get Settings API retrieves all configuration settings associated with a specified index.
      operationId: getSettingsTargetSetting
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/flat_settings'
        - $ref: '#/components/parameters/include_defaults'
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/local'
        - $ref: '#/components/parameters/cluster_manager_timeout'
      responses:
        '200':
          $ref: '#/components/responses/GetSettingsSuccess'
        '400':
          $ref: '#/components/responses/GetSettingsBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GetSettingsNotFound'

  /_segments:
    get:
      tags: [Index APIs]
      summary: Segment (Global GET)
      description: |
        The Segment API provides detailed information about Lucene segments in index shards and includes information about the backing indexes of data streams.
      operationId: getSegmentsGlobal
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/verbose'
      responses:
        '200':
          $ref: '#/components/responses/SegmentSuccess'
        '400':
          $ref: '#/components/responses/SegmentBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index}/_segments:
    parameters:
      - $ref: '#/components/parameters/index'
    get:
      tags: [Index APIs]
      summary: Segment (Index GET)
      description: |
        The Segment API provides detailed information about Lucene segments in index shards and includes information about the backing indexes of data streams.
      operationId: getIndexSegments
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/ignore_unavailable'
        - $ref: '#/components/parameters/allow_no_indices'
        - $ref: '#/components/parameters/expand_wildcards'
        - $ref: '#/components/parameters/verbose'
      responses:
        '200':
          $ref: '#/components/responses/SegmentSuccess'
        '400':
          $ref: '#/components/responses/SegmentBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{index_name}/_shrink/{target_index}:
    parameters:
      - $ref: '#/components/parameters/index_name'
      - $ref: '#/components/parameters/target_index_shrink'
    post:
      tags: [Index APIs]
      summary: Shrink index (POST)
      description: |
        The Shrink Index API transfers all data from an existing index into a newly created index that has fewer primary shards.

        When using this operation to create a new index, be mindful of Wazuh indexer index naming rules:

        * All letters must be in lowercase.
        * Index names cannot begin with an underscore (`_`) or hyphen (`-`).
        * Index names must not contain spaces, commas, or any of these characters: `:`, `"`, `*`, `+`, `/`, `\`, `|`, `?`, `#`, `>`, `<`
      operationId: postIndexNameShrinkTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/ShrinkIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/ShrinkIndexSuccess'
        '400':
          $ref: '#/components/responses/ShrinkIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Shrink index (PUT)
      description: |
        The Shrink Index API transfers all data from an existing index into a newly created index that has fewer primary shards.

        When using this operation to create a new index, be mindful of Wazuh indexer index naming rules:

        * All letters must be in lowercase.
        * Index names cannot begin with an underscore (`_`) or hyphen (`-`).
        * Index names must not contain spaces, commas, or any of these characters: `:`, `"`, `*`, `+`, `/`, `\`, `|`, `?`, `#`, `>`, `<`
      operationId: putIndexNameShrinkTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/ShrinkIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/ShrinkIndexSuccess'
        '400':
          $ref: '#/components/responses/ShrinkIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /{source_index}/_split/{target_index}:
    parameters:
      - $ref: '#/components/parameters/source_index'
      - $ref: '#/components/parameters/target_index_split'
    post:
      tags: [Index APIs]
      summary: Split index (POST)
      description: |
        The Split Index API operation creates a new index by dividing each primary shard of an existing read-only index into multiple primary shards in the new index.
      operationId: postSourceIndexSplitTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/SplitIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/SplitIndexSuccess'
        '400':
          $ref: '#/components/responses/SplitIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      tags: [Index APIs]
      summary: Split index (PUT)
      description: |
        The Split Index API operation creates a new index by dividing each primary shard of an existing read-only index into multiple primary shards in the new index.
      operationId: putSourceIndexSplitTargetIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - $ref: '#/components/parameters/wait_for_active_shards'
        - $ref: '#/components/parameters/cluster_manager_timeout'
        - $ref: '#/components/parameters/timeout'
        - $ref: '#/components/parameters/wait_for_completion'
        - $ref: '#/components/parameters/task_execution_timeout'
      requestBody:
        $ref: '#/components/requestBodies/SplitIndexRequest'
      responses:
        '200':
          $ref: '#/components/responses/SplitIndexSuccess'
        '400':
          $ref: '#/components/responses/SplitIndexBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  parameters:
    target:
      name: target
      in: path
      required: false
      description: |
        A comma-separated list of index names. Supports wildcard expressions (`*`). To apply the operation to all indexes in the cluster, use `_all` or `*`.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.15"

    alias_name:
      name: alias-name
      in: path
      required: false
      description: |
        The name of the alias to create or update.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.15-alias"

    index:
      name: index
      in: path
      required: true
      description: |
        A comma-separated list of indexes, data streams, or index aliases that the operation is applied. Wildcard expressions  such as (`*`) are supported. Use `_all` or `*` to apply the operation to all indexes and data streams in the cluster.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    index_only:
      name: index
      in: path
      required: true
      description: |
        Specifies the index or list of indexes to operate on. You can provide a single index name, a comma-separated list of multiple indexes, or use `_all` or `*` to operate on all indexes in the cluster.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    single-index:
      name: index
      in: path
      required: true
      description: |
        The name of the index to be created. It must follow the index naming rules.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.5"

    block:
      name: block
      in: path
      required: true
      description: |
        Defines the type of block to set on the specified index. Valid options include:
        - `metadata`: Disables all metadata changes, such as closing the index.
        - `read`: Disables any read operations.
        - `read_only`: Disables any write operations and metadata changes.
        - `write`: Disables write operations, but still allows metadata updates.
      schema:
        type: string
        enum: [metadata, read, read_only, write]
      example: "write"

    cluster_manager_timeout:
      name: cluster_manager_timeout
      in: query
      required: false
      description: |
        Time to wait for a response from the cluster manager node.
      schema:
        type: string
        format: duration
        default: '30s'

    timeout:
      name: timeout
      in: query
      required: false
      description: |
        Time to wait for a response from the cluster.
      schema:
        type: string
        format: duration
        default: '30s'

    ignore_unavailable:
      name: ignore_unavailable
      in: query
      required: false
      description: |
        If set to `false`, the request will return an error when it targets an index that is either missing or closed.
      schema:
        type: boolean
        default: false

    allow_no_indices:
      name: allow_no_indices
      in: query
      required: false
      description: |
        If `false`, the API will return an error when a wildcard pattern, alias, or `_all` only matches closed or nonexistent indexes, even if open indexes are specified.
      schema:
        type: boolean
        default: true

    expand_wildcards:
      name: expand_wildcards
      in: query
      required: false
      description: |
        Specifies the types of indexes that wildcard expressions should match. If data streams are included in the request, this also determines whether hidden streams are matched. Accepts comma-separated values like `open,hidden`.
      schema:
        type: string
        enum: [all, open, closed, hidden, none]
        default: open

    source_index:
      name: source_index
      in: path
      required: true
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    target_index:
      name: target_index
      in: path
      required: true
      description: |
        The index to create and add cloned data to.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12-cloned"

    target_index_shrink:
      name: target_index
      in: path
      required: true
      description: |
        The target index to shrink the source index into.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.14"

    target_index_split:
      name: target_index
      in: path
      required: true
      description: |
        The index to create.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.14"

    fielddata:
      name: fielddata
      in: query
      required: false
      description: |
        When `true`, clears the field data cache. You can use the `fields` parameter to target specific fields.
      schema:
        type: boolean
        default: true

    fields:
      name: fields
      in: query
      required: false
      description: |
        A comma-separated list of field names whose field data caches should be cleared. This applies only when fielddata is enabled. Field aliases and objects are not supported. It defaults to all fields.
      schema:
        type: string

    query:
      name: query
      in: query
      required: false
      description: |
        Clears the query cache when set to `true`.
      schema:
        type: boolean
        default: true

    request:
      name: request
      in: query
      required: false
      description: |
        Clears the request cache when set to `true`.
      schema:
        type: boolean
        default: true

    wait_for_active_shards:
      name: wait_for_active_shards
      in: query
      required: false
      description: |
        Specifies the number of active shards required before proceeding with the operation. The default is `1`, meaning only the primary shard is needed. You can set it to `all` or a specific positive integer. If greater than `1`, the index must have the corresponding number of replicas available across different nodes.
      schema:
        type: string
        default: '1'

    wait_for_completion:
      name: wait_for_completion
      in: query
      required: false
      description: |
        If `false`, the API responds immediately without waiting for the operation to finish. Use the Tasks API along with the returned task ID to track progress.
      schema:
        type: boolean
        default: true

    task_execution_timeout:
      name: task_execution_timeout
      in: query
      required: false
      description: |
        Sets a specific time limit for how long the task can run. Only applies when `wait_for_completion` is `false`.
      schema:
        type: string
        format: duration
        default: '1h'

    index_name:
      name: index_name
      in: path
      required: true
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.04"

    flat_settings:
      name: flat_settings
      in: query
      required: false
      description: |
        Returns index settings in a simplified flat key-value format if set to `true`. This improves readability, especially for deeply nested configurations. For example, `"index": { "creation_date": "123456789" }` becomes `"index.creation_date": "123456789"`.
      schema:
        type: boolean

    include_defaults:
      name: include_defaults
      in: query
      required: false
      description: |
        Specifies whether the response should include default index settings. This is helpful for identifying setting names and values that can be customized.
      schema:
        type: boolean

    local:
      name: local
      in: query
      required: false
      description: |
        If set to `true`, returns index information only from the local node rather than querying the cluster manager node.
      schema:
        type: boolean
        default: false

    template_name:
      name: template_name
      in: path
      required: true
      description: |
        The name of the index template.
      schema:
        type: string
      example: "alias-template"

    template_name_delete:
      name: template_name
      in: path
      required: true
      description: |
        The name of the index template to be deleted. To delete multiple templates in a single request, separate their names with commas. Note that wildcard expressions are not supported when specifying multiple template names.
      schema:
        type: string
      example: "alias-template"

    target_index_mapping:
      name: target_index
      in: path
      required: true
      description: |
        This specifies the name of the index with which to associate the mapping. If you don't specify an index, you will get an error. You can specify a single index, or multiple indexes separated by a comma.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.18"

    target_index_settings:
      name: target_index
      in: path
      required: true
      description: |
        The name of the index (or a comma-separated list of indexes) from which to retrieve settings or use `_all` to fetch settings from every index in the cluster.
      schema:
        type: string
      example: "wazuh-alerts-4.x-2025.03.12"

    write_index_only:
      name: write_index_only
      in: query
      required: false
      description: |
        Determines whether mapping updates should only apply to the write index.
      schema:
        type: boolean

    component_template_name:
      name: component_template_name
      in: path
      required: true
      description: |
        The name of the component template.
      schema:
        type: string

    index_uuid:
      name: index_uuid
      in: path
      required: true
      description: |
        The unique identifier (UUID) of the index.
      schema:
        type: string

    accept_data_loss:
      name: accept_data_loss
      in: query
      required: false
      description: |
        Required to be set to `true` when performing an import or delete operation, as the Wazuh indexer cannot verify the origin of the dangling index data.
      schema:
        type: boolean

    force:
      name: force
      in: query
      required: false
      description: |
        If true, forces a flush operation even if there are no in-memory changes.
      schema:
        type: boolean
        default: true

    wait_if_ongoing:
      name: wait_if_ongoing
      in: query
      required: false
      description: |
        When `true`, the flush operation will wait if another flush is already in progress. If set to `false`, the Wazuh indexer returns an error if another flush is running.
      schema:
        type: boolean
        default: true

    create:
      name: create
      in: query
      required: false
      description: |
        If set to `true`, the API will not overwrite or modify any existing index templates.
      schema:
        type: boolean
        default: false

    flush:
      name: flush
      in: query
      required: false
      description: |
        If `true`, performs a flush after the force merge to ensure all data is persisted to disk.
      schema:
        type: boolean
        default: true

    max_num_segments:
      name: max_num_segments
      in: query
      required: false
      description: |
        Specifies the number of larger segments into which smaller ones should be merged. Set to `1` to consolidate all segments into a single segment. If not set, merging is done as needed.
      schema:
        type: integer

    only_expunge_deletes:
      name: only_expunge_deletes
      in: query
      required: false
      description: |
        If `true`, the merge operation only expunges segments containing a certain percentage of deleted documents. The percentage is 10% by default and is configurable in the `index.merge.policy.expunge_deletes_allowed` setting.
      schema:
        type: boolean
        default: false

    primary_only:
      name: primary_only
      in: query
      required: false
      description: |
        If set to `true`, the merge operation is executed only on primary shards. This is beneficial when preparing to take a snapshot, as snapshots include data solely from primary shards. Limiting the operation in this way helps minimize resource usage during the merge.
      schema:
        type: boolean
        default: false

    active_only:
      name: active_only
      in: query
      required: false
      description: |
        If set to `true`, the response includes only shard recoveries that are currently in progress.
      schema:
        type: boolean
        default: false

    detailed:
      name: detailed
      in: query
      required: false
      description: |
        When set to `true`, the response contains additional details about each shard recovery.
      schema:
        type: boolean
        default: false

    index_query:
      name: index
      in: query
      required: false
      description: |
        A comma-separated list or wildcard pattern specifying index names to narrow the scope of the request.
      schema:
        type: string

    setting:
      name: setting
      in: path
      required: true
      description: |
        An optional filter that allows you to retrieve only specific settings from the target index or indexes.
      schema:
        type: string

    rollover_target:
      name: rollover_target
      in: path
      required: true
      description: |
        Specifies the name of the data stream or index alias to be rolled over.
      schema:
        type: string
      example: "sample-alias1"

    target_index_rollover:
      name: target_index
      in: path
      required: true
      description: |
        Defines the name of the new index to be created during rollover. Supports date math expressions. This parameter is not supported for data streams. It is required if the current write index name for the alias does not end with a hyphen followed by a number (e.g., `my-index-000001` or `my-index-2`).
      schema:
        type: string

    verbose:
      name: verbose
      in: query
      required: false
      description: |
        When set to `true`, the response includes detailed information about Lucene's memory usage.
      schema:
        type: boolean
        default: false


  requestBodies:
    AliasRequest:
      description: |
        Request body for alias operations
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              actions:
                type: array
                description: |
                  List of actions to perform on the index. Valid options includes add, remove, and remove_index. You must have at least one action in the array.
                items:
                  type: object
                  properties:
                    add:
                      type: object
                      description: |
                        Adds an alias to the specified index.
                      properties:
                        index:
                          type: string
                          description: |
                            Name of the index to associate with the alias. Supports wildcard expressions.
                        indices:
                          type: array
                          items:
                            type: string
                          description: |
                            List of index names to associate with the alias.
                        alias:
                          type: string
                          description: |
                            The name of the alias.
                        aliases:
                          type: array
                          items:
                            type: string
                          description: |
                            List of alias names.
                        filter:
                          type: object
                          description: |
                            A filter to apply to the alias, allowing it to point to a subset of the index.
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates if the alias should be hidden from results that include wildcard expressions.
                        must_exist:
                          type: boolean
                          description: |
                            Specifies whether the alias to remove must exist.
                        is_write_index:
                          type: boolean
                          description: |
                            Designates the index as a write index. An alias can have only one write index at a time.
                        routing:
                          type: string
                          description: |
                            Custom value to assign to a shard for specific operations.
                        index_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for index operations.
                        search_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for search operations.
                    remove:
                      type: object
                      description: |
                        Removes an alias from the specified index.
                      properties:
                        index:
                          type: string
                          description: |
                            Name of the index to associate with the alias. Supports wildcard expressions.
                        indices:
                          type: array
                          items:
                            type: string
                          description: |
                            List of index names to associate with the alias.
                        alias:
                          type: string
                          description: |
                            The name of the alias.
                        aliases:
                          type: array
                          items:
                            type: string
                          description: |
                            List of alias names.
                        filter:
                          type: object
                          description: |
                            A filter to apply to the alias, allowing it to point to a subset of the index.
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates if the alias should be hidden from results that include wildcard expressions.
                        must_exist:
                          type: boolean
                          description: |
                            Specifies whether the alias to remove must exist.
                        is_write_index:
                          type: boolean
                          description: |
                            Designates the index as a write index. An alias can have only one write index at a time.
                        routing:
                          type: string
                          description: |
                            Custom value to assign to a shard for specific operations.
                        index_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for index operations.
                        search_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for search operations.
                    remove_index:
                      type: object
                      description: |
                        Deletes an index.
                      properties:
                        index:
                          type: string
                          description: |
                            Name of the index to associate with the alias. Supports wildcard expressions.
                        indices:
                          type: array
                          items:
                            type: string
                          description: |
                            List of index names to associate with the alias.
                        alias:
                          type: string
                          description: |
                            The name of the alias.
                        aliases:
                          type: array
                          items:
                            type: string
                          description: |
                            List of alias names.
                        filter:
                          type: object
                          description: |
                            A filter to apply to the alias, allowing it to point to a subset of the index.
                        is_hidden:
                          type: boolean
                          description: |
                            Indicates if the alias should be hidden from results that include wildcard expressions.
                        must_exist:
                          type: boolean
                          description: |
                            Specifies whether the alias to remove must exist.
                        is_write_index:
                          type: boolean
                          description: |
                            Designates the index as a write index. An alias can have only one write index at a time.
                        routing:
                          type: string
                          description: |
                            Custom value to assign to a shard for specific operations.
                        index_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for index operations.
                        search_routing:
                          type: string
                          description: |
                            Custom value to assign to a shard specifically for search operations.
          example:
            actions:
              - add:
                  index: "wazuh-alerts-4.x-2025.03.12"
                  alias: "wazuh-alerts-4.x-2025.03.12-alias1"

    CreateUpdateAliasRequest:
      description: |
        Request body for creating or updating aliases
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              index:
                type: string
                description: |
                  A comma-separated list of indexes to associate with the alias. If specified, this value overrides the index name in the URL path.
              alias:
                type: string
                description: |
                  The name of the alias. If provided, it overrides the alias name in the URL path.
              is_write_index:
                type: boolean
                description: |
                  Indicates whether the associated index should act as the write index. Only one write index is allowed per alias. If an alias points to multiple indexes, write requests are directed only to the designated write index.
              routing:
                type: string
                description: |
                  Custom value to assign to a shard for specific operations.
              index_routing:
                type: string
                description: |
                  Custom value to assign to a shard specifically for index operations.
              search_routing:
                type: string
                description: |
                  Custom value to assign to a shard specifically for search operations.
              filter:
                type: object
                description: |
                  A query filter that limits the alias to a subset of the index data.
          example:
            routing: "test"

    CloneIndexRequest:
      description: |
        Request body for clone index operations
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: |
                  A set of index settings to apply to the cloned index. Common use cases include removing or updating settings that cannot be carried over.
              aliases:
                type: object
                description: |
                  Defines one or more aliases to be associated with the newly created target index. You can specify alias names and their configuration (e.g., filters, routing).
          example:
            settings:
              index:
                number_of_shards: 3
                number_of_replicas: 1
            aliases:
              "wazuh-alerts-4.x-2025.03.12-alias": {}

    CreateIndexRequest:
      description: |
        Request body for creating indexes
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: |
                  Defines configuration settings for the index such as the number of shards, replicas, and custom analyzers.
              mappings:
                type: object
                description: |
                  Specifies the structure of documents in the index, including field types and data formats.
              aliases:
                type: object
                description: |
                  One or more aliases to associate with the index. You can include alias-specific settings like filters, routing, and write index designation.
          example:
            settings:
              index:
                number_of_shards: 2
                number_of_replicas: 1
            mappings:
              properties:
                age:
                  type: "integer"
            aliases:
              "sample-alias1": {}

    IndexTemplateRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              index_patterns:
                type: array
                items:
                  type: string
                description: |
                  Array of wildcard patterns used to match the names of data streams and indexes created when the template is applied. This field is required.
              composed_of:
                type: array
                items:
                  type: string
                description: |
                  An ordered list of component template names. These templates are combined in the specified sequence. This field is optional.
              data_stream:
                type: object
                description: |
                  If included, the request sets up data streams and their backing indexes according to the template. This requires a matching index template. It can also be combined with the hidden setting to make backing indexes hidden when set to `true`. This field is optional.
              _meta:
                type: object
                description: |
                  A metadata used to describe or add details about the index template. This field is optional.
              priority:
                type: integer
                description: |
                  A numeric value that determines the priority of index templates when multiple templates match. The one with the highest priority is applied. If not specified, the default is `0`, which is the lowest priority. Optional field.
              template:
                $ref: '#/components/schemas/TemplateStructure'
              version:
                type: integer
                description: |
                  This is used to track or manage versions of index templates. Optional field.
              context:
                type: object
                description: |
                  This parameter defines use-case-specific, predefined templates that can be applied to an index. Among all defined template configurations, those provided via context take precedence. Optional field.
          example:
            index_patterns: ["wazuh-alerts-4.x-*"]
            template:
              settings:
                number_of_shards: 1
              aliases:
                alias1: {}
                alias2:
                  filter:
                    term:
                      "user.id": "wazuh"
                  routing: "shard-1"
                "{index}-alias": {}

    MappingRequest:
      description: |
        Request body for mapping operations
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              properties:
                type: object
                description: |
                  Defines the fields and their data types for documents in the index. This is where you specify field names, types (e.g., `text`, `keyword`, `date`, `integer`), analyzers, formats, etc. This field is required.
              dynamic:
                oneOf:
                  - type: boolean
                  - type: string
                description: |
                  Controls whether new fields not defined in the mapping should be added automatically. This field is optional. The possible options are:

                  - `true`: allows dynamic fields.
                  - `false`: disables dynamic mapping.
                  - `strict`: throws an error if an unknown field is encountered.
          example:
            properties:
              level:
                type: "integer"
              description:
                type: "text"

    ComponentTemplateRequest:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              template:
                $ref: '#/components/schemas/TemplateStructure'
              version:
                type: integer
                description: |
                  A user-defined version number used for managing index templates. The Wazuh indexer does not automatically assign this value. This field is optional.
              _meta:
                type: object
                description: |
                  The metadata that describes or provides additional information about the index template. This field is optional.
              allow_auto_create:
                type: boolean
                description: |
                  If set to `true`, indexes can be automatically created using this template even when `actions.auto_create_index` is disabled. If `false`, matching indexes and data streams will not be automatically created.
              deprecated:
                type: boolean
                description: |
                  When `true`, marks the component template as deprecated. The Wazuh indexer will display a warning when the deprecated template is used.
          example:
            template:
              settings:
                number_of_shards: 1
              aliases:
                alias1: {}
                alias2:
                  filter:
                    term:
                      "user.id": "wazuh"
                  routing: "shard-1"
                "{index}-alias": {}

    RolloverIndexRequest:
      description: |
        The following request body fields are supported.
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              alias:
                type: object
                description: |
                  The `alias` parameter defines the alias name as a key and is required when the `template` option is included in the request body.
                properties:
                  filter:
                    type: object
                    description: |
                      A DSL query that limits the documents accessible through the alias.
                  index_routing:
                    type: string
                    description: |
                      Routes indexing operations to a specific shard. Overrides general routing for indexing when specified.
                  is_hidden:
                    type: boolean
                    description: |
                      Indicates whether the alias should be hidden.
                    default: false
                  is_write_index:
                    type: boolean
                    description: |
                      Identifies the write index for the alias. If true, the index is used for write operations.
                    default: false
                  routing:
                    type: string
                    description: |
                      A value that directs both indexing and search operations to a particular shard.
                  search_routing:
                    type: string
                    description: |
                      Routes search operations to a specific shard. Overrides the general routing value for search operations when set.
              mappings:
                type: object
                description: |
                  The `mappings` parameter specifies the index field mappings. It is optional.
              conditions:
                type: object
                description: |
                  The `conditions` parameter is an optional object that defines one or more rollover criteria. When specified, OpenSearch performs the rollover only if the current index meets at least one of the listed conditions. If this parameter is not provided, the rollover will proceed unconditionally.
                properties:
                  max_age:
                    type: string
                    format: duration
                    description: |
                      Triggers the rollover after a specified amount of time has passed since the index was created. The time is always measured from the index's creation timestamp, even if a custom origination date is defined using `index.lifecycle.origination_date` or `index.lifecycle.parse_origination_date`.
                  max_docs:
                    type: integer
                    description: |
                      Rolls over the index once it reaches the specified maximum number of documents. This count excludes documents added since the last refresh and documents stored in replica shards.
                  max_size:
                    type: string
                    description: |
                      Initiates rollover when the index size reaches the defined limit in byte units. The size is based on the combined total of primary shards only. Replica shards are excluded. You can use the `_cat/indices` API and refer to the `pri.store.size` field to monitor the current size.
              settings:
                type: object
                description: |
                  The settings parameter defines the configuration options for the new index created by the rollover. For more details, refer to the OpenSearch Index Settings documentation.
          example:
            conditions:
              max_age: "1d"
              max_docs: 2

    ShrinkIndexRequest:
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: |
                  A set of index settings to apply to the target index.
              aliases:
                type: object
                description: |
                  Defines one or more aliases to be associated with the newly created target index. You can specify alias names and their configuration (e.g., filters, routing).
              max_shard_size:
                type: string
                description: |
                  Defines the maximum allowed size for each primary shard in the target index. This parameter cannot be used in combination with the `index.number_of_shards setting`, as the two settings are mutually exclusive.

                  **The max_shard_size parameter**

                  The `max_shard_size` parameter sets the maximum size allowed for a primary shard in the target index. OpenSearch uses both `max_shard_size` and the total storage of all primary shards in the source index to determine the appropriate number and size of primary shards in the target index.

                  The primary shard count for the target index is determined as the smallest factor of the source index's primary shard count for which the shard size does not exceed the value of `max_shard_size`.

                  For example, if the source index has 8 primary shards, they occupy a total of 400 GB of storage, and the `max_shard_size` is set to 150 GB, OpenSearch calculates the number of primary shards in the target index as follows:

                  * Calculate the minimum number of primary shards as 400/150, rounded to the nearest whole number. The minimum number of primary shards is 3.
                  * Determine the number of primary shards as the smallest factor of 8 that is greater than 3. The number of primary shards is 4.

                  The maximum number of primary shards for the target index is equal to the number of primary shards in the source index, since the shrink operation is intended to reduce the number of primary shards. For instance, consider a source index with 5 primary shards that occupy a total of 600 GB of storage. If `max_shard_size` is 100 GB, the minimum number of primary shards is 600/100, which is 6. However, because the source index has only 5 primary shards (which is less than 6), the number of primary shards in the target index is set to 5. The minimum number of primary shards for the target index is 1.
          example:
            settings:
              index:
                number_of_replicas: 4
                number_of_shards: 3
            aliases:
              "new-index-alias": {}

    SplitIndexRequest:
      description: |
        Request body for split index operations
      required: false
      content:
        application/json:
          schema:
            type: object
            properties:
              settings:
                type: object
                description: |
                  A set of index settings to apply to the target index.
              aliases:
                type: object
                description: |
                  Defines one or more aliases to be associated with the newly created target index. You can specify alias names and their configuration (e.g., filters, routing).
          example:
            settings:
              index:
                number_of_shards: 3
                number_of_replicas: 2
            aliases:
              "sample-alias1": {}

  responses:
    AliasSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    CreateUpdateAliasSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    BlocksSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  indices:
                    type: object
                    properties:
                      name:
                        type: string
                        description: |
                          The name of the index where the block was applied.
                      blocked:
                        type: boolean
                        description: |
                          Indicates whether the block was successfully set (true) or not (false) for the specified index.
          example:
            acknowledged: true
            shards_acknowledged: true
            indices:
              "wazuh-alerts-4.x-2025.03.12":
                blocked: true

    ClearCacheSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShardsResponse'
          example:
            _shards:
              total: 3
              successful: 3
              failed: 0

    CloneIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  index:
                    type: string
                    description: |
                      The name of the newly created cloned index.
          example:
            acknowledged: true
            shards_acknowledged: true
            index: "wazuh-alerts-4.x-2025.03.12-cloned"

    CloseIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  indices:
                    type: object
                    description: |
                      Contains the results of the close operation for each index included in the request. The index name is used as the key.
          example:
            acknowledged: true
            shards_acknowledged: true
            indices:
              "wazuh-alerts-4.x-2025.03.11":
                closed: true

    CreateIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  index:
                    type: string
                    description: |
                      This indicates the name of the newly created index.
          example:
            acknowledged: true
            shards_acknowledged: true
            index: "wazuh-alerts-4.x-2025.03.5"

    DeleteIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    GetIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              aliases:
                type: object
                description: |
                  A list of any aliases assigned to the index.
              mappings:
                type: object
                description: |
                  The mapping definitions applied to the index.
              settings:
                type: object
                description: |
                  Configuration settings specific to the index.
              creation_date:
                type: string
                description: |
                  The timestamp, in Unix epoch format, representing when the index was created.
              number_of_shards:
                type: string
                description: |
                  The number of primary shards allocated to the index.
              number_of_replicas:
                type: string
                description: |
                  The number of replica shards configured for the index.
              uuid:
                type: string
                description: |
                  The unique identifier (UUID) assigned to the index.
              created:
                type: string
                description: |
                  The version of Wazuh indexer used to create the index.
              provided_name:
                type: string
                description: |
                  The original name given to the index.
          example:
            "sample_target":
              aliases: {}
              mappings:
                _meta:
                  schema_version: 1
                dynamic_templates:
                  - strings:
                      match_mapping_type: "string"
                      mapping:
                        type: "keyword"
                properties:
                  day:
                    type: "date"
                  quantity:
                    type: "float"
                  transform:
                    properties:
                      _doc_count:
                        type: "long"
                      _id:
                        type: "keyword"
                  version:
                    type: "keyword"
              settings:
                index:
                  replication:
                    type: "DOCUMENT"
                  number_of_shards: "1"
                  provided_name: "sample_target"
                  creation_date: "1739872000922"
                  number_of_replicas: "1"
                  uuid: "Erdstb-2SBaFhH3l3br38A"
                  version:
                    created: "136377827"

    AliasBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "No action specified"
              type: "illegal_argument_exception"
              reason: "No action specified"
            status: 400

    CreateUpdateAliasBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.15"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.15"
              index_uuid: "_na_"
            status: 400

    BlocksBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.22], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.22"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.22], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.22"
              index_uuid: "_na_"
            status: 400

    CloseIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.11], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.11"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.11], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.11"
              index_uuid: "_na_"
            status: 400

    CreateIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "resource_already_exists_exception"
                  reason: "index [wazuh-alerts-4.x-2025.03.5/iru5_ZTuQp-vK1Q-TNC6Uw] already exists"
                  index: "wazuh-alerts-4.x-2025.03.5"
                  index_uuid: "iru5_ZTuQp-vK1Q-TNC6Uw"
              type: "resource_already_exists_exception"
              reason: "index [wazuh-alerts-4.x-2025.03.5/iru5_ZTuQp-vK1Q-TNC6Uw] already exists"
              index: "wazuh-alerts-4.x-2025.03.5"
              index_uuid: "iru5_ZTuQp-vK1Q-TNC6Uw"
            status: 400

    ClearCacheBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.12], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.12"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.12], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.12"
              index_uuid: "_na_"
            status: 400

    CloneIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "the number of target shards (2) must be the same as the number of source shards (3)"
              type: "illegal_argument_exception"
              reason: "the number of target shards (2) must be the same as the number of source shards (3)"
            status: 400

    GetIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.15"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.15], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.15"
              index_uuid: "_na_"
            status: 400

    DeleteIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    NotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
          example:
            error:
              root_cause:
                - type: "index_not_found_exception"
                  reason: "no such index [wazuh-alerts-4.x-2025.03.12]"
                  index: "wazuh-alerts-4.x-2025.03.12"
                  resource.id: "wazuh-alerts-4.x-2025.03.12"
                  resource.type: "index_or_alias"
                  index_uuid: "_na_"
              type: "index_not_found_exception"
              reason: "no such index [wazuh-alerts-4.x-2025.03.12]"
              index: "wazuh-alerts-4.x-2025.03.12"
              resource.id: "wazuh-alerts-4.x-2025.03.12"
              resource.type: "index_or_alias"
              index_uuid: "_na_"
            status: 404

    IndexTemplateSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    IndexTemplateBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "parse_exception"
                  reason: "request body is required"
              type: "parse_exception"
              reason: "request body is required"
            status: 400

    GetIndexTemplateSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              index_templates:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: |
                        The name assigned to the index template.
                    index_template:
                      type: object
                      properties:
                        index_patterns:
                          type: array
                          items:
                            type: string
                          description: |
                            A list of patterns used to match index names. When a new index is created that matches the pattern, this template is automatically applied.
                        template:
                          type: object
                          description: |
                            Defines the index-level settings, mappings, and aliases that should be applied when an index matches the pattern.
                        composed_of:
                          type: array
                          items:
                            type: string
                          description: |
                            A list of component templates that are combined to form this index template.
          example:
            index_templates:
              - name: "alias-template"
                index_template:
                  index_patterns:
                    - "wazuh-alerts-4.x*"
                  template:
                    settings:
                      index:
                        number_of_shards: "1"
                    aliases:
                      alias1: {}
                      "{index}-alias": {}
                      alias2:
                        filter:
                          term:
                            "user.id": "wazuh"
                        index_routing: "shard-1"
                        search_routing: "shard-1"
                  composed_of: []

    GetIndexTemplateBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "request [/_index_template/alias-template] contains unrecognized parameter: [create]"
              type: "illegal_argument_exception"
              reason: "request [/_index_template/alias-template] contains unrecognized parameter: [create]"
            status: 400

    GetIndexTemplateNotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "resource_not_found_exception"
                  reason: "index template matching [alias-templat] not found"
              type: "resource_not_found_exception"
              reason: "index template matching [alias-templat] not found"
            status: 404

    MappingSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    MappingBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "mapper [agent.name] cannot be changed from type [keyword] to [text]"
              type: "illegal_argument_exception"
              reason: "mapper [agent.name] cannot be changed from type [keyword] to [text]"
            status: 400

    DeleteIndexTemplateSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    DeleteIndexTemplateBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "request [/_index_template/alias-template12] contains unrecognized parameter: [timeout]"
              type: "illegal_argument_exception"
              reason: "request [/_index_template/alias-template12] contains unrecognized parameter: [timeout]"
            status: 400

    DeleteIndexTemplateNotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "index_template_missing_exception"
                  reason: "index_template [alias-template1] missing"
              type: "index_template_missing_exception"
              reason: "index_template [alias-template1] missing"
            status: 404

    ComponentTemplateSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    ComponentTemplateBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "parse_exception"
                  reason: "request body is required"
              type: "parse_exception"
              reason: "request body is required"
            status: 400

    DanglingIndexesSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              _nodes:
                type: object
                properties:
                  total:
                    type: integer
                    description: |
                      The total number of nodes involved in the operation.
                  successful:
                    type: integer
                    description: |
                      The number of nodes that responded successfully.
                  failed:
                    type: integer
                    description: |
                      The number of nodes that failed to respond or encountered an error.
              cluster_name:
                type: string
                description: |
                  The name of the Wazuh indexer cluster where the request was executed.
              dangling_indices:
                type: array
                description: |
                  A list of dangling indexes found on the cluster. An empty array (`[]`) means there are currently no dangling indexes present.
          example:
            _nodes:
              total: 1
              successful: 1
              failed: 0
            cluster_name: "wazuh-cluster"
            dangling_indices: []

    DanglingIndexesBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "request [/_dangling] contains unrecognized parameter: [timeout]"
              type: "illegal_argument_exception"
              reason: "request [/_dangling] contains unrecognized parameter: [timeout]"
            status: 400

    DanglingIndexImportSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    DanglingIndexImportBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "accept_data_loss must be set to true"
              type: "illegal_argument_exception"
              reason: "accept_data_loss must be set to true"
            status: 400

    DanglingIndexDeleteSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AcknowledgedResponse'
          example:
            acknowledged: true

    DanglingIndexDeleteBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "accept_data_loss must be set to true"
              type: "illegal_argument_exception"
              reason: "accept_data_loss must be set to true"
            status: 400

    FlushSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShardsResponse'
          example:
            _shards:
              total: 1
              successful: 1
              failed: 0

    FlushBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    ForcemergeSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShardsResponse'
          example:
            _shards:
              total: 1
              successful: 1
              failed: 0

    ForcemergeBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    RecoverySuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecoveryResponse'
          example:
            "wazuh-alerts-4.x-2025.03.03":
              shards:
                - id: 0
                  type: "EXISTING_STORE"
                  stage: "DONE"
                  primary: true
                  start_time: "2025-04-09T11:12:00.653Z"
                  start_time_in_millis: 1744197120653
                  stop_time: "2025-04-09T11:12:00.800Z"
                  stop_time_in_millis: 1744197120800
                  total_time: "147ms"
                  total_time_in_millis: 147
                  source:
                    bootstrap_new_history_uuid: false
                  target:
                    id: "xDC5NqstQh2alB_BedjVmw"
                    host: "127.0.0.1"
                    transport_address: "127.0.0.1:9300"
                    ip: "127.0.0.1"
                    name: "node-1"
                  index:
                    size:
                      total: "113.6kb"
                      total_in_bytes: 116402
                      reused: "113.6kb"
                      reused_in_bytes: 116402
                      recovered: "0b"
                      recovered_in_bytes: 0
                      percent: "100.0%"
                    files:
                      total: 13
                      reused: 13
                      recovered: 0
                      percent: "100.0%"
                    total_time: "1ms"
                    total_time_in_millis: 1
                    source_throttle_time: "-1"
                    source_throttle_time_in_millis: 0
                    target_throttle_time: "-1"
                    target_throttle_time_in_millis: 0
                  translog:
                    recovered: 0
                    total: 0
                    percent: "100.0%"
                    total_on_start: 0
                    total_time: "112ms"
                    total_time_in_millis: 112
                  verify_index:
                    check_index_time: "0s"
                    check_index_time_in_millis: 0
                    total_time: "0s"
                    total_time_in_millis: 0
                - id: 1
                  type: "EXISTING_STORE"
                  stage: "DONE"
                  primary: true
                  start_time: "2025-04-09T11:12:00.684Z"
                  start_time_in_millis: 1744197120684
                  stop_time: "2025-04-09T11:12:00.773Z"
                  stop_time_in_millis: 1744197120773
                  total_time: "89ms"
                  total_time_in_millis: 89
                  source:
                    bootstrap_new_history_uuid: false
                  target:
                    id: "xDC5NqstQh2alB_BedjVmw"
                    host: "127.0.0.1"
                    transport_address: "127.0.0.1:9300"
                    ip: "127.0.0.1"
                    name: "node-1"
                  index:
                    size:
                      total: "44.9kb"
                      total_in_bytes: 46028
                      reused: "44.9kb"
                      reused_in_bytes: 46028
                      recovered: "0b"
                      recovered_in_bytes: 0
                      percent: "100.0%"
                    files:
                      total: 7
                      reused: 7
                      recovered: 0
                      percent: "100.0%"
                    total_time: "5ms"
                    total_time_in_millis: 5
                    source_throttle_time: "-1"
                    source_throttle_time_in_millis: 0
                    target_throttle_time: "-1"
                    target_throttle_time_in_millis: 0
                  translog:
                    recovered: 0
                    total: 0
                    percent: "100.0%"
                    total_on_start: 0
                    total_time: "68ms"
                    total_time_in_millis: 68
                  verify_index:
                    check_index_time: "0s"
                    check_index_time_in_millis: 0
                    total_time: "0s"
                    total_time_in_millis: 0
                - id: 2
                  type: "EXISTING_STORE"
                  stage: "DONE"
                  primary: true
                  start_time: "2025-04-09T11:12:00.699Z"
                  start_time_in_millis: 1744197120699
                  stop_time: "2025-04-09T11:12:00.820Z"
                  stop_time_in_millis: 1744197120820
                  total_time: "121ms"
                  total_time_in_millis: 121
                  source:
                    bootstrap_new_history_uuid: false
                  target:
                    id: "xDC5NqstQh2alB_BedjVmw"
                    host: "127.0.0.1"
                    transport_address: "127.0.0.1:9300"
                    ip: "127.0.0.1"
                    name: "node-1"
                  index:
                    size:
                      total: "46.7kb"
                      total_in_bytes: 47833
                      reused: "46.7kb"
                      reused_in_bytes: 47833
                      recovered: "0b"
                      recovered_in_bytes: 0
                      percent: "100.0%"
                    files:
                      total: 10
                      reused: 10
                      recovered: 0
                      percent: "100.0%"
                    total_time: "11ms"
                    total_time_in_millis: 11
                    source_throttle_time: "-1"
                    source_throttle_time_in_millis: 0
                    target_throttle_time: "-1"
                    target_throttle_time_in_millis: 0
                  translog:
                    recovered: 0
                    total: 0
                    percent: "100.0%"
                    total_on_start: 0
                    total_time: "84ms"
                    total_time_in_millis: 84
                  verify_index:
                    check_index_time: "0s"
                    check_index_time_in_millis: 0
                    total_time: "0s"
                    total_time_in_millis: 0

    RecoveryBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    GetSettingsSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            description: |
              Contains all configuration settings for the specified index.
            additionalProperties:
              type: object
              properties:
                settings:
                  type: object
                  description: |
                    Contains all configuration settings related to the index.
                  properties:
                    index:
                      type: object
                      properties:
                        replication:
                          type: object
                          additionalProperties:
                            type: object
                        mapping:
                          type: object
                          additionalProperties:
                            type: object
                        refresh_interval:
                          type: string
                        number_of_shards:
                          type: string
                          description: |
                            The number of primary shards assigned to the index.
                        auto_expand_replicas:
                          type: string
                        provided_name:
                          type: string
                          description: |
                            The original name given to the index at the time of its creation.
                        query:
                          type: object
                          additionalProperties:
                            type: object
                    creation_date:
                      type: string
                      description: |
                        The date and time the index was created, in Unix epoch format (milliseconds).
                    number_of_replicas:
                      type: string
                      description: |
                        The number of replica shards configured for the index.
                    uuid:
                      type: string
                      description: |
                        The unique identifier (UUID) of the index.
                    version:
                      type: object
                      properties:
                        created:
                          type: string
                          description: |
                            The Wazuh indexer version in which the index was originally created.
          example:
            "wazuh-alerts-4.x-2025.03.01":
              settings:
                index:
                  replication:
                    type: "DOCUMENT"
                  mapping:
                    total_fields:
                      limit: "10000"
                  refresh_interval: "5s"
                  number_of_shards: "3"
                  auto_expand_replicas: "0-1"
                  provided_name: "<wazuh-alerts-4.x-{2025.03.01||/d{yyyy.MM.dd|UTC}}>"
                  query:
                    default_field:
                      - "GeoLocation.city_name"
                      - "GeoLocation.continent_code"
                      - "GeoLocation.country_code2"
                      - "GeoLocation.country_code3"
                      - "GeoLocation.country_name"
                      - "GeoLocation.ip"
                      - "GeoLocation.postal_code"
                      - "GeoLocation.real_region_name"
                      - "GeoLocation.region_name"
                      - "GeoLocation.timezone"
                      - "agent.id"
                      - "agent.ip"
                      - "agent.name"
                      - "cluster.name"
                      - "cluster.node"
                      - "command"
                      - "data"
                      - "data.action"
                      - "data.audit"
                      - "data.audit.acct"
                      - "data.audit.arch"
                      - "data.audit.auid"
                      - "data.audit.command"
                      - "data.audit.cwd"
                      - "data.audit.dev"
                      - "data.audit.directory.inode"
                      - "data.audit.directory.mode"
                      - "data.audit.directory.name"
                      - "data.audit.egid"
                      - "data.audit.enforcing"
                      - "data.audit.euid"
                      - "data.audit.exe"
                      - "data.audit.execve.a0"
                      - "data.audit.execve.a1"
                      - "data.audit.execve.a2"
                      - "data.audit.execve.a3"
                      - "data.audit.exit"
                      - "data.audit.file.inode"
                      - "data.audit.file.mode"
                      - "data.audit.file.name"
                      - "data.audit.fsgid"
                      - "data.audit.fsuid"
                      - "data.audit.gid"
                      - "data.audit.id"
                      - "data.audit.key"
                      - "data.audit.list"
                      - "data.audit.old-auid"
                      - "data.audit.old-ses"
                      - "data.audit.old_enforcing"
                      - "data.audit.old_prom"
                      - "data.audit.op"
                      - "data.audit.pid"
                      - "data.audit.ppid"
                      - "data.audit.prom"
                      - "data.audit.res"
                      - "data.audit.session"
                      - "data.audit.sgid"
                      - "data.audit.srcip"
                      - "data.audit.subj"
                      - "data.audit.success"
                      - "data.audit.suid"
                      - "data.audit.syscall"
                      - "data.audit.tty"
                      - "data.audit.uid"
                      - "data.aws.accountId"
                      - "data.aws.account_id"
                      - "data.aws.action"
                      - "data.aws.actor"
                      - "data.aws.aws_account_id"
                      - "data.aws.description"
                      - "data.aws.dstport"
                      - "data.aws.errorCode"
                      - "data.aws.errorMessage"
                      - "data.aws.eventID"
                      - "data.aws.eventName"
                      - "data.aws.eventSource"
                      - "data.aws.eventType"
                      - "data.aws.id"
                      - "data.aws.name"
                      - "data.aws.requestParameters.accessKeyId"
                      - "data.aws.requestParameters.bucketName"
                      - "data.aws.requestParameters.gatewayId"
                      - "data.aws.requestParameters.groupDescription"
                      - "data.aws.requestParameters.groupId"
                      - "data.aws.requestParameters.groupName"
                      - "data.aws.requestParameters.host"
                      - "data.aws.requestParameters.hostedZoneId"
                      - "data.aws.requestParameters.instanceId"
                      - "data.aws.requestParameters.instanceProfileName"
                      - "data.aws.requestParameters.loadBalancerName"
                      - "data.aws.requestParameters.loadBalancerPorts"
                      - "data.aws.requestParameters.masterUserPassword"
                      - "data.aws.requestParameters.masterUsername"
                      - "data.aws.requestParameters.name"
                      - "data.aws.requestParameters.natGatewayId"
                      - "data.aws.requestParameters.networkAclId"
                      - "data.aws.requestParameters.path"
                      - "data.aws.requestParameters.policyName"
                      - "data.aws.requestParameters.port"
                      - "data.aws.requestParameters.stackId"
                      - "data.aws.requestParameters.stackName"
                      - "data.aws.requestParameters.subnetId"
                      - "data.aws.requestParameters.subnetIds"
                      - "data.aws.requestParameters.volumeId"
                      - "data.aws.requestParameters.vpcId"
                      - "data.aws.resource.accessKeyDetails.accessKeyId"
                      - "data.aws.resource.accessKeyDetails.principalId"
                      - "data.aws.resource.accessKeyDetails.userName"
                      - "data.aws.resource.instanceDetails.instanceId"
                      - "data.aws.resource.instanceDetails.instanceState"
                      - "data.aws.resource.instanceDetails.networkInterfaces.privateDnsName"
                      - "data.aws.resource.instanceDetails.networkInterfaces.publicDnsName"
                      - "data.aws.resource.instanceDetails.networkInterfaces.subnetId"
                      - "data.aws.resource.instanceDetails.networkInterfaces.vpcId"
                      - "data.aws.resource.instanceDetails.tags.value"
                      - "data.aws.responseElements.AssociateVpcCidrBlockResponse.vpcId"
                      - "data.aws.responseElements.description"
                      - "data.aws.responseElements.instanceId"
                      - "data.aws.responseElements.instances.instanceId"
                      - "data.aws.responseElements.instancesSet.items.instanceId"
                      - "data.aws.responseElements.listeners.port"
                      - "data.aws.responseElements.loadBalancerName"
                      - "data.aws.responseElements.loadBalancers.vpcId"
                      - "data.aws.responseElements.loginProfile.userName"
                      - "data.aws.responseElements.networkAcl.vpcId"
                      - "data.aws.responseElements.ownerId"
                      - "data.aws.responseElements.publicIp"
                      - "data.aws.responseElements.user.userId"
                      - "data.aws.responseElements.user.userName"
                      - "data.aws.responseElements.volumeId"
                      - "data.aws.service.serviceName"
                      - "data.aws.severity"
                      - "data.aws.source"
                      - "data.aws.sourceIPAddress"
                      - "data.aws.srcport"
                      - "data.aws.userIdentity.accessKeyId"
                      - "data.aws.userIdentity.accountId"
                      - "data.aws.userIdentity.userName"
                      - "data.aws.vpcEndpointId"
                      - "data.command"
                      - "data.cis.group"
                      - "data.cis.rule_title"
                      - "data.data"
                      - "data.docker.Actor.Attributes.container"
                      - "data.docker.Actor.Attributes.image"
                      - "data.docker.Actor.Attributes.name"
                      - "data.docker.Actor.ID"
                      - "data.docker.id"
                      - "data.docker.message"
                      - "data.docker.status"
                      - "data.dstip"
                      - "data.dstport"
                      - "data.dstuser"
                      - "data.extra_data"
                      - "data.gcp.jsonPayload.queryName"
                      - "data.gcp.jsonPayload.vmInstanceName"
                      - "data.gcp.resource.labels.location"
                      - "data.gcp.resource.labels.project_id"
                      - "data.gcp.resource.labels.source_type"
                      - "data.gcp.resource.type"
                      - "data.github.org"
                      - "data.github.actor"
                      - "data.github.action"
                      - "data.github.repo"
                      - "data.hardware.serial"
                      - "data.id"
                      - "data.integration"
                      - "data.netinfo.iface.adapter"
                      - "data.netinfo.iface.ipv4.address"
                      - "data.netinfo.iface.ipv6.address"
                      - "data.netinfo.iface.mac"
                      - "data.netinfo.iface.name"
                      - "data.office365.Actor.ID"
                      - "data.office365.UserId"
                      - "data.office365.Operation"
                      - "data.office365.ClientIP"
                      - "data.ms-graph.relationship"
                      - "data.ms-graph.classification"
                      - "data.ms-graph.detectionSource"
                      - "data.ms-graph.determination"
                      - "data.ms-graph.remediationStatus"
                      - "data.ms-graph.roles"
                      - "data.ms-graph.verdict"
                      - "data.ms-graph.serviceSource"
                      - "data.ms-graph.severity"
                      - "data.ms-graph.actorDisplayName"
                      - "data.ms-graph.alertWebUrl"
                      - "data.ms-graph.assignedTo"
                      - "data.ms-graph.category"
                      - "data.ms-graph.comments"
                      - "data.ms-graph.description"
                      - "data.ms-graph.detectorId"
                      - "data.ms-graph.evidence._comment"
                      - "data.ms-graph.id"
                      - "data.ms-graph.incidentId"
                      - "data.ms-graph.incidentWebUrl"
                      - "data.ms-graph.mitreTechniques"
                      - "data.ms-graph.providerAlertId"
                      - "data.ms-graph.resource"
                      - "data.ms-graph.status"
                      - "data.ms-graph.tenantId"
                      - "data.ms-graph.threatDisplayName"
                      - "data.ms-graph.threatFamilyName"
                      - "data.ms-graph.title"
                      - "data.ms-graph.@odata.type"
                      - "data.ms-graph.activationLockBypassCode"
                      - "data.ms-graph.activity"
                      - "data.ms-graph.activityOperationType"
                      - "data.ms-graph.activityResult"
                      - "data.ms-graph.activityType"
                      - "data.ms-graph.actor.@odata.type"
                      - "data.ms-graph.actor.applicationDisplayName"
                      - "data.ms-graph.actor.applicationId"
                      - "data.ms-graph.actor.auditActorType"
                      - "data.ms-graph.actor.ipAddress"
                      - "data.ms-graph.actor.servicePrincipalName"
                      - "data.ms-graph.actor.type"
                      - "data.ms-graph.actor.userId"
                      - "data.ms-graph.actor.userPermissions"
                      - "data.ms-graph.actor.userPrincipalName"
                      - "data.ms-graph.androidSecurityPatchLevel"
                      - "data.ms-graph.appliedConditionalAccessPolicies"
                      - "data.ms-graph.azureADDeviceId"
                      - "data.ms-graph.azureADRegistered"
                      - "data.ms-graph.complianceState"
                      - "data.ms-graph.componentName"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.@odata.type"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.compliancePolicy"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.deviceConfiguration"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.inventory"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.modernApps"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.resourceAccess"
                      - "data.ms-graph.configurationManagerClientEnabledFeatures.windowsUpdateForBusiness"
                      - "data.ms-graph.correlationId"
                      - "data.ms-graph.deviceActionResults.@odata.type"
                      - "data.ms-graph.deviceActionResults.actionName"
                      - "data.ms-graph.deviceActionResults.actionState"
                      - "data.ms-graph.deviceCategoryDisplayName"
                      - "data.ms-graph.deviceEnrollmentType"
                      - "data.ms-graph.deviceHealthAttestationState.@odata.type"
                      - "data.ms-graph.deviceHealthAttestationState.attestationIdentityKey"
                      - "data.ms-graph.deviceHealthAttestationState.bitLockerStatus"
                      - "data.ms-graph.deviceHealthAttestationState.bootAppSecurityVersion"
                      - "data.ms-graph.deviceHealthAttestationState.bootDebugging"
                      - "data.ms-graph.deviceHealthAttestationState.bootManagerSecurityVersion"
                      - "data.ms-graph.deviceHealthAttestationState.bootManagerVersion"
                      - "data.ms-graph.deviceHealthAttestationState.bootRevisionListInfo"
                      - "data.ms-graph.deviceHealthAttestationState.codeIntegrity"
                      - "data.ms-graph.deviceHealthAttestationState.codeIntegrityCheckVersion"
                      - "data.ms-graph.deviceHealthAttestationState.codeIntegrityPolicy"
                      - "data.ms-graph.deviceHealthAttestationState.contentNamespaceUrl"
                      - "data.ms-graph.deviceHealthAttestationState.contentVersion"
                      - "data.ms-graph.deviceHealthAttestationState.dataExcutionPolicy"
                      - "data.ms-graph.deviceHealthAttestationState.deviceHealthAttestationStatus"
                      - "data.ms-graph.deviceHealthAttestationState.earlyLaunchAntiMalwareDriverProtection"
                      - "data.ms-graph.deviceHealthAttestationState.healthAttestationSupportedStatus"
                      - "data.ms-graph.deviceHealthAttestationState.healthStatusMismatchInfo"
                      - "data.ms-graph.deviceHealthAttestationState.operatingSystemKernelDebugging"
                      - "data.ms-graph.deviceHealthAttestationState.operatingSystemRevListInfo"
                      - "data.ms-graph.deviceHealthAttestationState.pcr0"
                      - "data.ms-graph.deviceHealthAttestationState.pcrHashAlgorithm"
                      - "data.ms-graph.deviceHealthAttestationState.resetCount"
                      - "data.ms-graph.deviceHealthAttestationState.restartCount"
                      - "data.ms-graph.deviceHealthAttestationState.safeMode"
                      - "data.ms-graph.deviceHealthAttestationState.secureBoot"
                      - "data.ms-graph.deviceHealthAttestationState.secureBootConfigurationPolicyFingerPrint"
                      - "data.ms-graph.deviceHealthAttestationState.testSigning"
                      - "data.ms-graph.deviceHealthAttestationState.tpmVersion"
                      - "data.ms-graph.deviceHealthAttestationState.virtualSecureMode"
                      - "data.ms-graph.deviceHealthAttestationState.windowsPE"
                      - "data.ms-graph.deviceName"
                      - "data.ms-graph.deviceRegistrationState"
                      - "data.ms-graph.displayName"
                      - "data.ms-graph.easActivated"
                      - "data.ms-graph.easDeviceId"
                      - "data.ms-graph.emailAddress"
                      - "data.ms-graph.enrollmentProfileName"
                      - "data.ms-graph.ethernetMacAddress"
                      - "data.ms-graph.exchangeAccessState"
                      - "data.ms-graph.exchangeAccessStateReason"
                      - "data.ms-graph.freeStorageSpaceInBytes"
                      - "data.ms-graph.iccid"
                      - "data.ms-graph.imei"
                      - "data.ms-graph.isEncrypted"
                      - "data.ms-graph.isSupervised"
                      - "data.ms-graph.jailBroken"
                      - "data.ms-graph.managedDeviceName"
                      - "data.ms-graph.managedDevices.deviceName"
                      - "data.ms-graph.managedDevices.id"
                      - "data.ms-graph.managedDeviceOwnerType"
                      - "data.ms-graph.managementAgent"
                      - "data.ms-graph.manufacturer"
                      - "data.ms-graph.meid"
                      - "data.ms-graph.model"
                      - "data.ms-graph.notes"
                      - "data.ms-graph.operatingSystem"
                      - "data.ms-graph.osVersion"
                      - "data.ms-graph.partnerReportedThreatState"
                      - "data.ms-graph.phoneNumber"
                      - "data.ms-graph.physicalMemoryInBytes"
                      - "data.ms-graph.platform"
                      - "data.ms-graph.publisher"
                      - "data.ms-graph.remoteAssistanceSessionErrorDetails"
                      - "data.ms-graph.remoteAssistanceSessionUrl"
                      - "data.ms-graph.requireUserEnrollmentApproval"
                      - "data.ms-graph.resources.@odata.type"
                      - "data.ms-graph.resources.auditResourceType"
                      - "data.ms-graph.resources.displayName"
                      - "data.ms-graph.resources.modifiedProperties.@odata.type"
                      - "data.ms-graph.resources.modifiedProperties.displayName"
                      - "data.ms-graph.resources.modifiedProperties.oldValue"
                      - "data.ms-graph.resources.modifiedProperties.newValue"
                      - "data.ms-graph.resources.resourceId"
                      - "data.ms-graph.resources.type"
                      - "data.ms-graph.serialNumber"
                      - "data.ms-graph.sizeInByte"
                      - "data.ms-graph.subscriberCarrier"
                      - "data.ms-graph.totalStorageSpaceInBytes"
                      - "data.ms-graph.udid"
                      - "data.ms-graph.userDisplayName"
                      - "data.ms-graph.userId"
                      - "data.ms-graph.userPrincipalName"
                      - "data.ms-graph.version"
                      - "data.ms-graph.wiFiMacAddress"
                      - "data.os.architecture"
                      - "data.os.build"
                      - "data.os.codename"
                      - "data.os.hostname"
                      - "data.os.major"
                      - "data.os.minor"
                      - "data.os.patch"
                      - "data.os.name"
                      - "data.os.platform"
                      - "data.os.release"
                      - "data.os.release_version"
                      - "data.os.display_version"
                      - "data.os.sysname"
                      - "data.os.version"
                      - "data.oscap.check.description"
                      - "data.oscap.check.id"
                      - "data.oscap.check.identifiers"
                      - "data.oscap.check.oval.id"
                      - "data.oscap.check.rationale"
                      - "data.oscap.check.references"
                      - "data.oscap.check.result"
                      - "data.oscap.check.severity"
                      - "data.oscap.check.title"
                      - "data.oscap.scan.benchmark.id"
                      - "data.oscap.scan.content"
                      - "data.oscap.scan.id"
                      - "data.oscap.scan.profile.id"
                      - "data.oscap.scan.profile.title"
                      - "data.osquery.columns.address"
                      - "data.osquery.columns.command"
                      - "data.osquery.columns.description"
                      - "data.osquery.columns.dst_ip"
                      - "data.osquery.columns.gid"
                      - "data.osquery.columns.hostname"
                      - "data.osquery.columns.md5"
                      - "data.osquery.columns.path"
                      - "data.osquery.columns.sha1"
                      - "data.osquery.columns.sha256"
                      - "data.osquery.columns.src_ip"
                      - "data.osquery.columns.user"
                      - "data.osquery.columns.username"
                      - "data.osquery.name"
                      - "data.osquery.pack"
                      - "data.port.process"
                      - "data.port.protocol"
                      - "data.port.state"
                      - "data.process.args"
                      - "data.process.cmd"
                      - "data.process.egroup"
                      - "data.process.euser"
                      - "data.process.fgroup"
                      - "data.process.name"
                      - "data.process.rgroup"
                      - "data.process.ruser"
                      - "data.process.sgroup"
                      - "data.process.state"
                      - "data.process.suser"
                      - "data.program.architecture"
                      - "data.program.description"
                      - "data.program.format"
                      - "data.program.location"
                      - "data.program.multiarch"
                      - "data.program.name"
                      - "data.program.priority"
                      - "data.program.section"
                      - "data.program.source"
                      - "data.program.vendor"
                      - "data.program.version"
                      - "data.protocol"
                      - "data.pwd"
                      - "data.sca"
                      - "data.sca.check.compliance.cis"
                      - "data.sca.check.compliance.cis_csc"
                      - "data.sca.check.compliance.pci_dss"
                      - "data.sca.check.compliance.hipaa"
                      - "data.sca.check.compliance.nist_800_53"
                      - "data.sca.check.description"
                      - "data.sca.check.directory"
                      - "data.sca.check.file"
                      - "data.sca.check.id"
                      - "data.sca.check.previous_result"
                      - "data.sca.check.process"
                      - "data.sca.check.rationale"
                      - "data.sca.check.reason"
                      - "data.sca.check.references"
                      - "data.sca.check.registry"
                      - "data.sca.check.remediation"
                      - "data.sca.check.result"
                      - "data.sca.check.title"
                      - "data.sca.description"
                      - "data.sca.file"
                      - "data.sca.invalid"
                      - "data.sca.name"
                      - "data.sca.policy"
                      - "data.sca.policy_id"
                      - "data.sca.scan_id"
                      - "data.sca.total_checks"
                      - "data.scan_id"
                      - "data.script"
                      - "data.src_ip"
                      - "data.src_port"
                      - "data.srcip"
                      - "data.srcport"
                      - "data.srcuser"
                      - "data.status"
                      - "data.system_name"
                      - "data.title"
                      - "data.tty"
                      - "data.uid"
                      - "data.url"
                      - "data.virustotal.description"
                      - "data.virustotal.error"
                      - "data.virustotal.found"
                      - "data.virustotal.permalink"
                      - "data.virustotal.scan_date"
                      - "data.virustotal.sha1"
                      - "data.virustotal.source.alert_id"
                      - "data.virustotal.source.file"
                      - "data.virustotal.source.md5"
                      - "data.virustotal.source.sha1"
                      - "data.vulnerability.cve"
                      - "data.vulnerability.cvss.cvss2.base_score"
                      - "data.vulnerability.cvss.cvss2.exploitability_score"
                      - "data.vulnerability.cvss.cvss2.impact_score"
                      - "data.vulnerability.cvss.cvss2.vector.access_complexity"
                      - "data.vulnerability.cvss.cvss2.vector.attack_vector"
                      - "data.vulnerability.cvss.cvss2.vector.authentication"
                      - "data.vulnerability.cvss.cvss2.vector.availability"
                      - "data.vulnerability.cvss.cvss2.vector.confidentiality_impact"
                      - "data.vulnerability.cvss.cvss2.vector.integrity_impact"
                      - "data.vulnerability.cvss.cvss2.vector.privileges_required"
                      - "data.vulnerability.cvss.cvss2.vector.scope"
                      - "data.vulnerability.cvss.cvss2.vector.user_interaction"
                      - "data.vulnerability.cvss.cvss3.base_score"
                      - "data.vulnerability.cvss.cvss3.exploitability_score"
                      - "data.vulnerability.cvss.cvss3.impact_score"
                      - "data.vulnerability.cvss.cvss3.vector.access_complexity"
                      - "data.vulnerability.cvss.cvss3.vector.attack_vector"
                      - "data.vulnerability.cvss.cvss3.vector.authentication"
                      - "data.vulnerability.cvss.cvss3.vector.availability"
                      - "data.vulnerability.cvss.cvss3.vector.confidentiality_impact"
                      - "data.vulnerability.cvss.cvss3.vector.integrity_impact"
                      - "data.vulnerability.cvss.cvss3.vector.privileges_required"
                      - "data.vulnerability.cvss.cvss3.vector.scope"
                      - "data.vulnerability.cvss.cvss3.vector.user_interaction"
                      - "data.vulnerability.cwe_reference"
                      - "data.vulnerability.package.source"
                      - "data.vulnerability.package.architecture"
                      - "data.vulnerability.package.condition"
                      - "data.vulnerability.package.generated_cpe"
                      - "data.vulnerability.package.name"
                      - "data.vulnerability.package.version"
                      - "data.vulnerability.rationale"
                      - "data.vulnerability.severity"
                      - "data.vulnerability.status"
                      - "data.vulnerability.title"
                      - "data.vulnerability.assigner"
                      - "data.vulnerability.cve_version"
                      - "data.win.eventdata.auditPolicyChanges"
                      - "data.win.eventdata.auditPolicyChangesId"
                      - "data.win.eventdata.binary"
                      - "data.win.eventdata.category"
                      - "data.win.eventdata.categoryId"
                      - "data.win.eventdata.data"
                      - "data.win.eventdata.image"
                      - "data.win.eventdata.ipAddress"
                      - "data.win.eventdata.ipPort"
                      - "data.win.eventdata.keyName"
                      - "data.win.eventdata.logonGuid"
                      - "data.win.eventdata.logonProcessName"
                      - "data.win.eventdata.operation"
                      - "data.win.eventdata.parentImage"
                      - "data.win.eventdata.processId"
                      - "data.win.eventdata.processName"
                      - "data.win.eventdata.providerName"
                      - "data.win.eventdata.returnCode"
                      - "data.win.eventdata.service"
                      - "data.win.eventdata.status"
                      - "data.win.eventdata.subcategory"
                      - "data.win.eventdata.subcategoryGuid"
                      - "data.win.eventdata.subcategoryId"
                      - "data.win.eventdata.subjectDomainName"
                      - "data.win.eventdata.subjectLogonId"
                      - "data.win.eventdata.subjectUserName"
                      - "data.win.eventdata.subjectUserSid"
                      - "data.win.eventdata.targetDomainName"
                      - "data.win.eventdata.targetLinkedLogonId"
                      - "data.win.eventdata.targetLogonId"
                      - "data.win.eventdata.targetUserName"
                      - "data.win.eventdata.targetUserSid"
                      - "data.win.eventdata.workstationName"
                      - "data.win.system.channel"
                      - "data.win.system.computer"
                      - "data.win.system.eventID"
                      - "data.win.system.eventRecordID"
                      - "data.win.system.eventSourceName"
                      - "data.win.system.keywords"
                      - "data.win.system.level"
                      - "data.win.system.message"
                      - "data.win.system.opcode"
                      - "data.win.system.processID"
                      - "data.win.system.providerGuid"
                      - "data.win.system.providerName"
                      - "data.win.system.securityUserID"
                      - "data.win.system.severityValue"
                      - "data.win.system.userID"
                      - "decoder.ftscomment"
                      - "decoder.name"
                      - "decoder.parent"
                      - "full_log"
                      - "host"
                      - "id"
                      - "input"
                      - "location"
                      - "manager.name"
                      - "message"
                      - "offset"
                      - "predecoder.hostname"
                      - "predecoder.program_name"
                      - "previous_log"
                      - "previous_output"
                      - "program_name"
                      - "rule.cis"
                      - "rule.cve"
                      - "rule.description"
                      - "rule.gdpr"
                      - "rule.gpg13"
                      - "rule.groups"
                      - "rule.id"
                      - "rule.info"
                      - "rule.mitre.id"
                      - "rule.mitre.tactic"
                      - "rule.mitre.technique"
                      - "rule.pci_dss"
                      - "rule.hipaa"
                      - "rule.nist_800_53"
                      - "syscheck.audit.effective_user.id"
                      - "syscheck.audit.effective_user.name"
                      - "syscheck.audit.group.id"
                      - "syscheck.audit.group.name"
                      - "syscheck.audit.login_user.id"
                      - "syscheck.audit.login_user.name"
                      - "syscheck.audit.process.id"
                      - "syscheck.audit.process.name"
                      - "syscheck.audit.process.ppid"
                      - "syscheck.audit.user.id"
                      - "syscheck.audit.user.name"
                      - "syscheck.diff"
                      - "syscheck.event"
                      - "syscheck.gid_after"
                      - "syscheck.gid_before"
                      - "syscheck.gname_after"
                      - "syscheck.gname_before"
                      - "syscheck.inode_after"
                      - "syscheck.inode_before"
                      - "syscheck.md5_after"
                      - "syscheck.md5_before"
                      - "syscheck.path"
                      - "syscheck.mode"
                      - "syscheck.perm_after"
                      - "syscheck.perm_before"
                      - "syscheck.sha1_after"
                      - "syscheck.sha1_before"
                      - "syscheck.sha256_after"
                      - "syscheck.sha256_before"
                      - "syscheck.tags"
                      - "syscheck.uid_after"
                      - "syscheck.uid_before"
                      - "syscheck.uname_after"
                      - "syscheck.uname_before"
                      - "syscheck.arch"
                      - "syscheck.value_name"
                      - "syscheck.value_type"
                      - "syscheck.changed_attributes"
                      - "title"
                creation_date: "1740822568074"
                number_of_replicas: "0"
                uuid: "Fy7I0m2MSEy6HbNxm0rdGg"
                version:
                  created: "136377827"

    GetSettingsBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.01], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.01"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.01], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.01"
              index_uuid: "_na_"
            status: 400

    GetSettingsNotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
          example:
            error:
              root_cause:
                - type: "index_not_found_exception"
                  reason: "no such index [wazuh-alerts-4.x-2025.03.10]"
                  index: "wazuh-alerts-4.x-2025.03.10"
                  resource.id: "wazuh-alerts-4.x-2025.03.10"
                  resource.type: "index_or_alias"
                  index_uuid: "_na_"
              type: "index_not_found_exception"
              reason: "no such index [wazuh-alerts-4.x-2025.03.10]"
              index: "wazuh-alerts-4.x-2025.03.10"
              resource.id: "wazuh-alerts-4.x-2025.03.10"
              resource.type: "index_or_alias"
              index_uuid: "_na_"
            status: 404

    OpenIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShardsAcknowledgedResponse'
          example:
            acknowledged: true
            shards_acknowledged: true

    OpenIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    RefreshIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ShardsResponse'
          example:
            _shards:
              total: 3
              successful: 3
              failed: 0

    RefreshIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.14"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.14], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.14"
              index_uuid: "_na_"
            status: 400

    RolloverIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              acknowledged:
                type: boolean
                description: |
                  Indicates whether the rollover request was acknowledged by all involved nodes.
              shards_acknowledged:
                type: boolean
                description: |
                  Indicates whether the shards of the newly created index were successfully started and acknowledged.
              old_index:
                type: string
                description: |
                  The name of the current write index before the rollover attempt.
              new_index:
                type: string
                description: |
                  The name that would be assigned to the new index if rollover had occurred.
              rolled_over:
                type: boolean
                description: |
                  Indicates whether the rollover actually took place.
              dry_run:
                type: boolean
                description: |
                  Indicates whether the request was a dry run (i.e., simulated without executing).
              conditions:
                type: object
                description: |
                  Shows the evaluation of each rollover condition.
          example:
            acknowledged: false
            shards_acknowledged: false
            old_index: "sample_index-000001"
            new_index: "sample_index-000002"
            rolled_over: false
            dry_run: false
            conditions:
              "[max_age: 5d]": false
              "[max_docs: 10]": true

    RolloverIndexBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "rollover target [sample-alias1] does not point to a write index"
              type: "illegal_argument_exception"
              reason: "rollover target [sample-alias1] does not point to a write index"
            status: 400

    IndexExistsSuccess:
      description: Success
      content:
        text/plain:
          schema:
            type: string
            description: |
              Indicates the index exists.
          example: 200 - true

    IndexExistsNotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                description: |
                  The HTTP status code returned by the API. `404` indicates that the requested resource (in this case, likely an index) was not found.
              error:
                type: string
                description: |
                  A brief description of the HTTP error. In this case, `"Not Found"` indicates the index does not exist.
              message:
                type: string
                description: |
                  A more verbose message combining the status code and a boolean-like indication (`false`) showing that the resource (e.g., index) is not available. This can vary slightly depending on the client or wrapper used.
          example:
            statusCode: 404
            error: "Not Found"
            message: "404 - false"

    SegmentSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsResponse'
              - type: object
                properties:
                  indices:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        shards:
                          type: object
                          additionalProperties:
                            type: array
                            items:
                              type: object
                              properties:
                                routing:
                                  type: object
                                  properties:
                                    state:
                                      type: string
                                    primary:
                                      type: boolean
                                    node:
                                      type: string
                                num_committed_segments:
                                  type: integer
                                num_search_segments:
                                  type: integer
                                segments:
                                  type: object
                                  additionalProperties:
                                    type: object
                                    properties:
                                      generation:
                                        type: integer
                                        description: |
                                          Represents the generation number, which increases with each written segment and is used in naming it.
                                      num_docs:
                                        type: integer
                                        description: |
                                          The count of documents in the segment, based on Lucene data. This count treats nested documents separately from parent documents. Deleted documents and newly indexed ones not yet assigned to a segment are not included.
                                      deleted_docs:
                                        type: integer
                                        description: |
                                          The number of deleted documents as reported by Lucene. This value may differ from the actual delete operations performed. It excludes documents not yet added to a segment. The Wazuh indexer may also remove additional documents for shard operation tracking.
                                      size_in_bytes:
                                        type: integer
                                        description: |
                                          Indicates the amount of disk space used by the segment, such as 50kb.
                                      memory_in_bytes:
                                        type: integer
                                        description: |
                                          The memory (in bytes) used by the segment for search efficiency. A value of `-1` means the Wazuh indexer could not determine the exact size.
                                      committed:
                                        type: boolean
                                        description: |
                                          If `true`, the segment has been committed (synced) to disk and can survive restarts.  If `false`, its data remains in the transaction log for replay on next startup.

                                      search:
                                        type: boolean
                                        description: |
                                          If `true`, the segment is searchable. If `false`, the segment may be written to disk but requires a refresh to become searchable.
                                      version:
                                        type: string
                                        description: |
                                          The Lucene version that was used to write the segment.
                                      compound:
                                        type: boolean
                                        description: |
                                          If `true`, Lucene has combined all the segment's files into a single compound file to reduce the number of file descriptors..
                                      attributes:
                                        type: object
                                        description: |
                                          Displays segment-level attributes, such as whether high compression is enabled.
          example:
            _shards:
              total: 3
              successful: 3
              failed: 0
            indices:
              "wazuh-alerts-4.x-2025.03.11":
                shards:
                  "0":
                    - routing:
                        state: "STARTED"
                        primary: true
                        node: "xDC5NqstQh2alB_BedjVmw"
                      num_committed_segments: 6
                      num_search_segments: 6
                      segments:
                        "_0":
                          generation: 0
                          num_docs: 6
                          deleted_docs: 0
                          size_in_bytes: 69868
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_1":
                          generation: 1
                          num_docs: 65
                          deleted_docs: 0
                          size_in_bytes: 178972
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_2":
                          generation: 2
                          num_docs: 58
                          deleted_docs: 0
                          size_in_bytes: 164043
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_3":
                          generation: 3
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 28541
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_4":
                          generation: 4
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 21329
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_5":
                          generation: 5
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 17905
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                  "1":
                    - routing:
                        state: "STARTED"
                        primary: true
                        node: "xDC5NqstQh2alB_BedjVmw"
                      num_committed_segments: 4
                      num_search_segments: 4
                      segments:
                        "_8":
                          generation: 8
                          num_docs: 64
                          deleted_docs: 0
                          size_in_bytes: 195970
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_b":
                          generation: 11
                          num_docs: 80
                          deleted_docs: 0
                          size_in_bytes: 268568
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: false
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_c":
                          generation: 12
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 13974
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_d":
                          generation: 13
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 14623
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                  "2":
                    - routing:
                        state: "STARTED"
                        primary: true
                        node: "xDC5NqstQh2alB_BedjVmw"
                      num_committed_segments: 9
                      num_search_segments: 9
                      segments:
                        "_0":
                          generation: 0
                          num_docs: 2
                          deleted_docs: 0
                          size_in_bytes: 39942
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_1":
                          generation: 1
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 18069
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_2":
                          generation: 2
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 13337
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_3":
                          generation: 3
                          num_docs: 53
                          deleted_docs: 0
                          size_in_bytes: 156303
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_4":
                          generation: 4
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 17119
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_5":
                          generation: 5
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 15529
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_6":
                          generation: 6
                          num_docs: 65
                          deleted_docs: 0
                          size_in_bytes: 179630
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_7":
                          generation: 7
                          num_docs: 7
                          deleted_docs: 0
                          size_in_bytes: 49760
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"
                        "_8":
                          generation: 8
                          num_docs: 1
                          deleted_docs: 0
                          size_in_bytes: 14137
                          memory_in_bytes: 0
                          committed: true
                          search: true
                          version: "9.11.1"
                          compound: true
                          attributes:
                            "Lucene90StoredFieldsFormat.mode": "BEST_SPEED"

    SegmentBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "invalid_index_name_exception"
                  reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.11], must not start with '_'."
                  index: "_wazuh-alerts-4.x-2025.03.11"
                  index_uuid: "_na_"
              type: "invalid_index_name_exception"
              reason: "Invalid index name [_wazuh-alerts-4.x-2025.03.11], must not start with '_'."
              index: "_wazuh-alerts-4.x-2025.03.11"
              index_uuid: "_na_"
            status: 400

    ShrinkIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  index:
                    type: string
                    description: |
                      The name of the newly created index from the shrink operation.
          example:
            acknowledged: true
            shards_acknowledged: true
            index: "wazuh-alerts-4.x-2025.03.14"

    ShrinkIndexBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexErrorResponse'
          example:
            error:
              root_cause:
                - type: "resource_already_exists_exception"
                  reason: "index [wazuh-alerts-4.x-2025.03.11/_3bNKqwLQxqAZXxr1D3SQA] already exists"
                  index: "wazuh-alerts-4.x-2025.03.11"
                  index_uuid: "_3bNKqwLQxqAZXxr1D3SQA"
              type: "resource_already_exists_exception"
              reason: "index [wazuh-alerts-4.x-2025.03.11/_3bNKqwLQxqAZXxr1D3SQA] already exists"
              index: "wazuh-alerts-4.x-2025.03.11"
              index_uuid: "_3bNKqwLQxqAZXxr1D3SQA"
            status: 400

    SplitIndexSuccess:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ShardsAcknowledgedResponse'
              - type: object
                properties:
                  index:
                    type: string
                    description: |
                      The name of the new index that was created as a result of the split operation.
          example:
            acknowledged: true
            shards_acknowledged: true
            index: "wazuh-alerts-4.x-2025.02.16"

    SplitIndexBadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "the number of source shards [3] must be a factor of [4]"
              type: "illegal_argument_exception"
              reason: "the number of source shards [3] must be a factor of [4]"
            status: 400

  schemas:
    # Common error response structure
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  reason:
                    type: string
            type:
              type: string
            reason:
              type: string
        status:
          type: integer

    # Error response with index and index_uuid fields
    IndexErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ErrorResponse'
        - type: object
          properties:
            error:
              type: object
              properties:
                root_cause:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      reason:
                        type: string
                      index:
                        type: string
                      index_uuid:
                        type: string
                index:
                  type: string
                index_uuid:
                  type: string

    # Common success response structure
    AcknowledgedResponse:
      type: object
      properties:
        acknowledged:
          type: boolean
          description: |
            Indicates whether the request was successfully received and processed by the cluster.

    # Success response with shards_acknowledged
    ShardsAcknowledgedResponse:
      allOf:
        - $ref: '#/components/schemas/AcknowledgedResponse'
        - type: object
          properties:
            shards_acknowledged:
              type: boolean
              description: |
                Confirms that all primary and replica shards acknowledged the operation.

    # Common shards response structure
    ShardsResponse:
      type: object
      properties:
        _shards:
          type: object
          properties:
            total:
              type: integer
              description: |
                The total number of shards involved in the request.
            successful:
              type: integer
              description: |
                The number of shards where the operation was completed successfully.
            failed:
              type: integer
              description: |
                The number of shards where the operation failed.

    RecoveryResponse:
      type: object
      description: |
        Recovery information for indexes and their shards.
      additionalProperties:
        type: object
        properties:
          shards:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  description: |
                    A unique identifier assigned to the shard undergoing recovery.
                type:
                  type: string
                  description: |
                    Describes the recovery source. The possible values includes:

                    - `EMPTY_STORE`: A new or forcibly allocated empty primary shard via Cluster Reroute API.
                    - `EXISTING_STORE`: Recovery from a previously existing primary shard, often after node startup.
                    - `LOCAL_SHARDS`: Recovery from another index on the same node, such as during clone, shrink, or split.
                    - `PEER`: Recovery from a primary shard on another node (replication).
                    - `SNAPSHOT`: Recovery from a snapshot.
                  enum: [EMPTY_STORE, EXISTING_STORE, LOCAL_SHARDS, PEER, SNAPSHOT]
                stage:
                  type: string
                  description: |
                    Indicates the current stage of recovery. The possible values includes:

                    - `INIT`: Recovery has not started.
                    - `INDEX`: Index metadata is read and data is copied.
                    - `VERIFY_INDEX`: Index integrity check.
                    - `TRANSLOG`: Transaction log is replayed.
                    - `FINALIZE`: Final cleanup tasks.
                    - `DONE`: Recovery is complete
                  enum: [INIT, INDEX, VERIFY_INDEX, TRANSLOG, FINALIZE, DONE]
                primary:
                  type: boolean
                  description: |
                    Specifies whether the shard being recovered is a primary shard.
                start_time:
                  type: string
                  format: date-time
                  description: |
                    Timestamp showing when the shard recovery started.
                start_time_in_millis:
                  type: integer
                stop_time:
                  type: string
                  format: date-time
                  description: |
                    Timestamp showing when the shard recovery completed.
                stop_time_in_millis:
                  type: integer
                total_time:
                  type: string
                total_time_in_millis:
                  type: integer
                  description: |
                    Total time taken for recovery, measured in milliseconds.
                source:
                  type: object
                  description: |
                    Information about the recovery source, such as node or repository details.
                target:
                  type: object
                  description: |
                    Information about the node receiving the shard during recovery.
                  properties:
                    id:
                      type: string
                    host:
                      type: string
                    transport_address:
                      type: string
                    ip:
                      type: string
                    name:
                      type: string
                index:
                  type: object
                  description: |
                    Statistics related to the index-level recovery, including file and byte-level details.
                  properties:
                    size:
                      type: object
                      properties:
                        total:
                          type: string
                        total_in_bytes:
                          type: integer
                        reused:
                          type: string
                        reused_in_bytes:
                          type: integer
                        recovered:
                          type: string
                        recovered_in_bytes:
                          type: integer
                        percent:
                          type: string
                    files:
                      type: object
                      properties:
                        total:
                          type: integer
                        reused:
                          type: integer
                        recovered:
                          type: integer
                        percent:
                          type: string
                    total_time:
                      type: string
                    total_time_in_millis:
                      type: integer
                    source_throttle_time:
                      type: string
                    source_throttle_time_in_millis:
                      type: integer
                    target_throttle_time:
                      type: string
                    target_throttle_time_in_millis:
                      type: integer
                translog:
                  type: object
                  description: |
                    Contains metrics on transaction log replay during recovery.
                  properties:
                    recovered:
                      type: integer
                    total:
                      type: integer
                    percent:
                      type: string
                    total_on_start:
                      type: integer
                    total_time:
                      type: string
                    total_time_in_millis:
                      type: integer
                verify_index:
                  type: object
                  description: |
                    Reports on the time taken to initialize and start the index.
                  properties:
                    check_index_time:
                      type: string
                    check_index_time_in_millis:
                      type: integer
                    total_time:
                      type: string
                    total_time_in_millis:
                      type: integer

    TemplateStructure:
      type: object
      description: |
        Contains the actual template definition, including aliases, mappings, and settings.
      properties:
        settings:
          type: object
        mappings:
          type: object
        aliases:
          type: object
          description: |
            Defines one or more aliases to associate with indexes created by this template. This field is required when the template option is present. Aliases act as alternate names and can include filters or routing settings.
          additionalProperties:
            type: object
            description: |
              The alias object can include the following optional parameters.
            properties:
              filter:
                type: object
                description: |
                  A DSL query that restricts which documents are accessible through the alias.
              index_routing:
                type: string
                description: |
                  Defines the routing value specifically for indexing operations. If provided, it overrides any general routing value for indexing.
              is_hidden:
                type: boolean
                description: |
                  If set to `true`, the alias is hidden. All indexes associated with the alias must have the same setting for this parameter.
                default: false
              is_write_index:
                type: boolean
                description: |
                  Specifies whether the index is the write index for the alias.
                default: false
              routing:
                type: string
                description: |
                  Sets a custom routing value used for both indexing and searching operations.
              search_routing:
                type: string
                description: |
                  A value that routes search operations to a specific shard. If specified, it overrides the general routing setting for searches.

    SettingsResponse:
      type: object
      description: |
        Contains all configuration settings for an index.
      properties:
        settings:
          type: object
          description: |
            The settings for the index.
          additionalProperties:
            type: string
            description: |
              The value of the setting.

    NotFoundResponse:
      type: object
      description: |
        Standard error response for resource not found scenarios.
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  reason:
                    type: string
                  index:
                    type: string
                  resource.id:
                    type: integer
                  resource.type:
                    type: string
                  index_uuid:
                    type: string
            type:
              type: string
            reason:
              type: string
            index:
              type: string
            resource.id:
              type: integer
            resource.type:
              type: string
            index_uuid:
              type: string
        status:
          type: integer