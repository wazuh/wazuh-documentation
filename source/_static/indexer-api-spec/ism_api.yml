paths:
  /_plugins/_ism/policies/{policy_id}:
    put:
      tags:
        - Index state management API
      summary: Create policy
      description: This API operation creates a policy.
      operationId: createPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: A unique identifier used to reference the policy being created.
          schema:
            type: string
          example: "policy_1"
        - name: if_seq_no
          in: query
          description: Performs the operation only if the policy has the specified sequence number.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          description: Performs the operation only if the policy has the specified primary term.
          schema:
            type: integer
        - name: refresh
          in: query
          description: Specifies if the affected shards should be refreshed.
          schema:
            type: string
            enum: ["true", "false", "wait_for"]
            default: "false"
        - $ref: 'spec.yml#/components/parameters/pretty'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequest'
            example:
              policy:
                description: "ingesting logs"
                default_state: "ingest"
                states:
                  - name: "ingest"
                    actions:
                      - rollover:
                          min_doc_count: 5
                    transitions:
                      - state_name: "search"
                  - name: "search"
                    actions: []
                    transitions:
                      - state_name: "delete"
                        conditions:
                          min_index_age: "5m"
                  - name: "delete"
                    actions:
                      - delete: {}
                    transitions: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
              example:
                _id: "policy_1"
                _version: 1
                _primary_term: 8
                _seq_no: 140840
                policy:
                  policy:
                    policy_id: "policy_1"
                    description: "ingesting logs"
                    last_updated_time: 1744640873889
                    schema_version: 1
                    error_notification: null
                    default_state: "ingest"
                    states:
                      - name: "ingest"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            rollover:
                              min_doc_count: 5
                              copy_alias: false
                        transitions:
                          - state_name: "search"
                      - name: "search"
                        actions: []
                        transitions:
                          - state_name: "delete"
                            conditions:
                              min_index_age: "5m"
                      - name: "delete"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            delete: {}
                        transitions: []
                    ism_template: null
        '400':
          $ref: '#/components/responses/PolicyBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/VersionConflict'

    get:
      tags:
        - Index state management API
      summary: Get policy
      description: Retrieves a policy using its `policy_id`.
      operationId: getPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: The unique identifier of the policy. It is required to retrieve a specific policy.
          schema:
            type: string
          example: "policy_1"
        - $ref: 'spec.yml#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
              example:
                _id: "policy_1"
                _version: 2
                _seq_no: 144943
                _primary_term: 8
                policy:
                  policy_id: "policy_1"
                  description: "ingesting logs"
                  last_updated_time: 1744701144668
                  schema_version: 21
                  error_notification: null
                  default_state: "ingest"
                  states:
                    - name: "ingest"
                      actions:
                        - retry:
                            count: 3
                            backoff: "exponential"
                            delay: "1m"
                          rollover:
                            min_doc_count: 5
                            copy_alias: false
                      transitions:
                        - state_name: "search"
                    - name: "search"
                      actions: []
                      transitions:
                        - state_name: "delete"
                          conditions:
                            min_index_age: "5m"
                    - name: "delete"
                      actions:
                        - retry:
                            count: 3
                            backoff: "exponential"
                            delay: "1m"
                          delete: {}
                      transitions: []
                  ism_template: null
        '400':
          $ref: '#/components/responses/PolicyBadRequestGet'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/PolicyNotFoundGet'

    delete:
      tags:
        - Index state management API
      summary: Delete policy
      description: This deletes the policy using the `policy_id`.
      operationId: deletePolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: The unique identifier of the ISM policy that you want to delete. This ID is required and must match the policy you previously created or applied to an index.
          schema:
            type: string
          example: "policy_1"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePolicyResponse'
              example:
                _index: ".opendistro-ism-config"
                _id: "policy_5"
                _version: 2
                result: "deleted"
                forced_refresh: true
                _shards:
                  total: 2
                  successful: 1
                  failed: 0
                _seq_no: 164481
                _primary_term: 9
        '400':
          $ref: '#/components/responses/PolicyBadRequestDelete'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/PolicyNotFoundDelete'

  /_plugins/_ism/add/{index}:
    post:
      tags:
        - Index state management API
      summary: Add policy
      description: |
        This API operation associates a policy with an index. If the index already has a policy, this operation does not modify it.

        If you use a wildcard `*` while adding a policy to an index, the ISM plugin interprets `*` as all indexes, including system indexes like `.opendistro-security`, which stores users, roles, and tenants. A delete action in your policy might accidentally delete all user roles and tenants in your cluster. Don't use the broad `*` wildcard, and instead add a prefix, such as `my-logs*`, when specifying indexes with the `_ism/add` API.
      operationId: addPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index (or a comma-separated list of indexes) to which the ISM policy should be applied.
          schema:
            type: string
          example: "wazuh-alerts-4.x-2025.03.12"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPolicyRequest'
            example:
              policy_id: "policy_1"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPolicyResponse'
              example:
                updated_indices: 1
                failures: false
                failed_indices: []
        '400':
          $ref: '#/components/responses/PolicyBadRequest'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/PolicyNotFound'

  /_plugins/_ism/policies/{policy_id}?if_seq_no={value}&if_primary_term={value}:
    put:
      tags:
        - Index state management API
      summary: Update policy
      description: |
        This API operation updates an existing policy. To perform this update, you must include the `seq_no` and `primary_term` parameters. If these values don't match the current policy version or the policy doesn't exist, Index State Management (ISM) will return an error.
      operationId: updatePolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: policy_id
          in: path
          required: true
          description: The unique identifier of the policy to update.
          schema:
            type: string
          example: "policy_1"
        - name: if_seq_no
          in: query
          required: true
          description: The sequence number for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          required: true
          description: The primary term for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - $ref: 'spec.yml#/components/parameters/pretty'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyRequestUpdate'
            example:
              policy:
                description: "ingesting logs"
                default_state: "ingest"
                states:
                  - name: "ingest"
                    actions:
                      - rollover:
                          min_doc_count: 5
                    transitions:
                      - state_name: "search"
                  - name: "search"
                    actions: []
                    transitions:
                      - state_name: "delete"
                        conditions:
                          min_index_age: "5m"
                  - name: "delete"
                    actions:
                      - delete: {}
                    transitions: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyResponse'
              example:
                _id: "policy_1"
                _version: 2
                _primary_term: 8
                _seq_no: 144943
                policy:
                  policy:
                    policy_id: "policy_1"
                    description: "ingesting logs"
                    last_updated_time: 1744701144668
                    schema_version: 1
                    error_notification: null
                    default_state: "ingest"
                    states:
                      - name: "ingest"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            rollover:
                              min_doc_count: 5
                              copy_alias: false
                        transitions:
                          - state_name: "search"
                      - name: "search"
                        actions: []
                        transitions:
                          - state_name: "delete"
                            conditions:
                              min_index_age: "5m"
                      - name: "delete"
                        actions:
                          - retry:
                              count: 3
                              backoff: "exponential"
                              delay: "1m"
                            delete: {}
                        transitions: []
                    ism_template: null
        '400':
          $ref: '#/components/responses/PolicyBadRequestUpdate'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/VersionConflictUpdate'

  /_plugins/_ism/remove/{index}:
    post:
      tags:
        - Index state management API
      summary: Remove policy from index
      description: Removes any Index State Management (ISM) policy currently associated with an index.
      operationId: removePolicyFromIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index from which to remove the ISM policy.
          schema:
            type: string
          example: "wazuh-alerts-4.x-2025.03.12"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemovePolicyResponse'
              example:
                updated_indices: 1
                failures: false
                failed_indices: []
        '400':
          $ref: '#/components/responses/PolicyBadRequestRemove'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/PolicyNotFoundRemove'

  /_plugins/_ism/change_policy/{index}:
    post:
      tags:
        - Index state management API
      summary: Update managed index policy
      description: |
        Update the managed index policy to a new policy or a new version of an existing one. This update can be applied to multiple indexes at once using an index pattern. To ensure the update targets only specific managed indexes, a state filter can be included. This filter limits the update to indexes currently in the specified state. It's also possible to define the state that the managed index transitions to after the policy change takes effect.

        Policy changes are handled as asynchronous background processes and are not executed immediately. This delay prevents disruptions to currently running managed indexes. If the new policy introduces minor configuration adjustments such as changing the `min_index_age` in a rollover condition from `1000d` to `100d`, the change is applied during the index's next execution. However, if the update alters the current state, its actions, or the order of actions, the changes are applied only after the current state completes and before transitioning to a new one.

        For example, changing the policy on `wazuh-alerts-4.x-2025.03.11` to `policy_1` (either a new or updated version) will only take place if `wazuh-alerts-4.x-2025.03.11` is in the `searches` state. Once the policy is updated, the index will transition to the `delete` state.
      operationId: updateManagedIndexPolicy
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index or a comma-separated list of index names to which the policy change should be applied. You can also use wildcard expressions (e.g., `wazuh-alerts-4.x-*`) to target multiple indexes.
          schema:
            type: string
          example: "wazuh-alerts-4.x-2025.03.12"
        - name: if_seq_no
          in: query
          description: The sequence number for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - name: if_primary_term
          in: query
          description: The primary term for optimistic concurrency control. This field is required to update an existing policy.
          schema:
            type: integer
        - $ref: 'spec.yml#/components/parameters/pretty'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePolicyRequest'
            example:
              policy_id: "policy_1"
              state: "delete"
              include:
                - state: "searches"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePolicyResponse'
              example:
                updated_indices: 1
                failures: false
                failed_indices: []
        '400':
          description: Response to report a bad request
          content:
            application/json:
              schema:
                $ref: 'spec.yml#/components/schemas/SecurityError'
              example:
                error:
                  root_cause:
                    - type: "illegal_argument_exception"
                      reason: "ChangePolicy policy id is null"
                  type: "illegal_argument_exception"
                  reason: "ChangePolicy policy id is null"
                status: 400
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          description: Response to report a request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexNotFoundException'
              example:
                error:
                  root_cause:
                    - type: "index_not_found_exception"
                      reason: "no such index [wazuh-alerts-4.x-2025.03.40]"
                      index: "wazuh-alerts-4.x-2025.03.40"
                      resource.id: "wazuh-alerts-4.x-2025.03.40"
                      resource.type: "index_or_alias"
                      index_uuid: "_na_"
                  type: "index_not_found_exception"
                  reason: "no such index [wazuh-alerts-4.x-2025.03.40]"
                  index: "wazuh-alerts-4.x-2025.03.40"
                  resource.id: "wazuh-alerts-4.x-2025.03.40"
                  resource.type: "index_or_alias"
                  index_uuid: "_na_"
                status: 404

  /_plugins/_ism/retry/{index}:
    post:
      tags:
        - Index state management API
      summary: Retry failed index
      description: |
        To successfully perform a retry, the index must be managed by ISM and must currently be in a failed state.
        Wildcard patterns (`*`) can be used to target and retry multiple failed indexes simultaneously.
      operationId: retryFailedIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: |
            The name of the index or a comma-separated list of index names for which to retry failed actions.
            You can also use wildcard expressions (e.g., `wazuh-alerts-4.x-*`) to target multiple indexes.
          schema:
            type: string
          example: "wazuh-alerts-4.x-2025.03.12"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                state:
                  type: string
                  description: |
                    Specifies the name of the state where the retry should be applied.
                    If not provided, the retry is applied to the current failed state.
            example:
              state: "delete"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetryFailedIndexResponse'
              example:
                updated_indices: 0
                failures: false
                failed_indices: []
        '400':
          $ref: '#/components/responses/PolicyBadRequestRemove'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/PolicyNotFoundRemove'

  /_plugins/_ism/explain/{index}:
    get:
      tags:
        - Index state management API
      summary: Explain index
      description: The Explain index API retrieves the current state of an index. It supports the use of index patterns to obtain the status of multiple indexes simultaneously.
      operationId: explainIndex
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: Specifies the name of the index or index pattern whose ISM (Index State Management) status should be retrieved. You can also use wildcard expressions (e.g., `wazuh-alerts-4.x-*`) to target multiple indexes.
          schema:
            type: string
        - $ref: 'spec.yml#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplainIndexResponse'
              example:
                "wazuh-alerts-4.x-2025.03.36":
                  "index.plugins.index_state_management.policy_id": "policy_1"
                  "index.opendistro.index_state_management.policy_id": "policy_1"
                  index: "wazuh-alerts-4.x-2025.03.36"
                  index_uuid: "1GkrhBwOQA-2I-Giq0ul9A"
                  policy_id: "policy_1"
                  policy_seq_no: 144943
                  policy_primary_term: 8
                  rolled_over: false
                  index_creation_date: 1742532571328
                  state:
                    name: "ingest"
                    start_time: 1745214419126
                  action:
                    name: "rollover"
                    start_time: 1745214828297
                    index: 0
                    failed: true
                    consumed_retries: 3
                    last_retry_time: 1745215466654
                  step:
                    name: "attempt_rollover"
                    start_time: 1745214828297
                    step_status: "failed"
                  retry_info:
                    failed: false
                    consumed_retries: 0
                  info:
                    message: "Missing rollover_alias index setting [index=wazuh-alerts-4.x-2025.03.36]"
                  enabled: false
                total_managed_indices: 1
        '400':
          $ref: '#/components/responses/PolicyBadRequestExplain'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'

  /_plugins/_ism/explain/{index}?validate_action={value}:
    get:
      tags:
        - ISM error prevention API
      summary: Explain index with validation
      description: |
        To enable error prevention validation, set the `plugins.index_state_management.action_validation.enabled` setting to `true`:

        ```json
        PUT _cluster/settings
        {
          "persistent":{
            "plugins.index_state_management.action_validation.enabled": "true"
          }
        }
        ```

        The response should be as below:

        ```json
        {
          "acknowledged": true,
          "persistent": {
            "plugins": {
              "index_state_management": {
                "action_validation": {
                  "enabled": "true"
                }
              }
            }
          },
          "transient": {}
        }
        ```

        To check an error prevention validation status and message, pass `validate_action=true` to the `_plugins/_ism/explain` endpoint.
      operationId: explainIndexWithValidation
      security:
        - basicAuth: []
        - jwtAuth: []
      parameters:
        - name: index
          in: path
          required: true
          description: The name of the index you want to retrieve the ISM explanation details. You can also use index patterns (`wazuh-alerts-4.x-*`) to retrieve information for multiple indexes.
          schema:
            type: string
          example: "wazuh-alerts-4.x-2025.03.16"
        - name: validate_action
          in: query
          description: When set to true, this parameter checks whether the current action in the ISM policy for the specified index is valid and free of configuration issues.
          schema:
            type: boolean
        - $ref: 'spec.yml#/components/parameters/pretty'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplainIndexResponse'
              example:
                "wazuh-alerts-4.x-2025.03.22":
                  "index.plugins.index_state_management.policy_id": "policy_15"
                  "index.opendistro.index_state_management.policy_id": "policy_15"
                  index: "wazuh-alerts-4.x-2025.03.22"
                  index_uuid: "GbPjnHpgTiivnQRY_wCJ1g"
                  policy_id: "policy_15"
                  policy_seq_no: 161427
                  policy_primary_term: 9
                  rolled_over: false
                  index_creation_date: 1742198911410
                  state:
                    name: "ingest"
                    start_time: 1745215282309
                  action:
                    name: "rollover"
                    start_time: 1745217086031
                    index: 0
                    failed: true
                    consumed_retries: 3
                    last_retry_time: 1745217814683
                  step:
                    name: "attempt_rollover"
                    start_time: 1745217086031
                    step_status: "failed"
                  retry_info:
                    failed: false
                    consumed_retries: 0
                  info:
                    message: "Missing rollover_alias index setting [index=wazuh-alerts-4.x-2025.03.22]"
                  enabled: false
                  validate:
                    validation_message: "Missing rollover_alias index setting [index=wazuh-alerts-4.x-2025.03.22]"
                    validation_status: "re_validating"
                total_managed_indices: 1
        '400':
          $ref: '#/components/responses/PolicyBadRequestExplain'
        '401':
          $ref: 'spec.yml#/components/responses/Unauthorized'
        '403':
          $ref: 'spec.yml#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/PolicyNotFound'
components:
  schemas:
    PolicyRequestBase:
      type: object
      required:
        - policy
      properties:
        policy:
          type: object
          description: The policy definition that includes policy metadata, description, default state, and the states.
          required:
            - description
            - default_state
            - states
          properties:
            description:
              type: string
              description: A human-readable description of the policy
            default_state:
              type: string
              description: The initial state to apply when the policy is first assigned to an index
            states:
              type: array
              description: A list of states that define the lifecycle behavior
              items:
                $ref: '#/components/schemas/PolicyState'
            schema_version:
              type: integer
              description: The schema version number used for internal tracking of policy changes

    PolicyRequest:
      allOf:
        - $ref: '#/components/schemas/PolicyRequestBase'
        - type: object
          properties:
            policy:
              type: object
              properties:
                last_updated_time:
                  type: integer
                  format: int64
                  description: Timestamp in ms of the last update to the policy. This is typically set automatically and does not need to be included in requests.

    PolicyRequestUpdate:
      allOf:
        - $ref: '#/components/schemas/PolicyRequestBase'
        - type: object
          properties:
            policy:
              type: object
              properties:
                error_notification:
                  type: object
                  description: A Mustache template used to send notifications if the policy fails.
                ism_template:
                  type: object
                  description: Defines index patterns that automatically bind this policy to new indexes.

    PolicyState:
      type: object
      required:
        - name
        - actions
        - transitions
      properties:
        name:
          type: string
          description: The name of the state
        actions:
          type: array
          description: List of actions like `rollover`, `delete`, `read_only`, etc.
          items:
            type: object
        transitions:
          type: array
          description: List of transitions to other states, optionally based on conditions. (e.g., `min_index_age`).
          items:
            type: object
            properties:
              state_name:
                type: string
              conditions:
                type: object

    PolicyResponse:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the policy.
        _version:
          type: integer
          description: The version number of the policy, incremented on each update.
        _primary_term:
          type: integer
          description: The primary term used for optimistic concurrency control within the Wazuh indexer.
        _seq_no:
          type: integer
          description: The sequence number for internal versioning.  This helps manage updates and conflict resolution.
        policy:
          type: object
          properties:
            policy:
              type: object
              properties:
                policy_id:
                  type: string
                  description: The identifier of the policy.
                description:
                  type: string
                  description: A description of what the policy is for (e.g., "ingesting logs").
                last_updated_time:
                  type: integer
                  format: int64
                  description: Timestamp in ms of the last time the policy was updated.
                schema_version:
                  type: integer
                  description: Schema version of the policy definition.
                error_notification:
                  type: object
                  nullable: true
                  description: Optional field for setting up notifications (e.g., email or webhook) on policy errors.
                default_state:
                  type: string
                  description: The name of the state where the policy begins.
                states:
                  type: array
                  description: A list of lifecycle states the index will pass through.
                  items:
                    $ref: '#/components/schemas/PolicyState'
                ism_template:
                  type: object
                  nullable: true
                  description: Defines index templates to which this policy applies. `null` means no automatic binding to templates.

    AddPolicyRequest:
      type: object
      required:
        - policy_id
      properties:
        policy_id:
          type: string
          description: The ID of the Index State Management (ISM) policy to attach to the index.
        rollover_alias:
          type: string
          description: The alias used for rollover operations.
        is_manual:
          type: boolean
          description: Indicates whether the policy is manually managed. When set to `true`, the policy is not automatically removed.
          default: false

    AddPolicyResponse:
      type: object
      properties:
        updated_indices:
          type: integer
          description: The number of indexes that were successfully updated with the ISM policy.
        failures:
          type: boolean
          description: Indicates whether there were any failures while applying the policy. A value of `false` means all operations completed successfully.
        failed_indices:
          type: array
          description: A list of indexes that failed to be updated. If empty, no failures occurred.
          items:
            type: string

    VersionConflict:
      type: object
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  reason:
                    type: string
                  index:
                    type: string
                  shard:
                    type: integer
                  index_uuid:
                    type: string
            type:
              type: string
            reason:
              type: string
            index:
              type: string
            shard:
              type: integer
            index_uuid:
              type: string
        status:
          type: integer

    RemovePolicyResponse:
      type: object
      properties:
        updated_indices:
          type: integer
          description: The number of indexes from which the ISM policy was successfully removed.
        failures:
          type: boolean
          description: Indicates whether any errors occurred during the removal operation.
        failed_indices:
          type: array
          description: A list of index names that failed to have their ISM policies removed. Empty if there were no failures.
          items:
            type: string

    IndexNotFoundException:
      type: object
      properties:
        error:
          type: object
          properties:
            root_cause:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  reason:
                    type: string
                  index:
                    type: string
                  resource.id:
                    type: string
                  resource.type:
                    type: string
                  index_uuid:
                    type: string
            type:
              type: string
            reason:
              type: string
            index:
              type: string
            resource.id:
              type: string
            resource.type:
              type: string
            index_uuid:
              type: string
        status:
          type: integer

    ChangePolicyRequest:
      type: object
      required:
        - policy_id
      properties:
        policy_id:
          type: string
          description: The ID of the policy to apply to the index. This can refer to a new policy or a new version of an existing policy.
        state:
          type: string
          description: The state that the managed index should transition to after the policy change takes effect.
        include:
          type: array
          description: A filter to limit the policy change to managed indexes currently in a specific state.
          items:
            type: object
            properties:
              state:
                type: string
                description: A list of state names. The policy change only applies if the index is currently in one of the specified states.

    ChangePolicyResponse:
      type: object
      properties:
        updated_indices:
          type: integer
          description: The number of indexes that successfully had their ISM policy changed.
        failures:
          type: boolean
          description: Indicates whether any errors occurred while applying the policy change.
        failed_indices:
          type: array
          description: A list of indexes for which the policy update failed. An empty array (`[]`) means no indexes failed to update.
          items:
            type: string

    RetryFailedIndexResponse:
      type: object
      properties:
        updated_indices:
          type: integer
          description: The number of indexes for which the retry was successfully initiated.
        failures:
          type: boolean
          description: Indicates whether there were any failures while processing the request.
        failed_indices:
          type: array
          description: |
            A list of indexes that failed to be retried, including their names, UUIDs, and failure reasons.
            Empty if there are no failures.
          items:
            type: string

    ExplainIndexResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/IndexExplanation'
      properties:
        total_managed_indices:
          type: integer
          description: The number of indexes currently managed by ISM in the cluster.

    IndexExplanation:
      type: object
      properties:
        "index.plugins.index_state_management.policy_id":
          type: string
          description: The policy ID assigned to the index (legacy key for backward compatibility).
        "index.opendistro.index_state_management.policy_id":
          type: string
          description: Another legacy key showing the assigned policy ID.
        index:
          type: string
          description: The name of the index being managed.
        index_uuid:
          type: string
          description: This is the universally unique identifier for the index.
        policy_id:
          type: string
          description: The id of the ISM policy currently applied to the index.
        policy_seq_no:
          type: integer
          description: This is the sequence number of the policy used for optimistic concurrency control.
        policy_primary_term:
          type: integer
          description: This is the primary term of the policy, also used for concurrency control.
        rolled_over:
          type: boolean
          description: This indicates whether the index has been rolled over.
        index_creation_date:
          type: integer
          format: int64
          description: The timestamp (epoch) when the index was created.
        state:
          type: object
          properties:
            name:
              type: string
              description: This is the name of the active state in the policy.
            start_time:
              type: integer
              format: int64
              description: This refers to the time when the index entered the current state.
        action:
          type: object
          properties:
            name:
              type: string
              description: This refers to the name of the action.
            start_time:
              type: integer
              format: int64
              description: This is the time when the action started.
            index:
              type: integer
              description: This is the position of the action within the state's action list.
            failed:
              type: boolean
              description: Specifies whether the action failed.
            consumed_retries:
              type: integer
              description: This refers to the number of retry attempts consumed.
            last_retry_time:
              type: integer
              format: int64
              description: The time of the last retry attempt.
        step:
          type: object
          properties:
            name:
              type: string
              description: This is the name of the current step.
            start_time:
              type: integer
              format: int64
              description: This is the time when the current step began.
            step_status:
              type: string
              description: This refers to the status of the current step.
        retry_info:
          type: object
          properties:
            failed:
              type: boolean
              description: Specifies whether the retry attempts have failed.
            consumed_retries:
              type: integer
              description: This is the number of retries used for the failed step.
        info:
          type: object
          properties:
            message:
              type: string
              description: This is an error or informative message (e.g., missing required setting).
        enabled:
          type: boolean
          description: Specifies whether ISM is currently enabled for this index.
        validate:
          type: object
          properties:
            validation_message:
              type: string
              description: This describes the result of the validation.
            validation_status:
              type: string
              description: This refers to the status of the validation.

    DeletePolicyResponse:
      type: object
      properties:
        _index:
          type: string
          description: The internal index where the policy document was stored (usually `.opendistro-ism-config`).
        _id:
          type: string
          description: The unique identifier of the policy that was deleted.
        _version:
          type: integer
          description: The new version number of the document after deletion.
        result:
          type: string
          description: Indicates the outcome of the operation. In this case, deleted confirms successful deletion.
        forced_refresh:
          type: boolean
          description: Specifies whether a refresh was forced to make the deletion visible to search immediately.
        _shards:
          type: object
          properties:
            total:
              type: integer
              description: The total number of shards involved in the deletion.
            successful:
              type: integer
              description: The number of shards where the deletion was successful.
            failed:
              type: integer
              description: The number of shards where the deletion failed.
        _seq_no:
          type: integer
          description: The sequence number assigned to the operation for internal tracking.
        _primary_term:
          type: integer
          description: The primary term assigned for concurrency control in OpenSearch.

  responses:
    PolicyBadRequest:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          examples:
            missingText:
              value:
                error:
                  root_cause:
                    - type: "illegal_argument_exception"
                      reason: "Missing policy ID"
                  type: "illegal_argument_exception"
                  reason: "Missing policy ID"
                status: 400

    PolicyBadRequestGet:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          examples:
            missingText:
              value:
                error:
                  root_cause:
                    - type: "illegal_argument_exception"
                      reason: "request [/_plugins/_ism/policies/policy_1] contains unrecognized parameter: [flat_settings]"
                  type: "illegal_argument_exception"
                  reason: "request [/_plugins/_ism/policies/policy_1] contains unrecognized parameter: [flat_settings]"
                status: 400

    PolicyBadRequestUpdate:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          examples:
            missingText:
              value:
                error:
                  root_cause:
                    - type: "parse_exception"
                      reason: "request body is required"
                  type: "parse_exception"
                  reason: "request body is required"
                status: 400

    PolicyBadRequestRemove:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "illegal_argument_exception"
                  reason: "Missing indices"
              type: "illegal_argument_exception"
              reason: "Missing indices"
            status: 400

    PolicyBadRequestExplain:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          examples:
            missingText:
              value:
                error:
                  root_cause:
                    - type: "action_request_validation_exception"
                      reason: "Validation Failed: 1: no documents to get;"
                  type: "action_request_validation_exception"
                  reason: "Validation Failed: 1: no documents to get;"
                status: 400

    PolicyBadRequestDelete:
      description: Response to report a bad request
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          example:

    PolicyNotFound:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "status_exception"
                  reason: "Could not find policy=policy_10"
              type: "status_exception"
              reason: "Could not find policy=policy_10"
            status: 404

    PolicyNotFoundGet:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "status_exception"
                  reason: "Policy not found"
              type: "status_exception"
              reason: "Policy not found"
            status: 404

    PolicyNotFoundRemove:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndexNotFoundException'
          example:
            error:
              root_cause:
                - type: "index_not_found_exception"
                  reason: "no such index [wazuh-alerts-4.x-2025.03.40]"
                  index: "wazuh-alerts-4.x-2025.03.40"
                  resource.id: "wazuh-alerts-4.x-2025.03.40"
                  resource.type: "index_or_alias"
                  index_uuid: "_na_"
              type: "index_not_found_exception"
              reason: "no such index [wazuh-alerts-4.x-2025.03.40]"
              index: "wazuh-alerts-4.x-2025.03.40"
              resource.id: "wazuh-alerts-4.x-2025.03.40"
              resource.type: "index_or_alias"
              index_uuid: "_na_"
            status: 404

    PolicyNotFoundDelete:
      description: Response to report a request not found
      content:
        application/json:
          schema:
            $ref: 'spec.yml#/components/schemas/SecurityError'
          example:
            error:
              root_cause:
                - type: "status_exception"
                  reason: "Policy policy_3 is not found"
              type: "status_exception"
              reason: "Policy policy_3 is not found"
            status: 404

    VersionConflict:
      description: Response to report a version conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VersionConflict'
          example:
            error:
              root_cause:
                - type: "version_conflict_engine_exception"
                  reason: "[policy_1]: version conflict, document already exists (current version [1])"
                  index: ".opendistro-ism-config"
                  shard: "0"
                  index_uuid: "Bcf6j1bkSKG5-sKZnV11sg"
              type: "version_conflict_engine_exception"
              reason: "[policy_1]: version conflict, document already exists (current version [1])"
              index: ".opendistro-ism-config"
              shard: "0"
              index_uuid: "Bcf6j1bkSKG5-sKZnV11sg"
            status: 409

    VersionConflictUpdate:
      description: Response to report a version conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VersionConflict'
          example:
            error:
              root_cause:
                - type: "version_conflict_engine_exception"
                  reason: "[policy_1]: version conflict, required seqNo [140840], primary term [23]. current document has seqNo [144943] and primary term [8]"
                  index: ".opendistro-ism-config"
                  shard: "0"
                  index_uuid: "Bcf6j1bkSKG5-sKZnV11sg"
              type: "version_conflict_engine_exception"
              reason: "[policy_1]: version conflict, required seqNo [140840], primary term [23]. current document has seqNo [144943] and primary term [8]"
              index: ".opendistro-ism-config"
              shard: "0"
              index_uuid: "Bcf6j1bkSKG5-sKZnV11sg"
            status: 409
